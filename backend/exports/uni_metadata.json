{
  "projects": [
    {
      "id": "claims_processing",
      "name": "claims_processing",
      "description": "claims_processing dbt project"
    },
    {
      "id": "customer_risk",
      "name": "customer_risk",
      "description": "customer_risk dbt project"
    },
    {
      "id": "policy_management",
      "name": "policy_management",
      "description": "policy_management dbt project"
    }
  ],
  "models": [
    {
      "id": "c1",
      "name": "stg_claims",
      "project": "claims_processing",
      "description": "The `stg_claims` dbt model in the `claims_processing` project serves as a staging layer for raw claims data. It transforms the source data, likely from a claims database, by selecting relevant columns and applying initial data type conversions. This model prepares the raw claims data for further processing and analysis by standardizing the data structure and ensuring data quality. Key transformations may include casting data types, renaming columns for consistency, and potentially filtering out invalid or irrelevant claims. This staging model is a crucial step in the data pipeline, providing a clean and consistent foundation for subsequent models that perform more complex business logic and aggregations.",
      "columns": [],
      "sql": "",
      "materialized": "view",
      "schema": "staging",
      "file_path": "models/staging/stg_claims.sql",
      "database": "insurance_data",
      "ai_description": "The `stg_claims` dbt model in the `claims_processing` project serves as a staging layer for raw claims data. It transforms the source data, likely from a claims database, by selecting relevant columns and applying initial data type conversions. This model prepares the raw claims data for further processing and analysis by standardizing the data structure and ensuring data quality. Key transformations may include casting data types, renaming columns for consistency, and potentially filtering out invalid or irrelevant claims. This staging model is a crucial step in the data pipeline, providing a clean and consistent foundation for subsequent models that perform more complex business logic and aggregations.",
      "tags": []
    },
    {
      "id": "c2",
      "name": "stg_adjusters",
      "project": "claims_processing",
      "description": "The `stg_adjusters` dbt model within the `claims_processing` project serves to stage and prepare adjuster data for downstream analysis. It transforms raw adjuster information, likely sourced from a database or external system, into a standardized format. This model cleanses and structures the data, potentially including tasks like data type conversions, renaming columns, and handling missing values. Ultimately, `stg_adjusters` provides a clean, reliable, and easily queryable dataset of adjusters, forming a crucial foundation for more complex claims analysis and reporting.",
      "columns": [],
      "sql": "",
      "materialized": "view",
      "schema": "staging",
      "file_path": "models/staging/stg_adjusters.sql",
      "database": "insurance_data",
      "ai_description": "The `stg_adjusters` dbt model within the `claims_processing` project serves to stage and prepare adjuster data for downstream analysis. It transforms raw adjuster information, likely sourced from a database or external system, into a standardized format. This model cleanses and structures the data, potentially including tasks like data type conversions, renaming columns, and handling missing values. Ultimately, `stg_adjusters` provides a clean, reliable, and easily queryable dataset of adjusters, forming a crucial foundation for more complex claims analysis and reporting.",
      "tags": []
    },
    {
      "id": "c3",
      "name": "int_claims_enriched",
      "project": "claims_processing",
      "description": "Here's a concise description of the `int_claims_enriched` dbt model:\n\nThis dbt model, part of the `claims_processing` project, enriches claim data by integrating information from various sources. It processes raw claim data, likely joining it with dimensions like customer profiles, policy details, and potentially fraud indicators. The model produces a consolidated, enriched claims dataset, making it ready for downstream analysis and reporting. Key transformations likely include data type conversions, calculated fields (e.g., claim age, loss ratios), and the application of business rules to enhance data quality and analytical capabilities.",
      "columns": [],
      "sql": "",
      "materialized": "view",
      "schema": "intermediate",
      "file_path": "models/intermediate/int_claims_enriched.sql",
      "database": "insurance_data",
      "ai_description": "Here's a concise description of the `int_claims_enriched` dbt model:\n\nThis dbt model, part of the `claims_processing` project, enriches claim data by integrating information from various sources. It processes raw claim data, likely joining it with dimensions like customer profiles, policy details, and potentially fraud indicators. The model produces a consolidated, enriched claims dataset, making it ready for downstream analysis and reporting. Key transformations likely include data type conversions, calculated fields (e.g., claim age, loss ratios), and the application of business rules to enhance data quality and analytical capabilities.",
      "tags": []
    },
    {
      "id": "c4",
      "name": "mart_claims_analysis",
      "project": "claims_processing",
      "description": "The `mart_claims_analysis` dbt model within the `claims_processing` project is designed to provide a consolidated view of claims data for analytical purposes. It aggregates and transforms raw claims data, likely from various source tables, to create a user-friendly dataset. This model serves as a key component in the data pipeline, enabling downstream analysis and reporting on claims trends, performance, and key metrics. Important transformations likely include calculating claim durations, categorizing claims by type, and deriving key performance indicators (KPIs) relevant to claims processing efficiency.",
      "columns": [],
      "sql": "",
      "materialized": "table",
      "schema": "mart",
      "file_path": "models/mart/mart_claims_analysis.sql",
      "database": "insurance_data",
      "ai_description": "The `mart_claims_analysis` dbt model within the `claims_processing` project is designed to provide a consolidated view of claims data for analytical purposes. It aggregates and transforms raw claims data, likely from various source tables, to create a user-friendly dataset. This model serves as a key component in the data pipeline, enabling downstream analysis and reporting on claims trends, performance, and key metrics. Important transformations likely include calculating claim durations, categorizing claims by type, and deriving key performance indicators (KPIs) relevant to claims processing efficiency.",
      "tags": []
    },
    {
      "id": "c5",
      "name": "stg_customers",
      "project": "claims_processing",
      "description": "The `stg_customers` dbt model in the `claims_processing` project serves as a staging layer for customer data. It selects all columns from the `customers` source table and performs type conversions for `date_of_birth` and `joining_date` to the DATE data type. This model also derives several key customer attributes, including `customer_name`, `age`, and `months_as_customer`, using string concatenation and date difference calculations. Finally, it adds metadata fields like `dbt_updated_at` and `_dbt_source_project` to track data lineage and source information, preparing the data for further transformations and analysis downstream.",
      "columns": [
        {
          "name": "customer_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for each customer, sourced from the `customers` table.  It's a VARCHAR data type, ensuring flexibility in handling various customer ID formats. This ID is crucial for linking customer information across different tables and is used throughout the claims processing project.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for each customer, sourced from the `customers` table.  It's a VARCHAR data type, ensuring flexibility in handling various customer ID formats. This ID is crucial for linking customer information across different tables and is used throughout the claims processing project."
        },
        {
          "name": "first_name",
          "type": "VARCHAR",
          "description": "This column stores the customer's first name as a string. It's directly sourced from the `customers` table and used in the `customer_name` derivation within the `stg_customers` model. This data is essential for identifying and referencing individual customers.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's first name as a string. It's directly sourced from the `customers` table and used in the `customer_name` derivation within the `stg_customers` model. This data is essential for identifying and referencing individual customers."
        },
        {
          "name": "last_name",
          "type": "VARCHAR",
          "description": "This column stores the customer's last name as a string.  It's used in the `stg_customers` model to store customer information from the source table.  The `last_name` is concatenated with the `first_name` to create the `customer_name` field.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's last name as a string.  It's used in the `stg_customers` model to store customer information from the source table.  The `last_name` is concatenated with the `first_name` to create the `customer_name` field."
        },
        {
          "name": "email",
          "type": "VARCHAR",
          "description": "This column stores the customer's email address as a string. It's directly sourced from the `customers` table and included in the staging layer for customer data. This field is used for customer identification and communication.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's email address as a string. It's directly sourced from the `customers` table and included in the staging layer for customer data. This field is used for customer identification and communication."
        },
        {
          "name": "phone",
          "type": "VARCHAR",
          "description": "The `phone` column in the `stg_customers` table stores the customer's phone number as a string. This column is directly sourced from the `customers` table and is included to provide contact information for each customer within the staging layer. No transformations or calculations are performed on this field within this model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `phone` column in the `stg_customers` table stores the customer's phone number as a string. This column is directly sourced from the `customers` table and is included to provide contact information for each customer within the staging layer. No transformations or calculations are performed on this field within this model."
        },
        {
          "name": "address",
          "type": "VARCHAR",
          "description": "The `address` column in the `stg_customers` table stores the customer's street address as a VARCHAR string. This column is directly sourced from the `customers` table and is included to provide customer location information for downstream analysis. No transformations or calculations are performed on this column within this staging model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `address` column in the `stg_customers` table stores the customer's street address as a VARCHAR string. This column is directly sourced from the `customers` table and is included to provide customer location information for downstream analysis. No transformations or calculations are performed on this column within this staging model."
        },
        {
          "name": "city",
          "type": "VARCHAR",
          "description": "This column stores the city of the customer's address as a string.  It's directly sourced from the `customers` table and used to represent the customer's location within the `stg_customers` staging model.  This information is essential for customer segmentation and location-based analysis.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the city of the customer's address as a string.  It's directly sourced from the `customers` table and used to represent the customer's location within the `stg_customers` staging model.  This information is essential for customer segmentation and location-based analysis."
        },
        {
          "name": "state",
          "type": "VARCHAR",
          "description": "The `state` column in the `stg_customers` table stores the customer's state of residence as a VARCHAR string. This column is directly sourced from the `customers` table and is used to identify the customer's location for segmentation and analysis. No transformations or calculations are performed on this column within this model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `state` column in the `stg_customers` table stores the customer's state of residence as a VARCHAR string. This column is directly sourced from the `customers` table and is used to identify the customer's location for segmentation and analysis. No transformations or calculations are performed on this column within this model."
        },
        {
          "name": "zip_code",
          "type": "INTEGER",
          "description": "This column stores the customer's postal code as an integer.  It's used to represent the customer's address within the `stg_customers` staging model, providing location information for analysis.  This data is sourced directly from the `customers` table.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's postal code as an integer.  It's used to represent the customer's address within the `stg_customers` staging model, providing location information for analysis.  This data is sourced directly from the `customers` table."
        },
        {
          "name": "date_of_birth",
          "type": "DATE",
          "description": "This column stores the customer's date of birth, converted to a DATE data type.  It's used to calculate the `age` of the customer within the `stg_customers` model. This information is essential for customer segmentation and analysis.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's date of birth, converted to a DATE data type.  It's used to calculate the `age` of the customer within the `stg_customers` model. This information is essential for customer segmentation and analysis."
        },
        {
          "name": "gender",
          "type": "VARCHAR",
          "description": "This column stores the customer's gender as a string value. It's included in the `stg_customers` staging model to preserve customer demographic information from the source data. This data is essential for segmentation and analysis of customer characteristics.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's gender as a string value. It's included in the `stg_customers` staging model to preserve customer demographic information from the source data. This data is essential for segmentation and analysis of customer characteristics."
        },
        {
          "name": "joining_date",
          "type": "DATE",
          "description": "This column stores the date when a customer joined the company.  In the `stg_customers` model, this `joining_date` is cast to a DATE data type from the source data.  It's used to calculate `months_as_customer`, providing insight into customer tenure.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the date when a customer joined the company.  In the `stg_customers` model, this `joining_date` is cast to a DATE data type from the source data.  It's used to calculate `months_as_customer`, providing insight into customer tenure."
        },
        {
          "name": "customer_name",
          "type": "VARCHAR",
          "description": "This column, `customer_name`, stores the full name of the customer. It's derived by concatenating the `first_name` and `last_name` fields from the source data within the `stg_customers` model. This provides a readily available, human-readable customer identifier for analysis.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `customer_name`, stores the full name of the customer. It's derived by concatenating the `first_name` and `last_name` fields from the source data within the `stg_customers` model. This provides a readily available, human-readable customer identifier for analysis."
        },
        {
          "name": "age",
          "type": "BIGINT",
          "description": "The `age` column in the `stg_customers` table stores the customer's age, calculated as the difference in years between their `date_of_birth` and the current date. This derived field provides a readily available age value for customer segmentation and analysis within the claims processing project.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `age` column in the `stg_customers` table stores the customer's age, calculated as the difference in years between their `date_of_birth` and the current date. This derived field provides a readily available age value for customer segmentation and analysis within the claims processing project."
        },
        {
          "name": "months_as_customer",
          "type": "BIGINT",
          "description": "`months_as_customer` stores the number of months a customer has been a customer, calculated as the difference in months between their `joining_date` and the current date. This column is derived within the `stg_customers` model to provide a key customer attribute for analysis, enabling segmentation and understanding of customer tenure. The data type is BIGINT.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`months_as_customer` stores the number of months a customer has been a customer, calculated as the difference in months between their `joining_date` and the current date. This column is derived within the `stg_customers` model to provide a key customer attribute for analysis, enabling segmentation and understanding of customer tenure. The data type is BIGINT."
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "This column, `dbt_updated_at`, stores the timestamp indicating when the `stg_customers` model was last refreshed. It's a metadata field used for data lineage, allowing you to track the freshness of the customer data within this staging layer. The value is generated using `CURRENT_TIMESTAMP` during the model's execution.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `dbt_updated_at`, stores the timestamp indicating when the `stg_customers` model was last refreshed. It's a metadata field used for data lineage, allowing you to track the freshness of the customer data within this staging layer. The value is generated using `CURRENT_TIMESTAMP` during the model's execution."
        },
        {
          "name": "_dbt_source_project",
          "type": "VARCHAR",
          "description": "This column, `_dbt_source_project`, stores the name of the dbt project from which the customer data originates, specifically \"customer_risk\". This metadata field is added to track the source of the data within the `stg_customers` staging model, aiding in data lineage and understanding the origin of the customer information.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `_dbt_source_project`, stores the name of the dbt project from which the customer data originates, specifically \"customer_risk\". This metadata field is added to track the source of the data within the `stg_customers` staging model, aiding in data lineage and understanding the origin of the customer information."
        }
      ],
      "sql": "{{\n    config(\n        materialized='view',\n        tags=['staging', 'customers', 'daily']\n    )\n}}\n\nWITH source AS (\n    SELECT * FROM {{ ref('customers') }}\n)\n\nSELECT\n    customer_id,\n    first_name,\n    last_name,\n    email,\n    phone,\n    address,\n    city,\n    state,\n    zip_code,\n    CAST(date_of_birth AS DATE) AS date_of_birth,\n    gender,\n    CAST(joining_date AS DATE) AS joining_date,\n    -- Derived fields\n    CONCAT(first_name, ' ', last_name) AS customer_name,\n    DATEDIFF('year', date_of_birth, CURRENT_DATE()) AS age,\n    DATEDIFF('month', joining_date, CURRENT_DATE()) AS months_as_customer,\n    -- Metadata fields\n    CURRENT_TIMESTAMP AS dbt_updated_at,\n    'customer_risk' AS _dbt_source_project\nFROM source",
      "materialized": "view",
      "schema": "staging",
      "file_path": "models/staging/stg_customers.sql",
      "database": "insurance_data",
      "tags": [
        "staging",
        "customers",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.customer_risk.stg_customers",
        "metadata": {
          "type": "VIEW",
          "schema": "claims_processing_staging",
          "name": "stg_customers",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `stg_customers` dbt model in the `claims_processing` project serves as a staging layer for customer data. It selects all columns from the `customers` source table and performs type conversions for `date_of_birth` and `joining_date` to the DATE data type. This model also derives several key customer attributes, including `customer_name`, `age`, and `months_as_customer`, using string concatenation and date difference calculations. Finally, it adds metadata fields like `dbt_updated_at` and `_dbt_source_project` to track data lineage and source information, preparing the data for further transformations and analysis downstream."
    },
    {
      "id": "c6",
      "name": "stg_risk_factors",
      "project": "claims_processing",
      "description": "The `stg_risk_factors` dbt model in the `claims_processing` project serves as a staging layer for risk factor data. It transforms data from the `risk_factors` source, casting the `assessment_date` and `last_assessment` columns to the DATE data type. This model calculates the `days_since_last_assessment` using a date difference and derives a `credit_rating` based on the `credit_score`. Finally, it adds metadata fields like `dbt_updated_at` and `_dbt_source_project`, preparing the data for downstream analysis and reporting on customer risk profiles.",
      "columns": [
        {
          "name": "risk_id",
          "type": "VARCHAR",
          "description": "`risk_id` is a VARCHAR column that uniquely identifies a specific risk factor record within the `stg_risk_factors` staging model. This ID is sourced from the `risk_factors` source and serves as a primary key for tracking individual risk assessments. It's crucial for linking risk data to customer profiles and tracking changes over time.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "`risk_id` is a VARCHAR column that uniquely identifies a specific risk factor record within the `stg_risk_factors` staging model. This ID is sourced from the `risk_factors` source and serves as a primary key for tracking individual risk assessments. It's crucial for linking risk data to customer profiles and tracking changes over time."
        },
        {
          "name": "customer_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for a customer, represented as a string.  Within the `stg_risk_factors` model, this `customer_id` links risk factor information to specific customer profiles.  It's a key field for joining this staging data with other customer-related tables.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for a customer, represented as a string.  Within the `stg_risk_factors` model, this `customer_id` links risk factor information to specific customer profiles.  It's a key field for joining this staging data with other customer-related tables."
        },
        {
          "name": "assessment_date",
          "type": "DATE",
          "description": "`assessment_date` stores the date when a risk assessment was performed, sourced from the `risk_factors` table. This date is crucial for calculating the `days_since_last_assessment` and understanding the recency of risk evaluations within the `stg_risk_factors` model. This column is essential for tracking changes in risk factors over time.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`assessment_date` stores the date when a risk assessment was performed, sourced from the `risk_factors` table. This date is crucial for calculating the `days_since_last_assessment` and understanding the recency of risk evaluations within the `stg_risk_factors` model. This column is essential for tracking changes in risk factors over time."
        },
        {
          "name": "credit_score",
          "type": "INTEGER",
          "description": "This column stores a customer's credit score as an integer.  It's used within the `stg_risk_factors` model to derive a `credit_rating` and is a key indicator of a customer's financial risk profile. The credit score is likely sourced from an external system and used in conjunction with other risk factors.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores a customer's credit score as an integer.  It's used within the `stg_risk_factors` model to derive a `credit_rating` and is a key indicator of a customer's financial risk profile. The credit score is likely sourced from an external system and used in conjunction with other risk factors."
        },
        {
          "name": "claim_frequency",
          "type": "VARCHAR",
          "description": "`claim_frequency` stores a string representation of how often a customer files claims. This column likely represents a categorical value or a calculated rate related to the frequency of claims, used to assess a customer's risk profile. The `VARCHAR` data type suggests the data might be a label (e.g., \"High\", \"Low\") or a string representation of a calculated frequency.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`claim_frequency` stores a string representation of how often a customer files claims. This column likely represents a categorical value or a calculated rate related to the frequency of claims, used to assess a customer's risk profile. The `VARCHAR` data type suggests the data might be a label (e.g., \"High\", \"Low\") or a string representation of a calculated frequency."
        },
        {
          "name": "risk_score",
          "type": "DOUBLE",
          "description": "The `risk_score` column in the `stg_risk_factors` table stores a numerical value representing the calculated risk associated with a customer. This score is a key metric for assessing customer risk profiles, likely derived from factors like credit score and claim frequency, as indicated by the SQL context.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `risk_score` column in the `stg_risk_factors` table stores a numerical value representing the calculated risk associated with a customer. This score is a key metric for assessing customer risk profiles, likely derived from factors like credit score and claim frequency, as indicated by the SQL context."
        },
        {
          "name": "previous_claims_count",
          "type": "INTEGER",
          "description": "`previous_claims_count` stores the number of claims a customer has filed prior to the current assessment. This integer value is a key risk factor used in the `stg_risk_factors` model to assess a customer's risk profile, potentially influencing risk scores and categories. The value is likely sourced from the `risk_factors` source data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`previous_claims_count` stores the number of claims a customer has filed prior to the current assessment. This integer value is a key risk factor used in the `stg_risk_factors` model to assess a customer's risk profile, potentially influencing risk scores and categories. The value is likely sourced from the `risk_factors` source data."
        },
        {
          "name": "risk_category",
          "type": "VARCHAR",
          "description": "The `risk_category` column in the `stg_risk_factors` table stores a categorical assessment of customer risk. This column is derived from the `risk_score` and other factors, providing a simplified view of a customer's risk profile for easier analysis and reporting. The specific logic for determining the category is not explicitly stated, but it is likely based on thresholds applied to the `risk_score`.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `risk_category` column in the `stg_risk_factors` table stores a categorical assessment of customer risk. This column is derived from the `risk_score` and other factors, providing a simplified view of a customer's risk profile for easier analysis and reporting. The specific logic for determining the category is not explicitly stated, but it is likely based on thresholds applied to the `risk_score`."
        },
        {
          "name": "last_assessment",
          "type": "DATE",
          "description": "`last_assessment` stores the date of the most recent risk assessment for a customer.  This DATE column is used to calculate the `days_since_last_assessment`, providing insight into the recency of risk evaluations.  The value is derived from the `risk_factors` source and cast to the DATE data type within the staging model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`last_assessment` stores the date of the most recent risk assessment for a customer.  This DATE column is used to calculate the `days_since_last_assessment`, providing insight into the recency of risk evaluations.  The value is derived from the `risk_factors` source and cast to the DATE data type within the staging model."
        },
        {
          "name": "assessment_source",
          "type": "VARCHAR",
          "description": "This column, `assessment_source`, stores the origin or source of the risk factor assessment as a text string.  It helps identify where the risk data originated, providing context for the assessment. This is useful for understanding the reliability or type of source contributing to the risk profile.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `assessment_source`, stores the origin or source of the risk factor assessment as a text string.  It helps identify where the risk data originated, providing context for the assessment. This is useful for understanding the reliability or type of source contributing to the risk profile."
        },
        {
          "name": "days_since_last_assessment",
          "type": "BIGINT",
          "description": "This column stores the number of days elapsed since the last risk assessment.  It's calculated as the difference between the `assessment_date` and `last_assessment` dates, providing a time-based measure of how long it's been since the customer's risk profile was last evaluated. This helps in understanding the recency of risk information.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the number of days elapsed since the last risk assessment.  It's calculated as the difference between the `assessment_date` and `last_assessment` dates, providing a time-based measure of how long it's been since the customer's risk profile was last evaluated. This helps in understanding the recency of risk information."
        },
        {
          "name": "credit_rating",
          "type": "VARCHAR",
          "description": "This column, `credit_rating`, stores a customer's creditworthiness as a string value. It's derived within the `stg_risk_factors` model based on the `credit_score`, categorizing customers into 'POOR' or 'VERY_POOR' ratings. This rating helps assess customer risk profiles for claims processing.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `credit_rating`, stores a customer's creditworthiness as a string value. It's derived within the `stg_risk_factors` model based on the `credit_score`, categorizing customers into 'POOR' or 'VERY_POOR' ratings. This rating helps assess customer risk profiles for claims processing."
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "`dbt_updated_at` stores the timestamp when the `stg_risk_factors` model was last refreshed. This column provides a record of the data's freshness, allowing users to understand when the risk factor information was last updated and to track data lineage.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`dbt_updated_at` stores the timestamp when the `stg_risk_factors` model was last refreshed. This column provides a record of the data's freshness, allowing users to understand when the risk factor information was last updated and to track data lineage."
        },
        {
          "name": "_dbt_source_project",
          "type": "VARCHAR",
          "description": "This column, `_dbt_source_project`, stores the name of the dbt project from which the source data originated.  It's a metadata field used to track the source of the risk factor data within the `stg_risk_factors` model. This helps with data lineage and understanding the data's origin for analysis.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `_dbt_source_project`, stores the name of the dbt project from which the source data originated.  It's a metadata field used to track the source of the risk factor data within the `stg_risk_factors` model. This helps with data lineage and understanding the data's origin for analysis."
        }
      ],
      "sql": "{{\n    config(\n        materialized='view',\n        tags=['staging', 'risk', 'daily']\n    )\n}}\n\nWITH source AS (\n    SELECT * FROM {{ ref('risk_factors') }}\n)\n\nSELECT\n    risk_id,\n    customer_id,\n    CAST(assessment_date AS DATE) AS assessment_date,\n    credit_score,\n    claim_frequency,\n    risk_score,\n    previous_claims_count,\n    risk_category,\n    CAST(last_assessment AS DATE) AS last_assessment,\n    assessment_source,\n    -- Derived fields\n    DATEDIFF('day', last_assessment, assessment_date) AS days_since_last_assessment,\n    CASE\n        WHEN credit_score >= 750 THEN 'EXCELLENT'\n        WHEN credit_score >= 700 THEN 'GOOD'\n        WHEN credit_score >= 650 THEN 'FAIR'\n        WHEN credit_score >= 600 THEN 'POOR'\n        ELSE 'VERY_POOR'\n    END AS credit_rating,\n    -- Metadata fields\n    CURRENT_TIMESTAMP AS dbt_updated_at,\n    'customer_risk' AS _dbt_source_project\nFROM source",
      "materialized": "view",
      "schema": "staging",
      "file_path": "models/staging/stg_risk_factors.sql",
      "database": "insurance_data",
      "tags": [
        "staging",
        "risk",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.customer_risk.stg_risk_factors",
        "metadata": {
          "type": "VIEW",
          "schema": "claims_processing_staging",
          "name": "stg_risk_factors",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `stg_risk_factors` dbt model in the `claims_processing` project serves as a staging layer for risk factor data. It transforms data from the `risk_factors` source, casting the `assessment_date` and `last_assessment` columns to the DATE data type. This model calculates the `days_since_last_assessment` using a date difference and derives a `credit_rating` based on the `credit_score`. Finally, it adds metadata fields like `dbt_updated_at` and `_dbt_source_project`, preparing the data for downstream analysis and reporting on customer risk profiles."
    },
    {
      "id": "c7",
      "name": "int_customer_risk_enriched",
      "project": "claims_processing",
      "description": "The `int_customer_risk_enriched` dbt model in the `claims_processing` project enriches customer data with risk assessment information. It joins customer details from `stg_customers` with risk factors from `stg_risk_factors`, linking them via `customer_id`. This model produces a comprehensive view of each customer, including demographic information, risk scores, and derived customer segments. Key transformations include an age-adjusted risk score and customer segmentation based on tenure and risk category, providing valuable insights for claims processing and customer management. This intermediate model serves as a foundation for downstream analyses and reporting, offering a consolidated and enriched customer profile.",
      "columns": [
        {
          "name": "customer_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for a customer, linking customer details with their associated risk factors.  As a `VARCHAR` in the `int_customer_risk_enriched` model, it facilitates joining customer data from `stg_customers` with risk information from `stg_risk_factors` to create a comprehensive customer profile. This `customer_id` is crucial for identifying and analyzing individual customer risk profiles within the claims processing context.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for a customer, linking customer details with their associated risk factors.  As a `VARCHAR` in the `int_customer_risk_enriched` model, it facilitates joining customer data from `stg_customers` with risk information from `stg_risk_factors` to create a comprehensive customer profile. This `customer_id` is crucial for identifying and analyzing individual customer risk profiles within the claims processing context."
        },
        {
          "name": "customer_name",
          "type": "VARCHAR",
          "description": "This column stores the customer's full name, retrieved from the `stg_customers` source. It's a key piece of customer demographic information within the `int_customer_risk_enriched` model. This data is essential for identifying and understanding individual customers within the claims processing context.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's full name, retrieved from the `stg_customers` source. It's a key piece of customer demographic information within the `int_customer_risk_enriched` model. This data is essential for identifying and understanding individual customers within the claims processing context."
        },
        {
          "name": "email",
          "type": "VARCHAR",
          "description": "This column stores the customer's email address as a string. It's included to provide contact information for each customer within the enriched customer risk profile. This allows for direct communication and customer identification within the claims processing context.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's email address as a string. It's included to provide contact information for each customer within the enriched customer risk profile. This allows for direct communication and customer identification within the claims processing context."
        },
        {
          "name": "phone",
          "type": "VARCHAR",
          "description": "The `phone` column stores the customer's phone number as a string. This column is used to provide customer contact information within the enriched customer risk profile. It allows for direct communication with customers for claims processing and customer management.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `phone` column stores the customer's phone number as a string. This column is used to provide customer contact information within the enriched customer risk profile. It allows for direct communication with customers for claims processing and customer management."
        },
        {
          "name": "address",
          "type": "VARCHAR",
          "description": "The `address` column stores the customer's street address as a string. This information is pulled from the `stg_customers` source and provides a key piece of customer demographic data within the enriched customer profile. This address is used for customer identification and potentially for risk assessment, though no direct calculation logic is applied to this column within this model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `address` column stores the customer's street address as a string. This information is pulled from the `stg_customers` source and provides a key piece of customer demographic data within the enriched customer profile. This address is used for customer identification and potentially for risk assessment, though no direct calculation logic is applied to this column within this model."
        },
        {
          "name": "city",
          "type": "VARCHAR",
          "description": "This column stores the customer's city of residence, obtained from the `stg_customers` source.  It provides location information essential for understanding customer demographics and potentially for risk analysis within the `int_customer_risk_enriched` model. This data is used alongside other customer details to build a comprehensive customer profile.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's city of residence, obtained from the `stg_customers` source.  It provides location information essential for understanding customer demographics and potentially for risk analysis within the `int_customer_risk_enriched` model. This data is used alongside other customer details to build a comprehensive customer profile."
        },
        {
          "name": "state",
          "type": "VARCHAR",
          "description": "The `state` column stores the customer's state of residence as a VARCHAR. This column, sourced from the `stg_customers` table, provides customer location information for demographic analysis and customer segmentation within the `int_customer_risk_enriched` model. This data is essential for understanding customer distribution and potential regional risk factors.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `state` column stores the customer's state of residence as a VARCHAR. This column, sourced from the `stg_customers` table, provides customer location information for demographic analysis and customer segmentation within the `int_customer_risk_enriched` model. This data is essential for understanding customer distribution and potential regional risk factors."
        },
        {
          "name": "zip_code",
          "type": "INTEGER",
          "description": "This column stores the customer's five-digit postal code as an integer. It's used to provide customer location information within the enriched customer profile, which can be useful for geographic analysis and risk assessment. This data is sourced directly from the `stg_customers` table.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's five-digit postal code as an integer. It's used to provide customer location information within the enriched customer profile, which can be useful for geographic analysis and risk assessment. This data is sourced directly from the `stg_customers` table."
        },
        {
          "name": "date_of_birth",
          "type": "DATE",
          "description": "This column stores the customer's date of birth. It's used to calculate the customer's age, which is then used in the `age_adjusted_risk_score` calculation. This information is crucial for understanding customer demographics and their potential impact on risk assessment.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's date of birth. It's used to calculate the customer's age, which is then used in the `age_adjusted_risk_score` calculation. This information is crucial for understanding customer demographics and their potential impact on risk assessment."
        },
        {
          "name": "gender",
          "type": "VARCHAR",
          "description": "This column stores the customer's gender as a string value. It's included in the `int_customer_risk_enriched` model to provide demographic information alongside risk assessment data. This information can be used for customer profiling and segmentation.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's gender as a string value. It's included in the `int_customer_risk_enriched` model to provide demographic information alongside risk assessment data. This information can be used for customer profiling and segmentation."
        },
        {
          "name": "joining_date",
          "type": "DATE",
          "description": "`joining_date`: This column stores the date when the customer initially joined the company. It's used to calculate customer tenure (`months_as_customer`) and is a key factor in determining customer segments within the model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`joining_date`: This column stores the date when the customer initially joined the company. It's used to calculate customer tenure (`months_as_customer`) and is a key factor in determining customer segments within the model."
        },
        {
          "name": "age",
          "type": "BIGINT",
          "description": "The `age` column stores the customer's age as a whole number (BIGINT). This data is used to calculate the `age_adjusted_risk_score`, where customers under 25 or over 70 have their risk score increased by 20%. This column is crucial for understanding customer demographics and their impact on risk assessment within the claims processing context.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `age` column stores the customer's age as a whole number (BIGINT). This data is used to calculate the `age_adjusted_risk_score`, where customers under 25 or over 70 have their risk score increased by 20%. This column is crucial for understanding customer demographics and their impact on risk assessment within the claims processing context."
        },
        {
          "name": "months_as_customer",
          "type": "BIGINT",
          "description": "This column, `months_as_customer`, stores the number of months a customer has been with the company, calculated from the joining date. This information is crucial for customer segmentation, as it's used in conjunction with risk factors to categorize customers into segments like \"PREMIUM,\" \"PREFERRED,\" \"STANDARD,\" and \"NEW.\" This tenure data helps in understanding customer loyalty and risk profiles.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `months_as_customer`, stores the number of months a customer has been with the company, calculated from the joining date. This information is crucial for customer segmentation, as it's used in conjunction with risk factors to categorize customers into segments like \"PREMIUM,\" \"PREFERRED,\" \"STANDARD,\" and \"NEW.\" This tenure data helps in understanding customer loyalty and risk profiles."
        },
        {
          "name": "risk_id",
          "type": "VARCHAR",
          "description": "This column, `risk_id`, stores a unique identifier for the risk assessment associated with a customer. It links customer records to specific risk assessments from the `stg_risk_factors` table, enabling the association of risk scores and other risk-related data with each customer profile within the `int_customer_risk_enriched` model. This ID is crucial for tracing the source and details of the risk assessment.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column, `risk_id`, stores a unique identifier for the risk assessment associated with a customer. It links customer records to specific risk assessments from the `stg_risk_factors` table, enabling the association of risk scores and other risk-related data with each customer profile within the `int_customer_risk_enriched` model. This ID is crucial for tracing the source and details of the risk assessment."
        },
        {
          "name": "assessment_date",
          "type": "DATE",
          "description": "`assessment_date` stores the date when the customer's risk assessment was performed. This date is crucial for understanding the recency of the risk evaluation and tracking changes in customer risk profiles over time within the `int_customer_risk_enriched` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`assessment_date` stores the date when the customer's risk assessment was performed. This date is crucial for understanding the recency of the risk evaluation and tracking changes in customer risk profiles over time within the `int_customer_risk_enriched` model."
        },
        {
          "name": "credit_score",
          "type": "INTEGER",
          "description": "The `credit_score` column stores an integer representing a customer's credit score, sourced from the `stg_risk_factors` table. This score is a key component of the customer risk assessment, providing a direct measure of creditworthiness within the enriched customer profile. This data is used to inform risk analysis and customer segmentation within the `claims_processing` project.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `credit_score` column stores an integer representing a customer's credit score, sourced from the `stg_risk_factors` table. This score is a key component of the customer risk assessment, providing a direct measure of creditworthiness within the enriched customer profile. This data is used to inform risk analysis and customer segmentation within the `claims_processing` project."
        },
        {
          "name": "credit_rating",
          "type": "VARCHAR",
          "description": "The `credit_rating` column stores a customer's credit rating, likely obtained from an external credit bureau. This rating provides a standardized assessment of a customer's creditworthiness, which is crucial for evaluating risk within the `claims_processing` context. This column is used alongside other risk factors to inform customer segmentation and risk scoring.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `credit_rating` column stores a customer's credit rating, likely obtained from an external credit bureau. This rating provides a standardized assessment of a customer's creditworthiness, which is crucial for evaluating risk within the `claims_processing` context. This column is used alongside other risk factors to inform customer segmentation and risk scoring."
        },
        {
          "name": "claim_frequency",
          "type": "VARCHAR",
          "description": "`claim_frequency` (VARCHAR) represents the frequency of claims filed by a customer, likely categorized (e.g., \"Low\", \"Medium\", \"High\"). This column is used within the `int_customer_risk_enriched` model to provide a risk indicator, potentially influencing customer segmentation and risk scoring for claims processing.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`claim_frequency` (VARCHAR) represents the frequency of claims filed by a customer, likely categorized (e.g., \"Low\", \"Medium\", \"High\"). This column is used within the `int_customer_risk_enriched` model to provide a risk indicator, potentially influencing customer segmentation and risk scoring for claims processing."
        },
        {
          "name": "risk_score",
          "type": "DOUBLE",
          "description": "The `risk_score` column in the `int_customer_risk_enriched` model stores a numerical value representing the customer's inherent risk level. This score, of type DOUBLE, is sourced from `stg_risk_factors` and is a key component in assessing customer risk profiles. It is used in conjunction with other factors to derive an age-adjusted risk score and customer segmentation.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `risk_score` column in the `int_customer_risk_enriched` model stores a numerical value representing the customer's inherent risk level. This score, of type DOUBLE, is sourced from `stg_risk_factors` and is a key component in assessing customer risk profiles. It is used in conjunction with other factors to derive an age-adjusted risk score and customer segmentation."
        },
        {
          "name": "previous_claims_count",
          "type": "INTEGER",
          "description": "`previous_claims_count` stores the total number of claims filed by a customer prior to the current assessment. This integer value is crucial for assessing a customer's risk profile within the `int_customer_risk_enriched` model, contributing to the overall risk score and customer segmentation.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`previous_claims_count` stores the total number of claims filed by a customer prior to the current assessment. This integer value is crucial for assessing a customer's risk profile within the `int_customer_risk_enriched` model, contributing to the overall risk score and customer segmentation."
        },
        {
          "name": "risk_category",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "days_since_last_assessment",
          "type": "BIGINT",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "age_adjusted_risk_score",
          "type": "DOUBLE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "customer_segment",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "_dbt_source_project",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        }
      ],
      "sql": "{{\n    config(\n        materialized='view',\n        tags=['intermediate', 'customers', 'risk', 'daily']\n    )\n}}\n\nWITH customers AS (\n    SELECT * FROM {{ ref('stg_customers') }}\n),\n\nrisk_factors AS (\n    SELECT * FROM {{ ref('stg_risk_factors') }}\n)\n\nSELECT\n    c.customer_id,\n    c.customer_name,\n    c.email,\n    c.phone,\n    c.address,\n    c.city,\n    c.state,\n    c.zip_code,\n    c.date_of_birth,\n    c.gender,\n    c.joining_date,\n    c.age,\n    c.months_as_customer,\n    -- Risk information\n    r.risk_id,\n    r.assessment_date,\n    r.credit_score,\n    r.credit_rating,\n    r.claim_frequency,\n    r.risk_score,\n    r.previous_claims_count,\n    r.risk_category,\n    r.days_since_last_assessment,\n    -- Risk factor adjustments\n    CASE\n        WHEN c.age < 25 OR c.age > 70 THEN r.risk_score * 1.2\n        ELSE r.risk_score\n    END AS age_adjusted_risk_score,\n    -- Customer segments\n    CASE\n        WHEN c.months_as_customer >= 36 AND r.risk_category = 'LOW_RISK' THEN 'PREMIUM'\n        WHEN c.months_as_customer >= 24 AND r.risk_category IN ('LOW_RISK', 'MEDIUM_RISK') THEN 'PREFERRED'\n        WHEN c.months_as_customer >= 12 THEN 'STANDARD'\n        ELSE 'NEW'\n    END AS customer_segment,\n    -- Metadata fields\n    CURRENT_TIMESTAMP AS dbt_updated_at,\n    c._dbt_source_project\nFROM customers c\nLEFT JOIN risk_factors r ON c.customer_id = r.customer_id",
      "materialized": "view",
      "schema": "intermediate",
      "file_path": "models/intermediate/int_customer_risk_enriched.sql",
      "database": "insurance_data",
      "tags": [
        "intermediate",
        "customers",
        "risk",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.customer_risk.int_customer_risk_enriched",
        "metadata": {
          "type": "VIEW",
          "schema": "claims_processing_intermediate",
          "name": "int_customer_risk_enriched",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `int_customer_risk_enriched` dbt model in the `claims_processing` project enriches customer data with risk assessment information. It joins customer details from `stg_customers` with risk factors from `stg_risk_factors`, linking them via `customer_id`. This model produces a comprehensive view of each customer, including demographic information, risk scores, and derived customer segments. Key transformations include an age-adjusted risk score and customer segmentation based on tenure and risk category, providing valuable insights for claims processing and customer management. This intermediate model serves as a foundation for downstream analyses and reporting, offering a consolidated and enriched customer profile."
    },
    {
      "id": "c8",
      "name": "mart_customer_risk_profile",
      "project": "claims_processing",
      "description": "The `mart_customer_risk_profile` dbt model in the `claims_processing` project generates a customer-centric risk profile. It consolidates customer information with calculated risk metrics, including `risk_score`, `age_adjusted_risk_score`, and `risk_category`. This model materializes as a table and serves as a key output in the data pipeline, providing a comprehensive view of customer risk for downstream analysis and reporting.  Crucially, it enriches customer data from `int_customer_risk_enriched` and incorporates claims data from the `claims_processing` project's `mart_claims_analysis` model, calculating claim-related statistics like total claims and settlement amounts. The model also includes conditional logic to handle the absence of the external claims data, ensuring the model can still run.",
      "columns": [
        {
          "name": "customer_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for each customer, sourced from the `customer_risk_enriched` table and potentially from the `mart_claims_analysis` model.  It serves as the primary key for the `mart_customer_risk_profile` table, linking customer information with calculated risk metrics and claims data.  The `customer_id` is used to join customer data with claims data to calculate claim-related statistics.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for each customer, sourced from the `customer_risk_enriched` table and potentially from the `mart_claims_analysis` model.  It serves as the primary key for the `mart_customer_risk_profile` table, linking customer information with calculated risk metrics and claims data.  The `customer_id` is used to join customer data with claims data to calculate claim-related statistics."
        },
        {
          "name": "customer_name",
          "type": "VARCHAR",
          "description": "This column stores the customer's full name as a string. It's used to identify and label each customer within the `mart_customer_risk_profile` table. This allows for easy identification and reporting on customer risk profiles.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's full name as a string. It's used to identify and label each customer within the `mart_customer_risk_profile` table. This allows for easy identification and reporting on customer risk profiles."
        },
        {
          "name": "email",
          "type": "VARCHAR",
          "description": "This column stores the customer's email address, sourced from the `int_customer_risk_enriched` model.  It provides a unique identifier for each customer within the risk profile, enabling customer-level analysis and linking to other customer data. This allows for personalized risk assessments and communication.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's email address, sourced from the `int_customer_risk_enriched` model.  It provides a unique identifier for each customer within the risk profile, enabling customer-level analysis and linking to other customer data. This allows for personalized risk assessments and communication."
        },
        {
          "name": "city",
          "type": "VARCHAR",
          "description": "This column stores the customer's city of residence, sourced from the `int_customer_risk_enriched` model.  It provides location-based customer information, which can be used for risk profiling and segmentation within the `mart_customer_risk_profile` model. This information is crucial for understanding geographic risk factors.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's city of residence, sourced from the `int_customer_risk_enriched` model.  It provides location-based customer information, which can be used for risk profiling and segmentation within the `mart_customer_risk_profile` model. This information is crucial for understanding geographic risk factors."
        },
        {
          "name": "state",
          "type": "VARCHAR",
          "description": "The `state` column stores the customer's state of residence, sourced from the `int_customer_risk_enriched` model. This column is crucial for segmenting and analyzing customer risk profiles based on geographic location, enabling regional risk assessments within the `mart_customer_risk_profile` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `state` column stores the customer's state of residence, sourced from the `int_customer_risk_enriched` model. This column is crucial for segmenting and analyzing customer risk profiles based on geographic location, enabling regional risk assessments within the `mart_customer_risk_profile` model."
        },
        {
          "name": "age",
          "type": "BIGINT",
          "description": "The `age` column stores the customer's age as a whole number. This column is a key customer attribute used in the `mart_customer_risk_profile` model to calculate risk scores and categorize customers based on their risk profile. It is used in conjunction with other customer and claims data to provide a comprehensive view of customer risk.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `age` column stores the customer's age as a whole number. This column is a key customer attribute used in the `mart_customer_risk_profile` model to calculate risk scores and categorize customers based on their risk profile. It is used in conjunction with other customer and claims data to provide a comprehensive view of customer risk."
        },
        {
          "name": "months_as_customer",
          "type": "BIGINT",
          "description": "This column, `months_as_customer`, stores the number of months a customer has been associated with the company.  It likely represents customer tenure and is used within the `mart_customer_risk_profile` model to help assess a customer's risk profile.  This information could be used in conjunction with other risk factors to identify potentially higher-risk customers.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `months_as_customer`, stores the number of months a customer has been associated with the company.  It likely represents customer tenure and is used within the `mart_customer_risk_profile` model to help assess a customer's risk profile.  This information could be used in conjunction with other risk factors to identify potentially higher-risk customers."
        },
        {
          "name": "credit_score",
          "type": "INTEGER",
          "description": "The `credit_score` column in the `mart_customer_risk_profile` table stores a customer's credit score as an integer. This value, sourced from the `int_customer_risk_enriched` model, is a key input for calculating the customer's overall risk profile, contributing to the `risk_score` and potentially influencing the assigned `risk_category`.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `credit_score` column in the `mart_customer_risk_profile` table stores a customer's credit score as an integer. This value, sourced from the `int_customer_risk_enriched` model, is a key input for calculating the customer's overall risk profile, contributing to the `risk_score` and potentially influencing the assigned `risk_category`."
        },
        {
          "name": "credit_rating",
          "type": "VARCHAR",
          "description": "The `credit_rating` column in the `mart_customer_risk_profile` table stores a customer's credit rating, likely sourced from external credit bureaus. This rating provides an assessment of a customer's creditworthiness and is used in conjunction with other risk factors to determine the overall customer risk profile.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `credit_rating` column in the `mart_customer_risk_profile` table stores a customer's credit rating, likely sourced from external credit bureaus. This rating provides an assessment of a customer's creditworthiness and is used in conjunction with other risk factors to determine the overall customer risk profile."
        },
        {
          "name": "claim_frequency",
          "type": "VARCHAR",
          "description": "`claim_frequency` stores a customer's claim frequency, likely represented as a string value. This column is a key risk metric within the customer risk profile, used to assess a customer's likelihood of filing claims. The specific calculation or meaning of the string value would need further investigation, but it's likely derived from claims data within the `claims_processing` project.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`claim_frequency` stores a customer's claim frequency, likely represented as a string value. This column is a key risk metric within the customer risk profile, used to assess a customer's likelihood of filing claims. The specific calculation or meaning of the string value would need further investigation, but it's likely derived from claims data within the `claims_processing` project."
        },
        {
          "name": "risk_score",
          "type": "DOUBLE",
          "description": "The `risk_score` column in the `mart_customer_risk_profile` table stores a numerical representation of a customer's overall risk profile, likely derived from various factors. This score is a key input for understanding customer risk and is used in further calculations, such as `claims_adjusted_risk_score`, to provide a more nuanced risk assessment.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `risk_score` column in the `mart_customer_risk_profile` table stores a numerical representation of a customer's overall risk profile, likely derived from various factors. This score is a key input for understanding customer risk and is used in further calculations, such as `claims_adjusted_risk_score`, to provide a more nuanced risk assessment."
        },
        {
          "name": "age_adjusted_risk_score",
          "type": "DOUBLE",
          "description": "The `age_adjusted_risk_score` column stores a customer's risk score, adjusted for age. This double-precision value represents the customer's risk profile, which is further used in calculations within the model, such as adjusting the risk score based on claim frequency.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `age_adjusted_risk_score` column stores a customer's risk score, adjusted for age. This double-precision value represents the customer's risk profile, which is further used in calculations within the model, such as adjusting the risk score based on claim frequency."
        },
        {
          "name": "previous_claims_count",
          "type": "INTEGER",
          "description": "`previous_claims_count` stores the total number of claims a customer has filed, derived from the `claims_processing` project's `mart_claims_analysis` model. This integer value is a key component of the customer risk profile, contributing to the overall risk assessment and potentially influencing the `risk_score` and `risk_category`.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`previous_claims_count` stores the total number of claims a customer has filed, derived from the `claims_processing` project's `mart_claims_analysis` model. This integer value is a key component of the customer risk profile, contributing to the overall risk assessment and potentially influencing the `risk_score` and `risk_category`."
        },
        {
          "name": "risk_category",
          "type": "VARCHAR",
          "description": "`risk_category` categorizes a customer's risk profile based on their `age_adjusted_risk_score`. This column provides a simplified, categorical view of customer risk, facilitating easier segmentation and analysis of customer risk levels within the `mart_customer_risk_profile` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`risk_category` categorizes a customer's risk profile based on their `age_adjusted_risk_score`. This column provides a simplified, categorical view of customer risk, facilitating easier segmentation and analysis of customer risk levels within the `mart_customer_risk_profile` model."
        },
        {
          "name": "customer_segment",
          "type": "VARCHAR",
          "description": "`customer_segment` categorizes customers based on their risk profile, likely using business rules or calculations within the `mart_customer_risk_profile` model. This VARCHAR column provides a high-level grouping of customers, facilitating segmentation for targeted risk management and analysis based on their claims history and other risk factors. The specific segmentation logic is not directly apparent from the provided context.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`customer_segment` categorizes customers based on their risk profile, likely using business rules or calculations within the `mart_customer_risk_profile` model. This VARCHAR column provides a high-level grouping of customers, facilitating segmentation for targeted risk management and analysis based on their claims history and other risk factors. The specific segmentation logic is not directly apparent from the provided context."
        },
        {
          "name": "total_claims",
          "type": "INTEGER",
          "description": "This column, `total_claims`, stores the total number of claims associated with a customer.  It's a key metric within the `mart_customer_risk_profile` model, used to assess customer risk and is incorporated into the `risk_score` calculation. The value is derived from the `claims_processing` project's `mart_claims_analysis` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `total_claims`, stores the total number of claims associated with a customer.  It's a key metric within the `mart_customer_risk_profile` model, used to assess customer risk and is incorporated into the `risk_score` calculation. The value is derived from the `claims_processing` project's `mart_claims_analysis` model."
        },
        {
          "name": "total_claim_amount",
          "type": "INTEGER",
          "description": "`total_claim_amount` stores the sum of all claim amounts for a given customer. This integer value represents the total financial exposure related to claims filed by the customer and is a key metric for assessing customer risk within the `mart_customer_risk_profile` model. The model includes logic to handle cases where claim data is unavailable, ensuring a value of 0 is used in those instances.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`total_claim_amount` stores the sum of all claim amounts for a given customer. This integer value represents the total financial exposure related to claims filed by the customer and is a key metric for assessing customer risk within the `mart_customer_risk_profile` model. The model includes logic to handle cases where claim data is unavailable, ensuring a value of 0 is used in those instances."
        },
        {
          "name": "total_settlement_amount",
          "type": "INTEGER",
          "description": "`total_settlement_amount` stores the sum of all settlement amounts for claims associated with a customer. This integer value represents the total monetary value paid out to settle claims for a given customer, providing a key metric for assessing customer risk. The calculation is derived from the `settlement_amount_clean` field within the claims data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`total_settlement_amount` stores the sum of all settlement amounts for claims associated with a customer. This integer value represents the total monetary value paid out to settle claims for a given customer, providing a key metric for assessing customer risk. The calculation is derived from the `settlement_amount_clean` field within the claims data."
        },
        {
          "name": "avg_days_to_settle",
          "type": "INTEGER",
          "description": "This column, `avg_days_to_settle`, stores the average number of days it takes to settle a customer's claims. It's calculated as the average of the `days_to_settle` field from the `claims_processing` project's `mart_claims_analysis` model, providing a key metric for assessing customer risk related to claim resolution speed. A higher value suggests potentially slower claim processing.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `avg_days_to_settle`, stores the average number of days it takes to settle a customer's claims. It's calculated as the average of the `days_to_settle` field from the `claims_processing` project's `mart_claims_analysis` model, providing a key metric for assessing customer risk related to claim resolution speed. A higher value suggests potentially slower claim processing."
        },
        {
          "name": "settled_claims_count",
          "type": "INTEGER",
          "description": "`settled_claims_count` represents the total number of claims for a customer that have been settled. This integer column is crucial for assessing a customer's risk profile by providing insight into their claims history and potential financial impact. The value is calculated by summing claims with a 'SETTLED' status.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`settled_claims_count` represents the total number of claims for a customer that have been settled. This integer column is crucial for assessing a customer's risk profile by providing insight into their claims history and potential financial impact. The value is calculated by summing claims with a 'SETTLED' status."
        },
        {
          "name": "denied_claims_count",
          "type": "INTEGER",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "most_recent_claim_date",
          "type": "DATE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "claims_adjusted_risk_score",
          "type": "DOUBLE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "claim_denial_rate",
          "type": "DOUBLE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "risk_source",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "claims_source",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        }
      ],
      "sql": "{{\n    config(\n        materialized='table',\n        tags=['mart', 'customers', 'risk', 'daily']\n    )\n}}\n\nWITH customer_risk_enriched AS (\n    SELECT * FROM {{ ref('int_customer_risk_enriched') }}\n),\n\n-- Reference to claims data from claims processing project\ncustomer_claims AS (\n    {% if execute %}\n        {% if adapter.get_relation(this.database, 'mart', 'mart_claims_analysis') %}\n            SELECT \n                customer_id,\n                COUNT(*) AS total_claims,\n                SUM(claim_amount) AS total_claim_amount,\n                SUM(settlement_amount_clean) AS total_settlement_amount,\n                AVG(days_to_settle) AS avg_days_to_settle,\n                SUM(CASE WHEN claim_status = 'SETTLED' THEN 1 ELSE 0 END) AS settled_claims_count,\n                SUM(CASE WHEN claim_status = 'DENIED' THEN 1 ELSE 0 END) AS denied_claims_count,\n                MAX(claim_date) AS most_recent_claim_date,\n                'claims_processing' AS _dbt_source_project\n            FROM {{ ref('claims_processing', 'mart_claims_analysis') }}\n            GROUP BY customer_id\n        {% else %}\n            SELECT\n                'CU0000' AS customer_id,\n                0 AS total_claims,\n                0 AS total_claim_amount,\n                0 AS total_settlement_amount,\n                0 AS avg_days_to_settle,\n                0 AS settled_claims_count,\n                0 AS denied_claims_count,\n                CAST('2000-01-01' AS DATE) AS most_recent_claim_date,\n                'claims_processing' AS _dbt_source_project\n            WHERE 1=0\n        {% endif %}\n    {% else %}\n        SELECT\n            'CU0000' AS customer_id,\n            0 AS total_claims,\n            0 AS total_claim_amount,\n            0 AS total_settlement_amount,\n            0 AS avg_days_to_settle,\n            0 AS settled_claims_count,\n            0 AS denied_claims_count,\n            CAST('2000-01-01' AS DATE) AS most_recent_claim_date,\n            'claims_processing' AS _dbt_source_project\n        WHERE 1=0\n    {% endif %}\n)\n\nSELECT\n    cr.customer_id,\n    cr.customer_name,\n    cr.email,\n    cr.city,\n    cr.state,\n    cr.age,\n    cr.months_as_customer,\n    cr.credit_score,\n    cr.credit_rating,\n    cr.claim_frequency,\n    cr.risk_score,\n    cr.age_adjusted_risk_score,\n    cr.previous_claims_count,\n    cr.risk_category,\n    cr.customer_segment,\n    -- Claims information from claims processing\n    cc.total_claims,\n    cc.total_claim_amount,\n    cc.total_settlement_amount,\n    cc.avg_days_to_settle,\n    cc.settled_claims_count,\n    cc.denied_claims_count,\n    cc.most_recent_claim_date,\n    -- Risk scoring with claim data\n    CASE\n        WHEN cc.total_claims > 0 THEN\n            cr.age_adjusted_risk_score * (1 + (cc.total_claims / 10))\n        ELSE\n            cr.age_adjusted_risk_score\n    END AS claims_adjusted_risk_score,\n    -- Denial ratio\n    CASE\n        WHEN cc.total_claims > 0 THEN \n            ROUND(cc.denied_claims_count / cc.total_claims * 100, 2)\n        ELSE 0\n    END AS claim_denial_rate,\n    -- Cross project attribution\n    cr._dbt_source_project AS risk_source,\n    cc._dbt_source_project AS claims_source,\n    -- Metadata\n    CURRENT_TIMESTAMP AS dbt_updated_at\nFROM customer_risk_enriched cr\nLEFT JOIN customer_claims cc ON cr.customer_id = cc.customer_id",
      "materialized": "table",
      "schema": "mart",
      "file_path": "models/mart/mart_customer_risk_profile.sql",
      "database": "insurance_data",
      "tags": [
        "mart",
        "customers",
        "risk",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.customer_risk.mart_customer_risk_profile",
        "metadata": {
          "type": "BASE TABLE",
          "schema": "claims_processing_mart",
          "name": "mart_customer_risk_profile",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `mart_customer_risk_profile` dbt model in the `claims_processing` project generates a customer-centric risk profile. It consolidates customer information with calculated risk metrics, including `risk_score`, `age_adjusted_risk_score`, and `risk_category`. This model materializes as a table and serves as a key output in the data pipeline, providing a comprehensive view of customer risk for downstream analysis and reporting.  Crucially, it enriches customer data from `int_customer_risk_enriched` and incorporates claims data from the `claims_processing` project's `mart_claims_analysis` model, calculating claim-related statistics like total claims and settlement amounts. The model also includes conditional logic to handle the absence of the external claims data, ensuring the model can still run."
    },
    {
      "id": "c9",
      "name": "stg_policies",
      "project": "claims_processing",
      "description": "The `stg_policies` dbt model in the `claims_processing` project serves as a staging layer for policy data. It transforms the raw `policies` data, sourced from the `policies` model, by casting date fields and deriving new columns. This model produces a standardized view of policy information, including calculated fields like `policy_term_days`, `effective_status`, and `coverage_premium_ratio`.  Key business logic includes determining the `effective_status` based on the policy's start and end dates relative to the current date.  This model is tagged as 'staging', 'policies', and 'daily', indicating its role in preparing data for downstream analysis and reporting.",
      "columns": [
        {
          "name": "policy_id",
          "type": "VARCHAR",
          "description": "The `policy_id` column stores a unique identifier for each insurance policy, sourced from the raw `policies` data. This VARCHAR field is crucial for joining and tracking individual policy records within the `stg_policies` staging model. It serves as the primary key for identifying and referencing specific policy information.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "The `policy_id` column stores a unique identifier for each insurance policy, sourced from the raw `policies` data. This VARCHAR field is crucial for joining and tracking individual policy records within the `stg_policies` staging model. It serves as the primary key for identifying and referencing specific policy information."
        },
        {
          "name": "customer_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for the customer associated with the policy.  The `customer_id` is used to link policy information to customer records within the claims processing system.  This VARCHAR field allows for flexible customer ID formats.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for the customer associated with the policy.  The `customer_id` is used to link policy information to customer records within the claims processing system.  This VARCHAR field allows for flexible customer ID formats."
        },
        {
          "name": "policy_type",
          "type": "VARCHAR",
          "description": "This column, `policy_type`, stores the type of insurance policy (e.g., auto, home, life) as a text string. It's a key attribute for categorizing and filtering policies within the `stg_policies` staging model. This allows for analysis and reporting based on different policy categories.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `policy_type`, stores the type of insurance policy (e.g., auto, home, life) as a text string. It's a key attribute for categorizing and filtering policies within the `stg_policies` staging model. This allows for analysis and reporting based on different policy categories."
        },
        {
          "name": "start_date",
          "type": "DATE",
          "description": "The `start_date` column stores the date when the policy coverage begins. This date is used in conjunction with the `end_date` to calculate the `policy_term_days` and determine the `effective_status` of the policy, indicating whether it's active, expired, or future-dated.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `start_date` column stores the date when the policy coverage begins. This date is used in conjunction with the `end_date` to calculate the `policy_term_days` and determine the `effective_status` of the policy, indicating whether it's active, expired, or future-dated."
        },
        {
          "name": "end_date",
          "type": "DATE",
          "description": "This column stores the end date of the policy, indicating when the policy coverage expires.  It's used in the `stg_policies` model to calculate the `policy_term_days` and determine the `effective_status` of the policy (e.g., 'EXPIRED', 'FUTURE'). The `end_date` is cast as a DATE data type for consistent date-based calculations.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the end date of the policy, indicating when the policy coverage expires.  It's used in the `stg_policies` model to calculate the `policy_term_days` and determine the `effective_status` of the policy (e.g., 'EXPIRED', 'FUTURE'). The `end_date` is cast as a DATE data type for consistent date-based calculations."
        },
        {
          "name": "premium_amount",
          "type": "DOUBLE",
          "description": "The `premium_amount` column in the `stg_policies` table stores the policy's premium amount as a double-precision number. This value represents the total cost of the policy and is used in the calculation of the `coverage_premium_ratio`, providing insight into the relationship between coverage and premium.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `premium_amount` column in the `stg_policies` table stores the policy's premium amount as a double-precision number. This value represents the total cost of the policy and is used in the calculation of the `coverage_premium_ratio`, providing insight into the relationship between coverage and premium."
        },
        {
          "name": "coverage_amount",
          "type": "INTEGER",
          "description": "The `coverage_amount` column stores the integer value representing the policy's coverage limit. This value, sourced from the raw `policies` data, is a key component in calculating the `coverage_premium_ratio` within the `stg_policies` model, providing insight into the relationship between coverage and premium.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `coverage_amount` column stores the integer value representing the policy's coverage limit. This value, sourced from the raw `policies` data, is a key component in calculating the `coverage_premium_ratio` within the `stg_policies` model, providing insight into the relationship between coverage and premium."
        },
        {
          "name": "status",
          "type": "VARCHAR",
          "description": "The `status` column in the `stg_policies` table stores the current status of a policy, likely reflecting its state as provided by the source data. This column is used in conjunction with `start_date` and `end_date` to determine the `effective_status` of a policy, which indicates whether a policy is active, expired, or in the future.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `status` column in the `stg_policies` table stores the current status of a policy, likely reflecting its state as provided by the source data. This column is used in conjunction with `start_date` and `end_date` to determine the `effective_status` of a policy, which indicates whether a policy is active, expired, or in the future."
        },
        {
          "name": "agent_id",
          "type": "VARCHAR",
          "description": "The `agent_id` column stores the unique identifier for the agent associated with the policy. This VARCHAR column directly reflects the agent responsible for the policy within the `stg_policies` staging model, providing a link to agent information.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "The `agent_id` column stores the unique identifier for the agent associated with the policy. This VARCHAR column directly reflects the agent responsible for the policy within the `stg_policies` staging model, providing a link to agent information."
        },
        {
          "name": "policy_number",
          "type": "VARCHAR",
          "description": "This column, `policy_number`, stores the unique identifier assigned to each insurance policy.  Within the `stg_policies` model, it serves as a key attribute for identifying and linking policy records.  This column is essential for joining with other tables and tracking policy-specific information.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `policy_number`, stores the unique identifier assigned to each insurance policy.  Within the `stg_policies` model, it serves as a key attribute for identifying and linking policy records.  This column is essential for joining with other tables and tracking policy-specific information."
        },
        {
          "name": "policy_term_days",
          "type": "BIGINT",
          "description": "`policy_term_days` stores the duration of the policy in days, calculated as the difference between the `end_date` and `start_date`. This column provides a numerical representation of the policy's term length, essential for understanding policy duration and potentially used in calculations like premium analysis.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`policy_term_days` stores the duration of the policy in days, calculated as the difference between the `end_date` and `start_date`. This column provides a numerical representation of the policy's term length, essential for understanding policy duration and potentially used in calculations like premium analysis."
        },
        {
          "name": "effective_status",
          "type": "VARCHAR",
          "description": "The `effective_status` column indicates the current status of a policy. It's a VARCHAR field that reflects whether a policy is 'FUTURE' (not yet active) or 'UNKNOWN' based on the policy's start date relative to the current date. This column is crucial for understanding the active state of policies within the staging layer.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `effective_status` column indicates the current status of a policy. It's a VARCHAR field that reflects whether a policy is 'FUTURE' (not yet active) or 'UNKNOWN' based on the policy's start date relative to the current date. This column is crucial for understanding the active state of policies within the staging layer."
        },
        {
          "name": "coverage_premium_ratio",
          "type": "DOUBLE",
          "description": "The `coverage_premium_ratio` column in the `stg_policies` table stores the ratio of the policy's coverage amount to its premium amount. This calculated field provides a measure of the value offered by the policy, representing the coverage provided per unit of premium paid. It's rounded to two decimal places for easier analysis.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `coverage_premium_ratio` column in the `stg_policies` table stores the ratio of the policy's coverage amount to its premium amount. This calculated field provides a measure of the value offered by the policy, representing the coverage provided per unit of premium paid. It's rounded to two decimal places for easier analysis."
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "`dbt_updated_at` records the timestamp when the `stg_policies` model was last refreshed. This timestamp column is automatically populated with the current time during the model's execution, providing a record of the data's freshness.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`dbt_updated_at` records the timestamp when the `stg_policies` model was last refreshed. This timestamp column is automatically populated with the current time during the model's execution, providing a record of the data's freshness."
        },
        {
          "name": "_dbt_source_project",
          "type": "VARCHAR",
          "description": "This column, `_dbt_source_project`, stores the name of the source project from which the policy data originated.  It's a metadata field used for tracking the data's provenance within the `claims_processing` project, specifically identifying the source as 'policy_management'. This helps with data lineage and understanding the origin of the policy information.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `_dbt_source_project`, stores the name of the source project from which the policy data originated.  It's a metadata field used for tracking the data's provenance within the `claims_processing` project, specifically identifying the source as 'policy_management'. This helps with data lineage and understanding the origin of the policy information."
        }
      ],
      "sql": "{{\n    config(\n        materialized='view',\n        tags=['staging', 'policies', 'daily']\n    )\n}}\n\nWITH source AS (\n    SELECT * FROM {{ ref('policies') }}\n)\n\nSELECT\n    policy_id,\n    customer_id,\n    policy_type,\n    CAST(start_date AS DATE) AS start_date,\n    CAST(end_date AS DATE) AS end_date,\n    premium_amount,\n    coverage_amount,\n    status,\n    agent_id,\n    policy_number,\n    -- Derived fields\n    DATEDIFF('day', start_date, end_date) AS policy_term_days,\n    CASE\n        WHEN CURRENT_DATE() > end_date THEN 'EXPIRED'\n        WHEN CURRENT_DATE() BETWEEN start_date AND end_date THEN status\n        WHEN CURRENT_DATE() < start_date THEN 'FUTURE'\n        ELSE 'UNKNOWN'\n    END AS effective_status,\n    ROUND(coverage_amount / premium_amount, 2) AS coverage_premium_ratio,\n    -- Metadata fields\n    CURRENT_TIMESTAMP AS dbt_updated_at,\n    'policy_management' AS _dbt_source_project\nFROM source",
      "materialized": "view",
      "schema": "staging",
      "file_path": "models/staging/stg_policies.sql",
      "database": "insurance_data",
      "tags": [
        "staging",
        "policies",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.policy_management.stg_policies",
        "metadata": {
          "type": "VIEW",
          "schema": "claims_processing_staging",
          "name": "stg_policies",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `stg_policies` dbt model in the `claims_processing` project serves as a staging layer for policy data. It transforms the raw `policies` data, sourced from the `policies` model, by casting date fields and deriving new columns. This model produces a standardized view of policy information, including calculated fields like `policy_term_days`, `effective_status`, and `coverage_premium_ratio`.  Key business logic includes determining the `effective_status` based on the policy's start and end dates relative to the current date.  This model is tagged as 'staging', 'policies', and 'daily', indicating its role in preparing data for downstream analysis and reporting."
    },
    {
      "id": "c10",
      "name": "stg_agents",
      "project": "claims_processing",
      "description": "The `stg_agents` dbt model in the `claims_processing` project stages agent information from the `agents` source. It selects and transforms agent details like `agent_id`, `agent_name`, and `office_location`. This model enriches the raw agent data by deriving the `experience_level` based on `years_experience` and adds metadata fields such as `dbt_updated_at` and `_dbt_source_project`. This staging model serves as an intermediate layer, preparing the agent data for downstream analysis and reporting within the claims processing data pipeline.",
      "columns": [
        {
          "name": "agent_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for an agent, sourced from the `agents` table.  The `agent_id` is a key field used to identify and link agent information within the `stg_agents` staging model.  It is a VARCHAR data type, suggesting it may contain alphanumeric characters.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for an agent, sourced from the `agents` table.  The `agent_id` is a key field used to identify and link agent information within the `stg_agents` staging model.  It is a VARCHAR data type, suggesting it may contain alphanumeric characters."
        },
        {
          "name": "agent_name",
          "type": "VARCHAR",
          "description": "This column stores the agent's full name as a string.  It's used to identify and label individual agents within the claims processing system.  This column is directly sourced from the `agents` source table.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the agent's full name as a string.  It's used to identify and label individual agents within the claims processing system.  This column is directly sourced from the `agents` source table."
        },
        {
          "name": "agent_email",
          "type": "VARCHAR",
          "description": "This column stores the agent's email address. It's used to identify and contact agents within the claims processing system. The `agent_email` is sourced directly from the `agents` source table.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the agent's email address. It's used to identify and contact agents within the claims processing system. The `agent_email` is sourced directly from the `agents` source table."
        },
        {
          "name": "office_location",
          "type": "VARCHAR",
          "description": "This column stores the physical location of the agent's office as a text string.  In the `stg_agents` model, `office_location` is a direct pass-through from the source data, providing context for where each agent is based. This information is crucial for understanding agent distribution and potentially for regional analysis within the claims processing context.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the physical location of the agent's office as a text string.  In the `stg_agents` model, `office_location` is a direct pass-through from the source data, providing context for where each agent is based. This information is crucial for understanding agent distribution and potentially for regional analysis within the claims processing context."
        },
        {
          "name": "years_experience",
          "type": "INTEGER",
          "description": "This column stores the number of years of experience for each agent, represented as an integer.  It's used to determine the `experience_level` of the agent within the `stg_agents` model, categorizing them as 'JUNIOR', 'MID', or 'SENIOR' based on their experience. This information is crucial for understanding agent skill levels and performance.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the number of years of experience for each agent, represented as an integer.  It's used to determine the `experience_level` of the agent within the `stg_agents` model, categorizing them as 'JUNIOR', 'MID', or 'SENIOR' based on their experience. This information is crucial for understanding agent skill levels and performance."
        },
        {
          "name": "specialization",
          "type": "VARCHAR",
          "description": "The `specialization` column in the `stg_agents` table stores a text value indicating the agent's area of expertise. This column, sourced directly from the `agents` source, provides a key attribute for understanding the agent's professional focus within the claims processing context. It is a VARCHAR data type.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `specialization` column in the `stg_agents` table stores a text value indicating the agent's area of expertise. This column, sourced directly from the `agents` source, provides a key attribute for understanding the agent's professional focus within the claims processing context. It is a VARCHAR data type."
        },
        {
          "name": "active",
          "type": "BOOLEAN",
          "description": "The `active` column in the `stg_agents` table indicates whether an agent is currently active, storing a boolean value (TRUE or FALSE). This column directly reflects the agent's status, likely used to filter or segment agents for various analyses and reporting within the claims processing data pipeline.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `active` column in the `stg_agents` table indicates whether an agent is currently active, storing a boolean value (TRUE or FALSE). This column directly reflects the agent's status, likely used to filter or segment agents for various analyses and reporting within the claims processing data pipeline."
        },
        {
          "name": "experience_level",
          "type": "VARCHAR",
          "description": "This column, `experience_level`, stores the agent's experience level as either 'JUNIOR' or 'MID'. It's derived from the `years_experience` column, categorizing agents with 5 or more years of experience as 'MID'. This classification helps in understanding agent skill levels for analysis and reporting.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `experience_level`, stores the agent's experience level as either 'JUNIOR' or 'MID'. It's derived from the `years_experience` column, categorizing agents with 5 or more years of experience as 'MID'. This classification helps in understanding agent skill levels for analysis and reporting."
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "`dbt_updated_at` stores the timestamp indicating when the agent data in this staging model was last updated. This timestamp, captured using `CURRENT_TIMESTAMP`, provides a record of the data's freshness and allows for tracking the model's refresh schedule. It's a metadata field useful for understanding the currency of the agent information.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`dbt_updated_at` stores the timestamp indicating when the agent data in this staging model was last updated. This timestamp, captured using `CURRENT_TIMESTAMP`, provides a record of the data's freshness and allows for tracking the model's refresh schedule. It's a metadata field useful for understanding the currency of the agent information."
        },
        {
          "name": "_dbt_source_project",
          "type": "VARCHAR",
          "description": "This column, `_dbt_source_project`, stores the name of the source project from which the agent data originated.  It is a VARCHAR field populated with the value 'policy_management' in this staging model. This metadata helps track the origin of the data within the data pipeline.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `_dbt_source_project`, stores the name of the source project from which the agent data originated.  It is a VARCHAR field populated with the value 'policy_management' in this staging model. This metadata helps track the origin of the data within the data pipeline."
        }
      ],
      "sql": "{{\n    config(\n        materialized='view',\n        tags=['staging', 'agents', 'daily']\n    )\n}}\n\nWITH source AS (\n    SELECT * FROM {{ ref('agents') }}\n)\n\nSELECT\n    agent_id,\n    agent_name,\n    agent_email,\n    office_location,\n    years_experience,\n    specialization,\n    active,\n    -- Derived fields\n    CASE \n        WHEN years_experience >= 10 THEN 'SENIOR'\n        WHEN years_experience >= 5 THEN 'MID'\n        ELSE 'JUNIOR'\n    END AS experience_level,\n    -- Metadata fields\n    CURRENT_TIMESTAMP AS dbt_updated_at,\n    'policy_management' AS _dbt_source_project\nFROM source",
      "materialized": "view",
      "schema": "staging",
      "file_path": "models/staging/stg_agents.sql",
      "database": "insurance_data",
      "tags": [
        "staging",
        "agents",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.policy_management.stg_agents",
        "metadata": {
          "type": "VIEW",
          "schema": "claims_processing_staging",
          "name": "stg_agents",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `stg_agents` dbt model in the `claims_processing` project stages agent information from the `agents` source. It selects and transforms agent details like `agent_id`, `agent_name`, and `office_location`. This model enriches the raw agent data by deriving the `experience_level` based on `years_experience` and adds metadata fields such as `dbt_updated_at` and `_dbt_source_project`. This staging model serves as an intermediate layer, preparing the agent data for downstream analysis and reporting within the claims processing data pipeline."
    },
    {
      "id": "c11",
      "name": "int_policies_enriched",
      "project": "claims_processing",
      "description": "The `int_policies_enriched` dbt model in the `claims_processing` project enriches policy data by joining it with agent information. This intermediate model selects and transforms data from the `stg_policies` and `stg_agents` staging models, creating a view with 20 columns. Key transformations include calculating a `coverage_premium_ratio` and determining `specialization_alignment` between policy type and agent specialization. This model serves as a foundational layer, providing enriched policy data for downstream analysis and reporting within the data pipeline.",
      "columns": [
        {
          "name": "policy_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for an insurance policy.  It's used as the primary key for the `int_policies_enriched` model and is essential for joining policy data with agent information.  The `policy_id` allows for tracking and analysis of individual policies throughout the data ",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for an insurance policy.  It's used as the primary key for the `int_policies_enriched` model and is essential for joining policy data with agent information.  The `policy_id` allows for tracking and analysis of individual policies throughout the data pipeline.",
          "user_edited": true
        },
        {
          "name": "customer_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for the customer associated with the policy.  It's used to link policy information to customer records, enabling analysis of customer behavior and policy characteristics. The `customer_id` is a VARCHAR, likely representing a string-based identifier.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for the customer associated with the policy.  It's used to link policy information to customer records, enabling analysis of customer behavior and policy characteristics. The `customer_id` is a VARCHAR, likely representing a string-based identifier."
        },
        {
          "name": "policy_type",
          "type": "VARCHAR",
          "description": "This column, `policy_type`, stores the type of insurance policy (e.g., \"Home\", \"Auto\", \"Life\"). It's used to determine `specialization_alignment` by comparing the policy type to the agent's specialization. This helps assess if the agent's expertise matches the policy sold.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `policy_type`, stores the type of insurance policy (e.g., \"Home\", \"Auto\", \"Life\"). It's used to determine `specialization_alignment` by comparing the policy type to the agent's specialization. This helps assess if the agent's expertise matches the policy sold."
        },
        {
          "name": "start_date",
          "type": "DATE",
          "description": "The `start_date` column stores the date when the policy coverage period began. This date is crucial for understanding the policy's lifecycle and is used in conjunction with the `end_date` to determine the policy's duration. It's a key attribute for time-based analysis of policy performance.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `start_date` column stores the date when the policy coverage period began. This date is crucial for understanding the policy's lifecycle and is used in conjunction with the `end_date` to determine the policy's duration. It's a key attribute for time-based analysis of policy performance."
        },
        {
          "name": "end_date",
          "type": "DATE",
          "description": "The `end_date` column stores the date when the policy coverage period concludes. This date is sourced from the `stg_policies` staging model and is crucial for determining the duration and active status of a policy within the `int_policies_enriched` model. This column allows for time-based analysis of policy lifecycles and coverage periods.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `end_date` column stores the date when the policy coverage period concludes. This date is sourced from the `stg_policies` staging model and is crucial for determining the duration and active status of a policy within the `int_policies_enriched` model. This column allows for time-based analysis of policy lifecycles and coverage periods."
        },
        {
          "name": "premium_amount",
          "type": "DOUBLE",
          "description": "The `premium_amount` column stores the monetary value of the insurance premium for the policy. This column is crucial for calculating the `coverage_premium_ratio` and provides a key financial metric for analyzing policy profitability and risk within the `int_policies_enriched` model. The data type `DOUBLE` indicates that this column can store decimal values.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `premium_amount` column stores the monetary value of the insurance premium for the policy. This column is crucial for calculating the `coverage_premium_ratio` and provides a key financial metric for analyzing policy profitability and risk within the `int_policies_enriched` model. The data type `DOUBLE` indicates that this column can store decimal values."
        },
        {
          "name": "coverage_amount",
          "type": "INTEGER",
          "description": "This column, `coverage_amount`, stores the integer value representing the monetary coverage provided by the insurance policy.  It reflects the financial protection offered to the policyholder in the event of a covered loss. This data is crucial for understanding the scope and value of each policy within the `int_policies_enriched` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `coverage_amount`, stores the integer value representing the monetary coverage provided by the insurance policy.  It reflects the financial protection offered to the policyholder in the event of a covered loss. This data is crucial for understanding the scope and value of each policy within the `int_policies_enriched` model."
        },
        {
          "name": "status",
          "type": "VARCHAR",
          "description": "The `status` column in the `int_policies_enriched` table stores the current status of a policy, likely reflecting its lifecycle (e.g., active, cancelled, pending). This column is inherited from the `stg_policies` staging model and is crucial for filtering and analyzing policies based on their current state within the claims processing system.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `status` column in the `int_policies_enriched` table stores the current status of a policy, likely reflecting its lifecycle (e.g., active, cancelled, pending). This column is inherited from the `stg_policies` staging model and is crucial for filtering and analyzing policies based on their current state within the claims processing system."
        },
        {
          "name": "agent_id",
          "type": "VARCHAR",
          "description": "This column, `agent_id`, stores the unique identifier of the agent associated with the policy. It's used to link policy information with agent details from the `stg_agents` table, enabling analysis of agent performance and policy assignment. The data type is VARCHAR, indicating that the agent ID is stored as a string.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column, `agent_id`, stores the unique identifier of the agent associated with the policy. It's used to link policy information with agent details from the `stg_agents` table, enabling analysis of agent performance and policy assignment. The data type is VARCHAR, indicating that the agent ID is stored as a string."
        },
        {
          "name": "policy_number",
          "type": "VARCHAR",
          "description": "This column stores the unique policy identification number as a string. It's a key identifier used to link policy data with agent information within the `int_policies_enriched` model, enabling analysis of policy details alongside agent performance. This value is sourced directly from the `stg_policies` staging model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the unique policy identification number as a string. It's a key identifier used to link policy data with agent information within the `int_policies_enriched` model, enabling analysis of policy details alongside agent performance. This value is sourced directly from the `stg_policies` staging model."
        },
        {
          "name": "policy_term_days",
          "type": "BIGINT",
          "description": "`policy_term_days` stores the policy term duration in days, represented as a large integer. This column indicates the length of the policy's coverage period, crucial for understanding the policy's effective duration and potentially used in calculations related to premium allocation or policy lifecycle analysis within the `int_policies_enriched` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`policy_term_days` stores the policy term duration in days, represented as a large integer. This column indicates the length of the policy's coverage period, crucial for understanding the policy's effective duration and potentially used in calculations related to premium allocation or policy lifecycle analysis within the `int_policies_enriched` model."
        },
        {
          "name": "effective_status",
          "type": "VARCHAR",
          "description": "The `effective_status` column in the `int_policies_enriched` model stores the current status of a policy, likely indicating whether it's active, cancelled, or pending. This status is crucial for understanding the lifecycle of a policy and is used in downstream analysis to filter and categorize policies based on their operational state. The specific values and their meanings would be defined in the source data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `effective_status` column in the `int_policies_enriched` model stores the current status of a policy, likely indicating whether it's active, cancelled, or pending. This status is crucial for understanding the lifecycle of a policy and is used in downstream analysis to filter and categorize policies based on their operational state. The specific values and their meanings would be defined in the source data."
        },
        {
          "name": "coverage_premium_ratio",
          "type": "DOUBLE",
          "description": "This column, `coverage_premium_ratio`, stores the ratio of coverage to premium for each policy. It's a calculated value within the `int_policies_enriched` model, likely used to understand the relationship between the coverage amount and the cost of the policy. This ratio could be used for profitability analysis or risk assessment.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `coverage_premium_ratio`, stores the ratio of coverage to premium for each policy. It's a calculated value within the `int_policies_enriched` model, likely used to understand the relationship between the coverage amount and the cost of the policy. This ratio could be used for profitability analysis or risk assessment."
        },
        {
          "name": "agent_name",
          "type": "VARCHAR",
          "description": "This column, `agent_name`, stores the name of the insurance agent associated with the policy. It's sourced from the `stg_agents` model and is included to provide agent-level context for each policy within the `int_policies_enriched` model. This allows for analysis and reporting based on agent performance and policy assignment.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `agent_name`, stores the name of the insurance agent associated with the policy. It's sourced from the `stg_agents` model and is included to provide agent-level context for each policy within the `int_policies_enriched` model. This allows for analysis and reporting based on agent performance and policy assignment."
        },
        {
          "name": "office_location",
          "type": "VARCHAR",
          "description": "The `office_location` column stores the physical location of the agent associated with the policy. This information, sourced from the `stg_agents` model, is crucial for understanding the geographic distribution of policies and potentially for regional performance analysis.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `office_location` column stores the physical location of the agent associated with the policy. This information, sourced from the `stg_agents` model, is crucial for understanding the geographic distribution of policies and potentially for regional performance analysis."
        },
        {
          "name": "agent_specialization",
          "type": "VARCHAR",
          "description": "This column, `agent_specialization`, stores the area of expertise for the agent associated with the policy. It's derived from the `stg_agents` model and is crucial for understanding the alignment between the policy type and the agent's specialization, which can be used for analysis of agent performance and policy matching.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `agent_specialization`, stores the area of expertise for the agent associated with the policy. It's derived from the `stg_agents` model and is crucial for understanding the alignment between the policy type and the agent's specialization, which can be used for analysis of agent performance and policy matching."
        },
        {
          "name": "agent_experience",
          "type": "VARCHAR",
          "description": "This column, `agent_experience`, stores the agent's experience level as a string value. It's sourced from the `stg_agents` staging model and provides context about the agent associated with a policy. This information helps in understanding the agent's expertise and potential impact on policy performance.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `agent_experience`, stores the agent's experience level as a string value. It's sourced from the `stg_agents` staging model and provides context about the agent associated with a policy. This information helps in understanding the agent's expertise and potential impact on policy performance."
        },
        {
          "name": "specialization_alignment",
          "type": "VARCHAR",
          "description": "This column, `specialization_alignment`, indicates whether an agent's specialization aligns with the policy type. It stores either 'ALIGNED' or 'MISALIGNED' based on a comparison between the agent's specialization and the policy type. This alignment helps assess the match between agent expertise and the policies they handle, potentially impacting performance analysis.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `specialization_alignment`, indicates whether an agent's specialization aligns with the policy type. It stores either 'ALIGNED' or 'MISALIGNED' based on a comparison between the agent's specialization and the policy type. This alignment helps assess the match between agent expertise and the policies they handle, potentially impacting performance analysis."
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "`dbt_updated_at`: This column stores the timestamp indicating when the policy data in this enriched model was last updated. It's a metadata field inherited from the source `policies` table, providing a record of the data's freshness and allowing for tracking of data changes. This is useful for understanding the recency of the policy information.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`dbt_updated_at`: This column stores the timestamp indicating when the policy data in this enriched model was last updated. It's a metadata field inherited from the source `policies` table, providing a record of the data's freshness and allowing for tracking of data changes. This is useful for understanding the recency of the policy information."
        },
        {
          "name": "_dbt_source_project",
          "type": "VARCHAR",
          "description": "This column, `_dbt_source_project`, stores the name of the dbt project from which the source data originated.  It's a metadata field used for tracking the lineage of the policy data within the `claims_processing` project. This allows for identifying the source of the data and understanding its origin within the data pipeline.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `_dbt_source_project`, stores the name of the dbt project from which the source data originated.  It's a metadata field used for tracking the lineage of the policy data within the `claims_processing` project. This allows for identifying the source of the data and understanding its origin within the data pipeline."
        }
      ],
      "sql": "{{\n    config(\n        materialized='view',\n        tags=['intermediate', 'policies', 'daily']\n    )\n}}\n\nWITH policies AS (\n    SELECT * FROM {{ ref('stg_policies') }}\n),\n\nagents AS (\n    SELECT * FROM {{ ref('stg_agents') }}\n)\n\nSELECT\n    p.policy_id,\n    p.customer_id,\n    p.policy_type,\n    p.start_date,\n    p.end_date,\n    p.premium_amount,\n    p.coverage_amount,\n    p.status,\n    p.agent_id,\n    p.policy_number,\n    p.policy_term_days,\n    p.effective_status,\n    p.coverage_premium_ratio,\n    -- Agent information\n    a.agent_name,\n    a.office_location,\n    a.specialization AS agent_specialization,\n    a.experience_level AS agent_experience,\n    -- Policy-agent alignment\n    CASE\n        WHEN a.specialization = p.policy_type THEN 'ALIGNED'\n        ELSE 'MISALIGNED'\n    END AS specialization_alignment,\n    -- Metadata fields\n    p.dbt_updated_at,\n    p._dbt_source_project\nFROM policies p\nLEFT JOIN agents a ON p.agent_id = a.agent_id",
      "materialized": "view",
      "schema": "intermediate",
      "file_path": "models/intermediate/int_policies_enriched.sql",
      "database": "insurance_data",
      "tags": [
        "intermediate",
        "policies",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.policy_management.int_policies_enriched",
        "metadata": {
          "type": "VIEW",
          "schema": "claims_processing_intermediate",
          "name": "int_policies_enriched",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `int_policies_enriched` dbt model in the `claims_processing` project enriches policy data by joining it with agent information. This intermediate model selects and transforms data from the `stg_policies` and `stg_agents` staging models, creating a view with 20 columns. Key transformations include calculating a `coverage_premium_ratio` and determining `specialization_alignment` between policy type and agent specialization. This model serves as a foundational layer, providing enriched policy data for downstream analysis and reporting within the data pipeline."
    },
    {
      "id": "c12",
      "name": "mart_policy_details",
      "project": "claims_processing",
      "description": "The `mart_policy_details` dbt model in the `claims_processing` project serves as a core reporting mart for policy-level information. It consolidates enriched policy data from the `int_policies_enriched` intermediate model and joins it with customer risk profile data from the `customer_risk` project, if available. This model produces a table containing detailed policy attributes such as policy type, dates, premiums, coverage, and status, along with associated customer risk metrics. Key transformations include enriching policy data and conditionally joining with customer risk data, providing a comprehensive view for policy analysis and reporting.",
      "columns": [
        {
          "name": "policy_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for an insurance policy.  It is used to link policy details within the `mart_policy_details` model, enabling analysis of policy attributes and their relationship to customer risk profiles. This ID is crucial for identifying and tracking individual policies across the claims processing system.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for an insurance policy.  It is used to link policy details within the `mart_policy_details` model, enabling analysis of policy attributes and their relationship to customer risk profiles. This ID is crucial for identifying and tracking individual policies across the claims processing system."
        },
        {
          "name": "customer_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for the customer associated with a specific policy.  In the `mart_policy_details` model, `customer_id` links policy information with customer risk profiles, enabling analysis of customer behavior and risk factors.  The value is a VARCHAR, and the SQL context shows a default value of 'CU0000' is assigned when customer risk data is unavailable.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for the customer associated with a specific policy.  In the `mart_policy_details` model, `customer_id` links policy information with customer risk profiles, enabling analysis of customer behavior and risk factors.  The value is a VARCHAR, and the SQL context shows a default value of 'CU0000' is assigned when customer risk data is unavailable."
        },
        {
          "name": "policy_type",
          "type": "VARCHAR",
          "description": "This column, `policy_type`, stores the type of insurance policy (e.g., auto, home, life). It's a key attribute for categorizing and analyzing policies within the `mart_policy_details` model. This information is crucial for understanding the distribution of policies and for segmenting data based on policy type for reporting.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `policy_type`, stores the type of insurance policy (e.g., auto, home, life). It's a key attribute for categorizing and analyzing policies within the `mart_policy_details` model. This information is crucial for understanding the distribution of policies and for segmenting data based on policy type for reporting."
        },
        {
          "name": "start_date",
          "type": "DATE",
          "description": "The `start_date` column in the `mart_policy_details` table stores the effective start date of the policy. This date is crucial for understanding the policy's active period and is used for time-based analysis and reporting on policy performance. It represents the date from which the policy coverage and terms are in effect.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `start_date` column in the `mart_policy_details` table stores the effective start date of the policy. This date is crucial for understanding the policy's active period and is used for time-based analysis and reporting on policy performance. It represents the date from which the policy coverage and terms are in effect."
        },
        {
          "name": "end_date",
          "type": "DATE",
          "description": "The `end_date` column stores the final date of the policy's coverage period. This date is crucial for determining the policy's active duration and status, enabling analysis of policy lifecycles and expiration trends within the `mart_policy_details` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `end_date` column stores the final date of the policy's coverage period. This date is crucial for determining the policy's active duration and status, enabling analysis of policy lifecycles and expiration trends within the `mart_policy_details` model."
        },
        {
          "name": "premium_amount",
          "type": "DOUBLE",
          "description": "The `premium_amount` column in the `mart_policy_details` table stores the original premium amount for each policy, represented as a double-precision floating-point number. This value is a core policy attribute used for financial analysis and reporting.  It serves as the basis for calculating the `risk_adjusted_premium` based on the customer's risk profile.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `premium_amount` column in the `mart_policy_details` table stores the original premium amount for each policy, represented as a double-precision floating-point number. This value is a core policy attribute used for financial analysis and reporting.  It serves as the basis for calculating the `risk_adjusted_premium` based on the customer's risk profile."
        },
        {
          "name": "coverage_amount",
          "type": "INTEGER",
          "description": "`coverage_amount` stores the integer value representing the monetary coverage limit associated with the policy. This column is crucial for understanding the financial exposure of the insurance policy and is used for reporting and analysis of policy coverage levels within the `mart_policy_details` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`coverage_amount` stores the integer value representing the monetary coverage limit associated with the policy. This column is crucial for understanding the financial exposure of the insurance policy and is used for reporting and analysis of policy coverage levels within the `mart_policy_details` model."
        },
        {
          "name": "status",
          "type": "VARCHAR",
          "description": "The `status` column in the `mart_policy_details` table indicates the current state of a policy, such as \"Active\", \"Cancelled\", or \"Expired\". This column is crucial for understanding the lifecycle of a policy and filtering data for specific reporting needs. The values likely reflect the policy's operational state, enabling analysis of policy performance and trends.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `status` column in the `mart_policy_details` table indicates the current state of a policy, such as \"Active\", \"Cancelled\", or \"Expired\". This column is crucial for understanding the lifecycle of a policy and filtering data for specific reporting needs. The values likely reflect the policy's operational state, enabling analysis of policy performance and trends."
        },
        {
          "name": "agent_id",
          "type": "VARCHAR",
          "description": "The `agent_id` column stores the unique identifier for the insurance agent associated with the policy. This VARCHAR field links each policy record in `mart_policy_details` to a specific agent, enabling analysis of policy performance by agent. This allows for reporting and analysis of policy sales and management by agent.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "The `agent_id` column stores the unique identifier for the insurance agent associated with the policy. This VARCHAR field links each policy record in `mart_policy_details` to a specific agent, enabling analysis of policy performance by agent. This allows for reporting and analysis of policy sales and management by agent."
        },
        {
          "name": "policy_number",
          "type": "VARCHAR",
          "description": "This column, `policy_number`, stores the unique identifier assigned to each insurance policy.  It serves as a key attribute within the `mart_policy_details` model, enabling the linking and analysis of policy-specific information, such as status, agent, and term details. This allows for efficient policy-level reporting and analysis.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `policy_number`, stores the unique identifier assigned to each insurance policy.  It serves as a key attribute within the `mart_policy_details` model, enabling the linking and analysis of policy-specific information, such as status, agent, and term details. This allows for efficient policy-level reporting and analysis."
        },
        {
          "name": "policy_term_days",
          "type": "BIGINT",
          "description": "`policy_term_days` stores the number of days the policy is active, represented as a BIGINT. This column is crucial for calculating policy durations, analyzing policy lifecycles, and understanding the length of coverage periods within the `mart_policy_details` model. It likely represents the difference between the policy's start and end dates.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`policy_term_days` stores the number of days the policy is active, represented as a BIGINT. This column is crucial for calculating policy durations, analyzing policy lifecycles, and understanding the length of coverage periods within the `mart_policy_details` model. It likely represents the difference between the policy's start and end dates."
        },
        {
          "name": "effective_status",
          "type": "VARCHAR",
          "description": "The `effective_status` column in the `mart_policy_details` table stores the current status of a policy, such as \"Active\" or \"Cancelled\". This column is crucial for understanding the current state of a policy within the reporting mart, enabling analysis of active policies and tracking policy lifecycle events. The `effective_status` is derived from the enriched policy data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `effective_status` column in the `mart_policy_details` table stores the current status of a policy, such as \"Active\" or \"Cancelled\". This column is crucial for understanding the current state of a policy within the reporting mart, enabling analysis of active policies and tracking policy lifecycle events. The `effective_status` is derived from the enriched policy data."
        },
        {
          "name": "coverage_premium_ratio",
          "type": "DOUBLE",
          "description": "The `coverage_premium_ratio` column in the `mart_policy_details` table stores the ratio of policy coverage to the premium amount, calculated as a double-precision number. This ratio provides a key metric for understanding the relationship between the financial value of the policy's coverage and the cost paid by the policyholder, useful for analyzing policy profitability and pricing strategies.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `coverage_premium_ratio` column in the `mart_policy_details` table stores the ratio of policy coverage to the premium amount, calculated as a double-precision number. This ratio provides a key metric for understanding the relationship between the financial value of the policy's coverage and the cost paid by the policyholder, useful for analyzing policy profitability and pricing strategies."
        },
        {
          "name": "agent_name",
          "type": "VARCHAR",
          "description": "The `agent_name` column stores the name of the insurance agent associated with the policy. This column is crucial for identifying the agent responsible for a specific policy within the `mart_policy_details` model, enabling analysis of agent performance and policy distribution.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `agent_name` column stores the name of the insurance agent associated with the policy. This column is crucial for identifying the agent responsible for a specific policy within the `mart_policy_details` model, enabling analysis of agent performance and policy distribution."
        },
        {
          "name": "office_location",
          "type": "VARCHAR",
          "description": "The `office_location` column in the `mart_policy_details` table stores the physical location of the insurance policy's associated office, as extracted from the enriched policy data. This column is crucial for analyzing policy distribution and performance by office location, enabling regional performance comparisons and strategic decision-making.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `office_location` column in the `mart_policy_details` table stores the physical location of the insurance policy's associated office, as extracted from the enriched policy data. This column is crucial for analyzing policy distribution and performance by office location, enabling regional performance comparisons and strategic decision-making."
        },
        {
          "name": "agent_specialization",
          "type": "VARCHAR",
          "description": "This column, `agent_specialization`, stores a text description of the insurance agent's area of expertise. Within the `mart_policy_details` model, this information helps to categorize policies based on the agent's specialization, enabling analysis of policy performance by agent skill set. This could include areas like commercial, personal, or specific product lines.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `agent_specialization`, stores a text description of the insurance agent's area of expertise. Within the `mart_policy_details` model, this information helps to categorize policies based on the agent's specialization, enabling analysis of policy performance by agent skill set. This could include areas like commercial, personal, or specific product lines."
        },
        {
          "name": "agent_experience",
          "type": "VARCHAR",
          "description": "`agent_experience` stores the agent's experience level, likely as a text string. This column provides information about the agent associated with the policy, potentially used for analyzing agent performance or identifying experience-based trends. The `VARCHAR` data type suggests the experience is categorized or described qualitatively (e.g., \"Junior,\" \"Experienced,\" \"Senior\").",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`agent_experience` stores the agent's experience level, likely as a text string. This column provides information about the agent associated with the policy, potentially used for analyzing agent performance or identifying experience-based trends. The `VARCHAR` data type suggests the experience is categorized or described qualitatively (e.g., \"Junior,\" \"Experienced,\" \"Senior\")."
        },
        {
          "name": "specialization_alignment",
          "type": "VARCHAR",
          "description": "This column, `specialization_alignment`, stores a VARCHAR value indicating the alignment of an agent's specialization. It likely categorizes or describes how well an agent's expertise matches the policy. This information is useful for understanding agent performance and matching policies with the most suitable agents.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `specialization_alignment`, stores a VARCHAR value indicating the alignment of an agent's specialization. It likely categorizes or describes how well an agent's expertise matches the policy. This information is useful for understanding agent performance and matching policies with the most suitable agents."
        },
        {
          "name": "customer_name",
          "type": "VARCHAR",
          "description": "The `customer_name` column in the `mart_policy_details` table stores the name of the customer associated with the policy. This column facilitates customer-level analysis by linking policy details with customer identities, enabling reporting and segmentation based on customer attributes. The data is sourced from the `customer_risk` project.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `customer_name` column in the `mart_policy_details` table stores the name of the customer associated with the policy. This column facilitates customer-level analysis by linking policy details with customer identities, enabling reporting and segmentation based on customer attributes. The data is sourced from the `customer_risk` project."
        },
        {
          "name": "risk_category",
          "type": "VARCHAR",
          "description": "`risk_category` stores a customer's assessed risk level (e.g., HIGH_RISK, MEDIUM_RISK, LOW_RISK, UNKNOWN) as determined by the `customer_risk` project. This column is used to categorize policies based on customer risk profiles, influencing calculations like the `risk_adjusted_premium` within the `mart_policy_details` model.  The risk category is used to adjust the premium amount.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`risk_category` stores a customer's assessed risk level (e.g., HIGH_RISK, MEDIUM_RISK, LOW_RISK, UNKNOWN) as determined by the `customer_risk` project. This column is used to categorize policies based on customer risk profiles, influencing calculations like the `risk_adjusted_premium` within the `mart_policy_details` model.  The risk category is used to adjust the premium amount."
        },
        {
          "name": "risk_score",
          "type": "INTEGER",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "credit_score",
          "type": "INTEGER",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "claim_frequency",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "previous_claims_count",
          "type": "INTEGER",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "risk_adjusted_premium",
          "type": "DOUBLE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "policy_source",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "risk_source",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        }
      ],
      "sql": "{{\n    config(\n        materialized='table',\n        tags=['mart', 'policies', 'daily']\n    )\n}}\n\nWITH policies_enriched AS (\n    SELECT * FROM {{ ref('int_policies_enriched') }}\n),\n\n-- Reference to the customer risk project\ncustomer_risk_profile AS (\n    {% if execute %}\n        {% if adapter.get_relation(this.database, 'mart', 'mart_customer_risk_profile') %}\n            SELECT * FROM {{ ref('customer_risk', 'mart_customer_risk_profile') }}\n        {% else %}\n            SELECT\n                'CU0000' AS customer_id,\n                0 AS credit_score,\n                'UNKNOWN' AS claim_frequency,\n                0 AS risk_score,\n                0 AS previous_claims_count,\n                'UNKNOWN' AS risk_category,\n                'UNKNOWN' AS customer_name,\n                'customer_risk' AS _dbt_source_project\n            WHERE 1=0\n        {% endif %}\n    {% else %}\n        SELECT\n            'CU0000' AS customer_id,\n            0 AS credit_score,\n            'UNKNOWN' AS claim_frequency,\n            0 AS risk_score,\n            0 AS previous_claims_count,\n            'UNKNOWN' AS risk_category,\n            'UNKNOWN' AS customer_name,\n            'customer_risk' AS _dbt_source_project\n        WHERE 1=0\n    {% endif %}\n)\n\nSELECT\n    pe.policy_id,\n    pe.customer_id,\n    pe.policy_type,\n    pe.start_date,\n    pe.end_date,\n    pe.premium_amount,\n    pe.coverage_amount,\n    pe.status,\n    pe.agent_id,\n    pe.policy_number,\n    pe.policy_term_days,\n    pe.effective_status,\n    pe.coverage_premium_ratio,\n    pe.agent_name,\n    pe.office_location,\n    pe.agent_specialization,\n    pe.agent_experience,\n    pe.specialization_alignment,\n    -- Customer risk information\n    cr.customer_name,\n    cr.risk_category,\n    cr.risk_score,\n    cr.credit_score,\n    cr.claim_frequency,\n    cr.previous_claims_count,\n    -- Risk-adjusted premium calculation\n    CASE\n        WHEN cr.risk_category = 'HIGH_RISK' THEN pe.premium_amount * 1.25\n        WHEN cr.risk_category = 'MEDIUM_RISK' THEN pe.premium_amount * 1.1\n        WHEN cr.risk_category = 'LOW_RISK' THEN pe.premium_amount * 0.95\n        ELSE pe.premium_amount\n    END AS risk_adjusted_premium,\n    -- Cross project attribution\n    pe._dbt_source_project AS policy_source,\n    cr._dbt_source_project AS risk_source,\n    -- Metadata\n    CURRENT_TIMESTAMP AS dbt_updated_at\nFROM policies_enriched pe\nLEFT JOIN customer_risk_profile cr ON pe.customer_id = cr.customer_id",
      "materialized": "table",
      "schema": "mart",
      "file_path": "models/mart/mart_policy_details.sql",
      "database": "insurance_data",
      "tags": [
        "mart",
        "policies",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.policy_management.mart_policy_details",
        "metadata": {
          "type": "BASE TABLE",
          "schema": "claims_processing_mart",
          "name": "mart_policy_details",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `mart_policy_details` dbt model in the `claims_processing` project serves as a core reporting mart for policy-level information. It consolidates enriched policy data from the `int_policies_enriched` intermediate model and joins it with customer risk profile data from the `customer_risk` project, if available. This model produces a table containing detailed policy attributes such as policy type, dates, premiums, coverage, and status, along with associated customer risk metrics. Key transformations include enriching policy data and conditionally joining with customer risk data, providing a comprehensive view for policy analysis and reporting."
    },
    {
      "id": "c1",
      "name": "stg_risk_factors",
      "project": "customer_risk",
      "description": "The `stg_risk_factors` dbt model in the `customer_risk` project stages risk factor data. It transforms data from the `risk_factors` source, casting `assessment_date` and `last_assessment` to DATE format. This model calculates `days_since_last_assessment` and derives a `credit_rating` based on the `credit_score`. Finally, it adds metadata fields like `dbt_updated_at` and `_dbt_source_project`, preparing the data for further analysis and downstream models in the data pipeline.",
      "columns": [
        {
          "name": "risk_id",
          "type": "VARCHAR",
          "description": "`risk_id` is a VARCHAR column that uniquely identifies a specific risk factor record. This column is inherited from the source data and serves as a primary key, enabling the identification and tracking of individual risk factors within the `stg_risk_factors` model.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "`risk_id` is a VARCHAR column that uniquely identifies a specific risk factor record. This column is inherited from the source data and serves as a primary key, enabling the identification and tracking of individual risk factors within the `stg_risk_factors` model."
        },
        {
          "name": "customer_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for a customer, represented as a string.  It links risk factor data to individual customers within the `stg_risk_factors` model. This `customer_id` is crucial for aggregating and analyzing risk factors at the customer level.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for a customer, represented as a string.  It links risk factor data to individual customers within the `stg_risk_factors` model. This `customer_id` is crucial for aggregating and analyzing risk factors at the customer level."
        },
        {
          "name": "assessment_date",
          "type": "DATE",
          "description": "This column stores the date when a risk assessment was performed.  Within the `stg_risk_factors` model, `assessment_date` is used to calculate the `days_since_last_assessment`, providing a temporal context for risk factor analysis. This date is cast to the DATE data type for consistency and efficient date-based calculations.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the date when a risk assessment was performed.  Within the `stg_risk_factors` model, `assessment_date` is used to calculate the `days_since_last_assessment`, providing a temporal context for risk factor analysis. This date is cast to the DATE data type for consistency and efficient date-based calculations."
        },
        {
          "name": "credit_score",
          "type": "INTEGER",
          "description": "This column stores the customer's credit score as an integer.  It's a key risk factor used to derive the `credit_rating` in the model.  The credit score is used to categorize customers into different credit rating tiers (Excellent, Good, Fair, Poor, Very Poor).",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's credit score as an integer.  It's a key risk factor used to derive the `credit_rating` in the model.  The credit score is used to categorize customers into different credit rating tiers (Excellent, Good, Fair, Poor, Very Poor)."
        },
        {
          "name": "claim_frequency",
          "type": "VARCHAR",
          "description": "`claim_frequency` stores a string representation of how often a customer files claims. This column likely represents a risk factor used in assessing a customer's overall risk profile within the `stg_risk_factors` model. The specific business meaning or calculation logic behind the frequency is not explicitly defined in the context, but it is a key input for risk assessment.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`claim_frequency` stores a string representation of how often a customer files claims. This column likely represents a risk factor used in assessing a customer's overall risk profile within the `stg_risk_factors` model. The specific business meaning or calculation logic behind the frequency is not explicitly defined in the context, but it is a key input for risk assessment."
        },
        {
          "name": "risk_score",
          "type": "DOUBLE",
          "description": "The `risk_score` column in the `stg_risk_factors` table stores a numerical value representing the overall risk associated with a customer. This score is likely calculated based on various risk factors, including `credit_score` and `claim_frequency`, to provide a consolidated risk assessment. This DOUBLE data type suggests a continuous scale for the risk score.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `risk_score` column in the `stg_risk_factors` table stores a numerical value representing the overall risk associated with a customer. This score is likely calculated based on various risk factors, including `credit_score` and `claim_frequency`, to provide a consolidated risk assessment. This DOUBLE data type suggests a continuous scale for the risk score."
        },
        {
          "name": "previous_claims_count",
          "type": "INTEGER",
          "description": "`previous_claims_count` stores the number of claims a customer has filed prior to the current assessment. This integer value is a key risk factor used in the `stg_risk_factors` model to assess customer risk. It likely contributes to the overall risk score and potentially influences the derived `credit_rating`.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`previous_claims_count` stores the number of claims a customer has filed prior to the current assessment. This integer value is a key risk factor used in the `stg_risk_factors` model to assess customer risk. It likely contributes to the overall risk score and potentially influences the derived `credit_rating`."
        },
        {
          "name": "risk_category",
          "type": "VARCHAR",
          "description": "The `risk_category` column in the `stg_risk_factors` model stores a categorical assessment of risk. This column likely categorizes customers based on their risk factors, potentially derived from the `risk_score` and other input columns, to facilitate risk-based segmentation and analysis. The specific categories and their derivation are not explicitly defined in the context, but the column's presence suggests a grouping of customers by risk level.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `risk_category` column in the `stg_risk_factors` model stores a categorical assessment of risk. This column likely categorizes customers based on their risk factors, potentially derived from the `risk_score` and other input columns, to facilitate risk-based segmentation and analysis. The specific categories and their derivation are not explicitly defined in the context, but the column's presence suggests a grouping of customers by risk level."
        },
        {
          "name": "last_assessment",
          "type": "DATE",
          "description": "This column stores the date of the last risk assessment for a customer.  It's used to calculate the `days_since_last_assessment`, providing insight into how recently a customer's risk profile was evaluated.  The `last_assessment` is cast to a DATE data type within the `stg_risk_factors` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the date of the last risk assessment for a customer.  It's used to calculate the `days_since_last_assessment`, providing insight into how recently a customer's risk profile was evaluated.  The `last_assessment` is cast to a DATE data type within the `stg_risk_factors` model."
        },
        {
          "name": "assessment_source",
          "type": "VARCHAR",
          "description": "This column, `assessment_source`, stores the origin or system from which the risk assessment data was obtained.  It helps identify the source of the risk factor information within the `stg_risk_factors` model, providing context for the data. This is a VARCHAR field, indicating the source is likely represented as a text string.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `assessment_source`, stores the origin or system from which the risk assessment data was obtained.  It helps identify the source of the risk factor information within the `stg_risk_factors` model, providing context for the data. This is a VARCHAR field, indicating the source is likely represented as a text string."
        },
        {
          "name": "days_since_last_assessment",
          "type": "BIGINT",
          "description": "This column stores the number of days elapsed since the last risk assessment, calculated as the difference between the `assessment_date` and `last_assessment` dates. This value helps assess the recency of risk factors, providing context for understanding a customer's current risk profile within the `stg_risk_factors` model. The `DATEDIFF` function is used to calculate this value.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the number of days elapsed since the last risk assessment, calculated as the difference between the `assessment_date` and `last_assessment` dates. This value helps assess the recency of risk factors, providing context for understanding a customer's current risk profile within the `stg_risk_factors` model. The `DATEDIFF` function is used to calculate this value."
        },
        {
          "name": "credit_rating",
          "type": "VARCHAR",
          "description": "The `credit_rating` column stores a customer's creditworthiness as a VARCHAR, categorized as either 'POOR' or 'VERY_POOR'. This column is derived within the `stg_risk_factors` model based on the `credit_score`, providing a simplified risk assessment for downstream analysis. The rating is determined by a simple threshold: a credit score below 600 results in a 'VERY_POOR' rating, otherwise 'POOR'.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `credit_rating` column stores a customer's creditworthiness as a VARCHAR, categorized as either 'POOR' or 'VERY_POOR'. This column is derived within the `stg_risk_factors` model based on the `credit_score`, providing a simplified risk assessment for downstream analysis. The rating is determined by a simple threshold: a credit score below 600 results in a 'VERY_POOR' rating, otherwise 'POOR'."
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "The `dbt_updated_at` column stores the timestamp indicating when the `stg_risk_factors` model was last refreshed. This timestamp, captured using `CURRENT_TIMESTAMP`, provides a record of the model's update time, crucial for tracking data freshness and lineage within the `customer_risk` project.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `dbt_updated_at` column stores the timestamp indicating when the `stg_risk_factors` model was last refreshed. This timestamp, captured using `CURRENT_TIMESTAMP`, provides a record of the model's update time, crucial for tracking data freshness and lineage within the `customer_risk` project."
        },
        {
          "name": "_dbt_source_project",
          "type": "VARCHAR",
          "description": "This column, `_dbt_source_project`, stores the name of the dbt project from which the source data originates, in this case, 'customer_risk'.  It serves as a metadata field, enabling lineage tracking and identification of the source project for the risk factor data within the `stg_risk_factors` model. This is useful for understanding the data's origin and managing data pipelines.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `_dbt_source_project`, stores the name of the dbt project from which the source data originates, in this case, 'customer_risk'.  It serves as a metadata field, enabling lineage tracking and identification of the source project for the risk factor data within the `stg_risk_factors` model. This is useful for understanding the data's origin and managing data pipelines."
        }
      ],
      "sql": "{{\n    config(\n        materialized='view',\n        tags=['staging', 'risk', 'daily']\n    )\n}}\n\nWITH source AS (\n    SELECT * FROM {{ ref('risk_factors') }}\n)\n\nSELECT\n    risk_id,\n    customer_id,\n    CAST(assessment_date AS DATE) AS assessment_date,\n    credit_score,\n    claim_frequency,\n    risk_score,\n    previous_claims_count,\n    risk_category,\n    CAST(last_assessment AS DATE) AS last_assessment,\n    assessment_source,\n    -- Derived fields\n    DATEDIFF('day', last_assessment, assessment_date) AS days_since_last_assessment,\n    CASE\n        WHEN credit_score >= 750 THEN 'EXCELLENT'\n        WHEN credit_score >= 700 THEN 'GOOD'\n        WHEN credit_score >= 650 THEN 'FAIR'\n        WHEN credit_score >= 600 THEN 'POOR'\n        ELSE 'VERY_POOR'\n    END AS credit_rating,\n    -- Metadata fields\n    CURRENT_TIMESTAMP AS dbt_updated_at,\n    'customer_risk' AS _dbt_source_project\nFROM source",
      "materialized": "view",
      "schema": "staging",
      "file_path": "models/staging/stg_risk_factors.sql",
      "database": "insurance_data",
      "tags": [
        "staging",
        "risk",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.customer_risk.stg_risk_factors",
        "metadata": {
          "type": "VIEW",
          "schema": "customer_risk_staging",
          "name": "stg_risk_factors",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `stg_risk_factors` dbt model in the `customer_risk` project stages risk factor data. It transforms data from the `risk_factors` source, casting `assessment_date` and `last_assessment` to DATE format. This model calculates `days_since_last_assessment` and derives a `credit_rating` based on the `credit_score`. Finally, it adds metadata fields like `dbt_updated_at` and `_dbt_source_project`, preparing the data for further analysis and downstream models in the data pipeline."
    },
    {
      "id": "c2",
      "name": "stg_customers",
      "project": "customer_risk",
      "description": "The `stg_customers` dbt model in the `customer_risk` project serves as a staging layer for customer data. It selects all columns from the raw `customers` source, casts `date_of_birth` and `joining_date` to the DATE data type, and derives new fields. This model generates a view containing customer details, including calculated fields like `customer_name`, `age`, and `months_as_customer`, along with metadata.  It plays a crucial role in the data pipeline by transforming and preparing customer data for downstream analysis and reporting, making it easier to work with.",
      "columns": [
        {
          "name": "customer_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for each customer, sourced from the raw `customers` table.  It's a VARCHAR data type, used to link customer records across the data pipeline.  This `customer_id` is essential for identifying and tracking individual customer information within the `stg_customers` staging model.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for each customer, sourced from the raw `customers` table.  It's a VARCHAR data type, used to link customer records across the data pipeline.  This `customer_id` is essential for identifying and tracking individual customer information within the `stg_customers` staging model."
        },
        {
          "name": "first_name",
          "type": "VARCHAR",
          "description": "This column stores the customer's first name as a string.  Within the `stg_customers` staging model, this field is directly selected from the raw `customers` source and is used in the `customer_name` field.  It contributes to identifying and displaying customer information.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's first name as a string.  Within the `stg_customers` staging model, this field is directly selected from the raw `customers` source and is used in the `customer_name` field.  It contributes to identifying and displaying customer information."
        },
        {
          "name": "last_name",
          "type": "VARCHAR",
          "description": "This column stores the customer's last name as a string.  It's used in the `stg_customers` model to provide a complete customer name when combined with the `first_name` column. This is a key piece of customer information used for identification and reporting.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's last name as a string.  It's used in the `stg_customers` model to provide a complete customer name when combined with the `first_name` column. This is a key piece of customer information used for identification and reporting."
        },
        {
          "name": "email",
          "type": "VARCHAR",
          "description": "This column stores the customer's email address as a string.  It's a direct pass-through from the raw `customers` source, providing a key contact method for each customer within the staging layer. This field is essential for identifying and communicating with customers in downstream analyses.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's email address as a string.  It's a direct pass-through from the raw `customers` source, providing a key contact method for each customer within the staging layer. This field is essential for identifying and communicating with customers in downstream analyses."
        },
        {
          "name": "phone",
          "type": "VARCHAR",
          "description": "The `phone` column in the `stg_customers` model stores the customer's phone number as a string. This column is directly sourced from the raw `customers` table and is included to provide contact information for each customer.  It's a key piece of customer data for various analyses and reporting purposes.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `phone` column in the `stg_customers` model stores the customer's phone number as a string. This column is directly sourced from the raw `customers` table and is included to provide contact information for each customer.  It's a key piece of customer data for various analyses and reporting purposes."
        },
        {
          "name": "address",
          "type": "VARCHAR",
          "description": "This column stores the customer's street address as a string.  Within the `stg_customers` model, this column is directly sourced from the raw `customers` table and is used to provide customer location information for analysis and reporting.  No calculations are performed on this field within this model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's street address as a string.  Within the `stg_customers` model, this column is directly sourced from the raw `customers` table and is used to provide customer location information for analysis and reporting.  No calculations are performed on this field within this model."
        },
        {
          "name": "city",
          "type": "VARCHAR",
          "description": "The `city` column in the `stg_customers` staging model stores the customer's city of residence. This VARCHAR column directly reflects the city information from the raw `customers` source, providing a key attribute for customer location analysis. It's used alongside other address fields for customer segmentation and geographic reporting.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `city` column in the `stg_customers` staging model stores the customer's city of residence. This VARCHAR column directly reflects the city information from the raw `customers` source, providing a key attribute for customer location analysis. It's used alongside other address fields for customer segmentation and geographic reporting."
        },
        {
          "name": "state",
          "type": "VARCHAR",
          "description": "The `state` column stores the customer's state of residence as a VARCHAR string. This column, sourced directly from the raw `customers` data, is used to provide location information for customer segmentation and analysis within the `stg_customers` staging model. It is a key attribute for understanding customer demographics and geographic distribution.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `state` column stores the customer's state of residence as a VARCHAR string. This column, sourced directly from the raw `customers` data, is used to provide location information for customer segmentation and analysis within the `stg_customers` staging model. It is a key attribute for understanding customer demographics and geographic distribution."
        },
        {
          "name": "zip_code",
          "type": "INTEGER",
          "description": "This column stores the customer's postal code as an integer.  It's a key piece of customer address information, used for location-based analysis and potentially for segmenting customers by geographic region within the `stg_customers` staging model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's postal code as an integer.  It's a key piece of customer address information, used for location-based analysis and potentially for segmenting customers by geographic region within the `stg_customers` staging model."
        },
        {
          "name": "date_of_birth",
          "type": "DATE",
          "description": "This column stores the customer's date of birth. It's used to calculate the customer's age within the `stg_customers` model, providing a key demographic attribute for customer analysis. The data is cast to the DATE data type for consistent date-related calculations.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's date of birth. It's used to calculate the customer's age within the `stg_customers` model, providing a key demographic attribute for customer analysis. The data is cast to the DATE data type for consistent date-related calculations."
        },
        {
          "name": "gender",
          "type": "VARCHAR",
          "description": "The `gender` column in the `stg_customers` staging model stores the customer's gender as a string value. This column is directly sourced from the raw `customers` table and is included to provide customer demographic information for analysis. No calculation logic is applied to this column within the model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `gender` column in the `stg_customers` staging model stores the customer's gender as a string value. This column is directly sourced from the raw `customers` table and is included to provide customer demographic information for analysis. No calculation logic is applied to this column within the model."
        },
        {
          "name": "joining_date",
          "type": "DATE",
          "description": "This column stores the date when a customer joined the company.  The `joining_date` is cast to a DATE data type for consistent formatting and is used to calculate the `months_as_customer` field, providing insight into customer tenure. This information is crucial for understanding customer behavior and segmentation.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the date when a customer joined the company.  The `joining_date` is cast to a DATE data type for consistent formatting and is used to calculate the `months_as_customer` field, providing insight into customer tenure. This information is crucial for understanding customer behavior and segmentation."
        },
        {
          "name": "customer_name",
          "type": "VARCHAR",
          "description": "The `customer_name` column in the `stg_customers` table stores the full name of the customer. This column is derived by concatenating the `first_name` and `last_name` fields from the raw customer data, providing a user-friendly representation of the customer's identity within the staging model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `customer_name` column in the `stg_customers` table stores the full name of the customer. This column is derived by concatenating the `first_name` and `last_name` fields from the raw customer data, providing a user-friendly representation of the customer's identity within the staging model."
        },
        {
          "name": "age",
          "type": "BIGINT",
          "description": "The `age` column in the `stg_customers` table stores the customer's age as a whole number. This column is derived from the `date_of_birth` field using the `DATEDIFF` function, providing a readily available age value for customer analysis. This is crucial for understanding customer demographics and risk profiling.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `age` column in the `stg_customers` table stores the customer's age as a whole number. This column is derived from the `date_of_birth` field using the `DATEDIFF` function, providing a readily available age value for customer analysis. This is crucial for understanding customer demographics and risk profiling."
        },
        {
          "name": "months_as_customer",
          "type": "BIGINT",
          "description": "This column, `months_as_customer`, stores the number of months a customer has been a customer, calculated as the difference in months between their `joining_date` and the current date. This field is derived within the `stg_customers` model to provide a measure of customer tenure, useful for segmentation and understanding customer lifetime value. The data type is `BIGINT`, which allows for a large range of values.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `months_as_customer`, stores the number of months a customer has been a customer, calculated as the difference in months between their `joining_date` and the current date. This field is derived within the `stg_customers` model to provide a measure of customer tenure, useful for segmentation and understanding customer lifetime value. The data type is `BIGINT`, which allows for a large range of values."
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "`dbt_updated_at` stores the timestamp indicating when the `stg_customers` model was last refreshed. This timestamp, captured using `CURRENT_TIMESTAMP`, provides a record of the model's update time, aiding in data lineage and ensuring analysts can track the freshness of the customer data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`dbt_updated_at` stores the timestamp indicating when the `stg_customers` model was last refreshed. This timestamp, captured using `CURRENT_TIMESTAMP`, provides a record of the model's update time, aiding in data lineage and ensuring analysts can track the freshness of the customer data."
        },
        {
          "name": "_dbt_source_project",
          "type": "VARCHAR",
          "description": "This column, `_dbt_source_project`, stores the string literal 'customer_risk', identifying the dbt project from which the customer data originates.  It serves as a metadata field within the `stg_customers` staging model, enabling lineage tracking and source identification for the customer data. This allows for easy identification of the source project for the data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `_dbt_source_project`, stores the string literal 'customer_risk', identifying the dbt project from which the customer data originates.  It serves as a metadata field within the `stg_customers` staging model, enabling lineage tracking and source identification for the customer data. This allows for easy identification of the source project for the data."
        }
      ],
      "sql": "{{\n    config(\n        materialized='view',\n        tags=['staging', 'customers', 'daily']\n    )\n}}\n\nWITH source AS (\n    SELECT * FROM {{ ref('customers') }}\n)\n\nSELECT\n    customer_id,\n    first_name,\n    last_name,\n    email,\n    phone,\n    address,\n    city,\n    state,\n    zip_code,\n    CAST(date_of_birth AS DATE) AS date_of_birth,\n    gender,\n    CAST(joining_date AS DATE) AS joining_date,\n    -- Derived fields\n    CONCAT(first_name, ' ', last_name) AS customer_name,\n    DATEDIFF('year', date_of_birth, CURRENT_DATE()) AS age,\n    DATEDIFF('month', joining_date, CURRENT_DATE()) AS months_as_customer,\n    -- Metadata fields\n    CURRENT_TIMESTAMP AS dbt_updated_at,\n    'customer_risk' AS _dbt_source_project\nFROM source",
      "materialized": "view",
      "schema": "staging",
      "file_path": "models/staging/stg_customers.sql",
      "database": "insurance_data",
      "tags": [
        "staging",
        "customers",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.customer_risk.stg_customers",
        "metadata": {
          "type": "VIEW",
          "schema": "customer_risk_staging",
          "name": "stg_customers",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `stg_customers` dbt model in the `customer_risk` project serves as a staging layer for customer data. It selects all columns from the raw `customers` source, casts `date_of_birth` and `joining_date` to the DATE data type, and derives new fields. This model generates a view containing customer details, including calculated fields like `customer_name`, `age`, and `months_as_customer`, along with metadata.  It plays a crucial role in the data pipeline by transforming and preparing customer data for downstream analysis and reporting, making it easier to work with."
    },
    {
      "id": "c3",
      "name": "mart_customer_risk_profile",
      "project": "customer_risk",
      "description": "The `mart_customer_risk_profile` dbt model within the `customer_risk` project generates a customer-level risk profile. It consolidates customer information with risk scores and claims data to provide a comprehensive view of each customer's risk. This model materializes as a table and is tagged for daily updates. Key transformations include enriching customer data with risk assessments and integrating claims data from a separate claims processing project, calculating metrics like total claims, settlement amounts, and claim resolution times, and deriving a customer risk category.",
      "columns": [
        {
          "name": "customer_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for each customer.  It serves as the primary key, linking customer information with their associated risk profile, claims data, and calculated risk metrics within the `mart_customer_risk_profile` table. This `VARCHAR` column is crucial for joining data from various sources to build a comprehensive customer risk assessment.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for each customer.  It serves as the primary key, linking customer information with their associated risk profile, claims data, and calculated risk metrics within the `mart_customer_risk_profile` table. This `VARCHAR` column is crucial for joining data from various sources to build a comprehensive customer risk assessment."
        },
        {
          "name": "customer_name",
          "type": "VARCHAR",
          "description": "This column stores the customer's full name as a string. It's used to identify and label each customer within the `mart_customer_risk_profile` model. This allows for easy identification and reporting on customer risk profiles.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's full name as a string. It's used to identify and label each customer within the `mart_customer_risk_profile` model. This allows for easy identification and reporting on customer risk profiles."
        },
        {
          "name": "email",
          "type": "VARCHAR",
          "description": "This column stores the customer's email address. It is used to identify and link customer records within the `mart_customer_risk_profile` model, enabling the consolidation of customer data with risk and claims information. This allows for a comprehensive view of each customer's risk profile.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's email address. It is used to identify and link customer records within the `mart_customer_risk_profile` model, enabling the consolidation of customer data with risk and claims information. This allows for a comprehensive view of each customer's risk profile."
        },
        {
          "name": "city",
          "type": "VARCHAR",
          "description": "The `city` column stores the customer's city of residence. This information is used to enrich the customer risk profile, potentially enabling risk analysis based on geographic location.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `city` column stores the customer's city of residence. This information is used to enrich the customer risk profile, potentially enabling risk analysis based on geographic location."
        },
        {
          "name": "state",
          "type": "VARCHAR",
          "description": "The `state` column stores the customer's two-letter state abbreviation. This information is used to enrich the customer risk profile, potentially enabling analysis of risk factors by geographic location. It is likely sourced from customer demographic data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `state` column stores the customer's two-letter state abbreviation. This information is used to enrich the customer risk profile, potentially enabling analysis of risk factors by geographic location. It is likely sourced from customer demographic data."
        },
        {
          "name": "age",
          "type": "BIGINT",
          "description": "This column stores the customer's age as a whole number.  Used within the `mart_customer_risk_profile` model, age is a key customer attribute used in calculating risk scores and deriving the customer's risk category. It's likely used in conjunction with other factors like credit score and claim history to assess overall risk.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's age as a whole number.  Used within the `mart_customer_risk_profile` model, age is a key customer attribute used in calculating risk scores and deriving the customer's risk category. It's likely used in conjunction with other factors like credit score and claim history to assess overall risk."
        },
        {
          "name": "months_as_customer",
          "type": "BIGINT",
          "description": "`months_as_customer` represents the number of months a customer has been active. This column is crucial for understanding customer tenure and is likely used in calculating risk profiles, potentially influencing risk scores or categorizations based on customer longevity.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`months_as_customer` represents the number of months a customer has been active. This column is crucial for understanding customer tenure and is likely used in calculating risk profiles, potentially influencing risk scores or categorizations based on customer longevity."
        },
        {
          "name": "credit_score",
          "type": "INTEGER",
          "description": "The `credit_score` column stores an integer representing the customer's credit score. This score is used within the `mart_customer_risk_profile` model to assess a customer's financial risk profile, potentially influencing their risk category and other calculated metrics. This value likely comes from an external credit bureau and is a key indicator of creditworthiness.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `credit_score` column stores an integer representing the customer's credit score. This score is used within the `mart_customer_risk_profile` model to assess a customer's financial risk profile, potentially influencing their risk category and other calculated metrics. This value likely comes from an external credit bureau and is a key indicator of creditworthiness."
        },
        {
          "name": "credit_rating",
          "type": "VARCHAR",
          "description": "The `credit_rating` column in the `mart_customer_risk_profile` table stores a customer's credit rating, likely derived from an external credit bureau or internal scoring system. This rating is a key input for assessing a customer's overall risk profile, providing insight into their financial stability and ability to meet obligations.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `credit_rating` column in the `mart_customer_risk_profile` table stores a customer's credit rating, likely derived from an external credit bureau or internal scoring system. This rating is a key input for assessing a customer's overall risk profile, providing insight into their financial stability and ability to meet obligations."
        },
        {
          "name": "claim_frequency",
          "type": "VARCHAR",
          "description": "`claim_frequency` stores a customer's claim frequency, likely represented as a string value. This column is crucial for assessing customer risk, as it indicates how often a customer files claims. The value likely represents a calculated metric derived from claims data, possibly categorized (e.g., \"Low\", \"Medium\", \"High\") or a numerical representation of claims per time period.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`claim_frequency` stores a customer's claim frequency, likely represented as a string value. This column is crucial for assessing customer risk, as it indicates how often a customer files claims. The value likely represents a calculated metric derived from claims data, possibly categorized (e.g., \"Low\", \"Medium\", \"High\") or a numerical representation of claims per time period."
        },
        {
          "name": "risk_score",
          "type": "DOUBLE",
          "description": "The `risk_score` column stores a numerical value representing the customer's overall risk profile. This score is a key component of the customer risk assessment, likely used in conjunction with other factors to determine a customer's risk category and inform business decisions. The `risk_score` is likely adjusted based on claims data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `risk_score` column stores a numerical value representing the customer's overall risk profile. This score is a key component of the customer risk assessment, likely used in conjunction with other factors to determine a customer's risk category and inform business decisions. The `risk_score` is likely adjusted based on claims data."
        },
        {
          "name": "age_adjusted_risk_score",
          "type": "DOUBLE",
          "description": "This column, `age_adjusted_risk_score`, stores a customer's risk score adjusted for their age. This score is a core component of the customer risk profile, providing a baseline risk assessment. The score is likely used in further calculations, such as adjusting for claims frequency.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `age_adjusted_risk_score`, stores a customer's risk score adjusted for their age. This score is a core component of the customer risk profile, providing a baseline risk assessment. The score is likely used in further calculations, such as adjusting for claims frequency."
        },
        {
          "name": "previous_claims_count",
          "type": "INTEGER",
          "description": "`previous_claims_count` stores the total number of claims a customer has filed prior to the current reporting period. This integer value is a key input for the `mart_customer_risk_profile` model, contributing to the overall customer risk assessment and potentially influencing the assigned risk category.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`previous_claims_count` stores the total number of claims a customer has filed prior to the current reporting period. This integer value is a key input for the `mart_customer_risk_profile` model, contributing to the overall customer risk assessment and potentially influencing the assigned risk category."
        },
        {
          "name": "risk_category",
          "type": "VARCHAR",
          "description": "`risk_category` categorizes each customer based on their overall risk profile. This column, a VARCHAR, likely contains labels (e.g., \"Low,\" \"Medium,\" \"High\") derived from a combination of risk scores, claims data, and potentially customer segmentation. This categorization helps to quickly assess and understand a customer's risk level.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`risk_category` categorizes each customer based on their overall risk profile. This column, a VARCHAR, likely contains labels (e.g., \"Low,\" \"Medium,\" \"High\") derived from a combination of risk scores, claims data, and potentially customer segmentation. This categorization helps to quickly assess and understand a customer's risk level."
        },
        {
          "name": "customer_segment",
          "type": "VARCHAR",
          "description": "This column, `customer_segment`, categorizes customers based on their risk profile. It provides a high-level grouping of customers within the `mart_customer_risk_profile` model, likely used for risk analysis and segmentation. The values in this column are derived from the risk assessment and claims data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `customer_segment`, categorizes customers based on their risk profile. It provides a high-level grouping of customers within the `mart_customer_risk_profile` model, likely used for risk analysis and segmentation. The values in this column are derived from the risk assessment and claims data."
        },
        {
          "name": "total_claims",
          "type": "INTEGER",
          "description": "`total_claims` stores the total number of claims associated with a customer. This integer value is crucial for calculating customer risk profiles, as it's used in risk score adjustments and denial rate calculations. The column is populated by aggregating claim data from a separate claims processing project.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`total_claims` stores the total number of claims associated with a customer. This integer value is crucial for calculating customer risk profiles, as it's used in risk score adjustments and denial rate calculations. The column is populated by aggregating claim data from a separate claims processing project."
        },
        {
          "name": "total_claim_amount",
          "type": "INTEGER",
          "description": "This column, `total_claim_amount`, stores the sum of all claim amounts for a given customer.  It's a key metric in the `mart_customer_risk_profile` model, providing a measure of the customer's overall financial exposure related to claims. This value is calculated by summing the `claim_amount` from the claims processing data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `total_claim_amount`, stores the sum of all claim amounts for a given customer.  It's a key metric in the `mart_customer_risk_profile` model, providing a measure of the customer's overall financial exposure related to claims. This value is calculated by summing the `claim_amount` from the claims processing data."
        },
        {
          "name": "total_settlement_amount",
          "type": "INTEGER",
          "description": "`total_settlement_amount` stores the sum of all settlement amounts for a given customer, represented as an integer. This column is crucial for the `mart_customer_risk_profile` model as it quantifies the total financial exposure related to settled claims for each customer, contributing to the overall risk assessment. The value is derived by summing the `settlement_amount_clean` field from the claims data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`total_settlement_amount` stores the sum of all settlement amounts for a given customer, represented as an integer. This column is crucial for the `mart_customer_risk_profile` model as it quantifies the total financial exposure related to settled claims for each customer, contributing to the overall risk assessment. The value is derived by summing the `settlement_amount_clean` field from the claims data."
        },
        {
          "name": "avg_days_to_settle",
          "type": "INTEGER",
          "description": "`avg_days_to_settle` stores the average number of days it took to settle claims for a given customer. This metric, calculated as an average of the `days_to_settle` values, helps assess the efficiency of claim resolution processes and contributes to the overall customer risk profile.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`avg_days_to_settle` stores the average number of days it took to settle claims for a given customer. This metric, calculated as an average of the `days_to_settle` values, helps assess the efficiency of claim resolution processes and contributes to the overall customer risk profile."
        },
        {
          "name": "settled_claims_count",
          "type": "INTEGER",
          "description": "`settled_claims_count` represents the total number of claims for a customer that have been successfully settled. This integer column is used within the `mart_customer_risk_profile` model to contribute to the overall customer risk assessment by providing insight into a customer's claims history. The value is calculated by summing the number of claims with a 'SETTLED' status.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`settled_claims_count` represents the total number of claims for a customer that have been successfully settled. This integer column is used within the `mart_customer_risk_profile` model to contribute to the overall customer risk assessment by providing insight into a customer's claims history. The value is calculated by summing the number of claims with a 'SETTLED' status."
        },
        {
          "name": "denied_claims_count",
          "type": "INTEGER",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "most_recent_claim_date",
          "type": "DATE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "claims_adjusted_risk_score",
          "type": "DOUBLE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "claim_denial_rate",
          "type": "DOUBLE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "risk_source",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "claims_source",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        }
      ],
      "sql": "{{\n    config(\n        materialized='table',\n        tags=['mart', 'customers', 'risk', 'daily']\n    )\n}}\n\nWITH customer_risk_enriched AS (\n    SELECT * FROM {{ ref('int_customer_risk_enriched') }}\n),\n\n-- Reference to claims data from claims processing project\ncustomer_claims AS (\n    {% if execute %}\n        {% if adapter.get_relation(this.database, 'mart', 'mart_claims_analysis') %}\n            SELECT \n                customer_id,\n                COUNT(*) AS total_claims,\n                SUM(claim_amount) AS total_claim_amount,\n                SUM(settlement_amount_clean) AS total_settlement_amount,\n                AVG(days_to_settle) AS avg_days_to_settle,\n                SUM(CASE WHEN claim_status = 'SETTLED' THEN 1 ELSE 0 END) AS settled_claims_count,\n                SUM(CASE WHEN claim_status = 'DENIED' THEN 1 ELSE 0 END) AS denied_claims_count,\n                MAX(claim_date) AS most_recent_claim_date,\n                'claims_processing' AS _dbt_source_project\n            FROM {{ ref('claims_processing', 'mart_claims_analysis') }}\n            GROUP BY customer_id\n        {% else %}\n            SELECT\n                'CU0000' AS customer_id,\n                0 AS total_claims,\n                0 AS total_claim_amount,\n                0 AS total_settlement_amount,\n                0 AS avg_days_to_settle,\n                0 AS settled_claims_count,\n                0 AS denied_claims_count,\n                CAST('2000-01-01' AS DATE) AS most_recent_claim_date,\n                'claims_processing' AS _dbt_source_project\n            WHERE 1=0\n        {% endif %}\n    {% else %}\n        SELECT\n            'CU0000' AS customer_id,\n            0 AS total_claims,\n            0 AS total_claim_amount,\n            0 AS total_settlement_amount,\n            0 AS avg_days_to_settle,\n            0 AS settled_claims_count,\n            0 AS denied_claims_count,\n            CAST('2000-01-01' AS DATE) AS most_recent_claim_date,\n            'claims_processing' AS _dbt_source_project\n        WHERE 1=0\n    {% endif %}\n)\n\nSELECT\n    cr.customer_id,\n    cr.customer_name,\n    cr.email,\n    cr.city,\n    cr.state,\n    cr.age,\n    cr.months_as_customer,\n    cr.credit_score,\n    cr.credit_rating,\n    cr.claim_frequency,\n    cr.risk_score,\n    cr.age_adjusted_risk_score,\n    cr.previous_claims_count,\n    cr.risk_category,\n    cr.customer_segment,\n    -- Claims information from claims processing\n    cc.total_claims,\n    cc.total_claim_amount,\n    cc.total_settlement_amount,\n    cc.avg_days_to_settle,\n    cc.settled_claims_count,\n    cc.denied_claims_count,\n    cc.most_recent_claim_date,\n    -- Risk scoring with claim data\n    CASE\n        WHEN cc.total_claims > 0 THEN\n            cr.age_adjusted_risk_score * (1 + (cc.total_claims / 10))\n        ELSE\n            cr.age_adjusted_risk_score\n    END AS claims_adjusted_risk_score,\n    -- Denial ratio\n    CASE\n        WHEN cc.total_claims > 0 THEN \n            ROUND(cc.denied_claims_count / cc.total_claims * 100, 2)\n        ELSE 0\n    END AS claim_denial_rate,\n    -- Cross project attribution\n    cr._dbt_source_project AS risk_source,\n    cc._dbt_source_project AS claims_source,\n    -- Metadata\n    CURRENT_TIMESTAMP AS dbt_updated_at\nFROM customer_risk_enriched cr\nLEFT JOIN customer_claims cc ON cr.customer_id = cc.customer_id",
      "materialized": "table",
      "schema": "mart",
      "file_path": "models/mart/mart_customer_risk_profile.sql",
      "database": "insurance_data",
      "tags": [
        "mart",
        "customers",
        "risk",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.customer_risk.mart_customer_risk_profile",
        "metadata": {
          "type": "BASE TABLE",
          "schema": "customer_risk_mart",
          "name": "mart_customer_risk_profile",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `mart_customer_risk_profile` dbt model within the `customer_risk` project generates a customer-level risk profile. It consolidates customer information with risk scores and claims data to provide a comprehensive view of each customer's risk. This model materializes as a table and is tagged for daily updates. Key transformations include enriching customer data with risk assessments and integrating claims data from a separate claims processing project, calculating metrics like total claims, settlement amounts, and claim resolution times, and deriving a customer risk category."
    },
    {
      "id": "c4",
      "name": "int_customer_risk_enriched",
      "project": "customer_risk",
      "description": "The `int_customer_risk_enriched` dbt model enriches customer data with risk assessment information. It joins customer details from `stg_customers` with risk factors from `stg_risk_factors`, creating a consolidated view. This model produces a dataset containing customer attributes alongside risk-related metrics like credit score, risk score, and claim frequency. Key transformations include an age-adjusted risk score and customer segmentation based on tenure and risk category, serving as an intermediate layer for downstream analysis and reporting on customer risk profiles.",
      "columns": [
        {
          "name": "customer_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for a customer, sourced from the `stg_customers` table.  It serves as the primary key for identifying and joining customer records with their associated risk information within the `int_customer_risk_enriched` model. This `customer_id` is crucial for linking customer attributes with risk metrics like credit scores and risk scores.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for a customer, sourced from the `stg_customers` table.  It serves as the primary key for identifying and joining customer records with their associated risk information within the `int_customer_risk_enriched` model. This `customer_id` is crucial for linking customer attributes with risk metrics like credit scores and risk scores."
        },
        {
          "name": "customer_name",
          "type": "VARCHAR",
          "description": "This column stores the customer's full name as a string.  It's included to identify and provide context for each customer within the enriched risk assessment data. This allows for easy identification of customers alongside their risk profiles.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's full name as a string.  It's included to identify and provide context for each customer within the enriched risk assessment data. This allows for easy identification of customers alongside their risk profiles."
        },
        {
          "name": "email",
          "type": "VARCHAR",
          "description": "This column stores the customer's email address, sourced from the `stg_customers` table.  It's included to facilitate customer identification and communication within the enriched customer risk profile.  The `email` column is a direct pass-through from the source data, without any transformations in this model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's email address, sourced from the `stg_customers` table.  It's included to facilitate customer identification and communication within the enriched customer risk profile.  The `email` column is a direct pass-through from the source data, without any transformations in this model."
        },
        {
          "name": "phone",
          "type": "VARCHAR",
          "description": "The `phone` column stores the customer's phone number as a string. This column is included to provide customer contact information within the enriched customer risk profile. It is sourced directly from the `stg_customers` table.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `phone` column stores the customer's phone number as a string. This column is included to provide customer contact information within the enriched customer risk profile. It is sourced directly from the `stg_customers` table."
        },
        {
          "name": "address",
          "type": "VARCHAR",
          "description": "The `address` column stores the customer's street address as a string. This column, sourced from the `stg_customers` table, provides essential customer location information within the enriched customer risk profile. It's a key attribute for understanding customer demographics and potential geographic risk factors.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `address` column stores the customer's street address as a string. This column, sourced from the `stg_customers` table, provides essential customer location information within the enriched customer risk profile. It's a key attribute for understanding customer demographics and potential geographic risk factors."
        },
        {
          "name": "city",
          "type": "VARCHAR",
          "description": "This column stores the customer's city of residence, sourced from the `stg_customers` table.  It provides location information essential for customer profiling and segmentation within the `int_customer_risk_enriched` model. This data is used alongside other customer attributes and risk factors for comprehensive risk analysis.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's city of residence, sourced from the `stg_customers` table.  It provides location information essential for customer profiling and segmentation within the `int_customer_risk_enriched` model. This data is used alongside other customer attributes and risk factors for comprehensive risk analysis."
        },
        {
          "name": "state",
          "type": "VARCHAR",
          "description": "The `state` column stores the customer's state of residence, represented as a VARCHAR string. This information is sourced from the `stg_customers` table and is used to provide customer location details within the enriched risk profile. This column is crucial for geographical analysis and segmentation of customer risk.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `state` column stores the customer's state of residence, represented as a VARCHAR string. This information is sourced from the `stg_customers` table and is used to provide customer location details within the enriched risk profile. This column is crucial for geographical analysis and segmentation of customer risk."
        },
        {
          "name": "zip_code",
          "type": "INTEGER",
          "description": "This column stores the customer's zip code as an integer. It's used to identify the customer's geographic location within the `int_customer_risk_enriched` model, which combines customer details with risk assessment data. This information can be used for geographic analysis and potentially for risk stratification based on location.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's zip code as an integer. It's used to identify the customer's geographic location within the `int_customer_risk_enriched` model, which combines customer details with risk assessment data. This information can be used for geographic analysis and potentially for risk stratification based on location."
        },
        {
          "name": "date_of_birth",
          "type": "DATE",
          "description": "This column stores the customer's date of birth. It's used to calculate the customer's age, which is then used in the `age_adjusted_risk_score` calculation within the model. This age-adjusted score helps refine the risk assessment based on the customer's age group.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's date of birth. It's used to calculate the customer's age, which is then used in the `age_adjusted_risk_score` calculation within the model. This age-adjusted score helps refine the risk assessment based on the customer's age group."
        },
        {
          "name": "gender",
          "type": "VARCHAR",
          "description": "This column stores the customer's gender as a string value.  It's a customer attribute directly sourced from the `stg_customers` table and included in this enriched risk model for customer profiling.  The gender information is used alongside other customer details to provide a comprehensive view of each customer.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's gender as a string value.  It's a customer attribute directly sourced from the `stg_customers` table and included in this enriched risk model for customer profiling.  The gender information is used alongside other customer details to provide a comprehensive view of each customer."
        },
        {
          "name": "joining_date",
          "type": "DATE",
          "description": "`joining_date`: This column stores the date when the customer joined the company. It's used to calculate customer tenure (`months_as_customer`) and is a key attribute for understanding customer behavior and segmentation within the risk analysis.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`joining_date`: This column stores the date when the customer joined the company. It's used to calculate customer tenure (`months_as_customer`) and is a key attribute for understanding customer behavior and segmentation within the risk analysis."
        },
        {
          "name": "age",
          "type": "BIGINT",
          "description": "The `age` column in the `int_customer_risk_enriched` table stores the customer's age as a BIGINT. This column is used in the model to calculate the `age_adjusted_risk_score`, where risk scores are adjusted based on age brackets (under 25 or over 70). This age information is crucial for understanding and segmenting customer risk profiles.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `age` column in the `int_customer_risk_enriched` table stores the customer's age as a BIGINT. This column is used in the model to calculate the `age_adjusted_risk_score`, where risk scores are adjusted based on age brackets (under 25 or over 70). This age information is crucial for understanding and segmenting customer risk profiles."
        },
        {
          "name": "months_as_customer",
          "type": "BIGINT",
          "description": "This column, `months_as_customer`, stores the number of months a customer has been associated with the business, represented as a whole number. It's a key attribute used for customer segmentation within the `int_customer_risk_enriched` model, influencing the assignment of customers to segments like \"PREMIUM,\" \"PREFERRED,\" \"STANDARD,\" and \"NEW.\" This tenure information is combined with risk category to determine customer tiers.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `months_as_customer`, stores the number of months a customer has been associated with the business, represented as a whole number. It's a key attribute used for customer segmentation within the `int_customer_risk_enriched` model, influencing the assignment of customers to segments like \"PREMIUM,\" \"PREFERRED,\" \"STANDARD,\" and \"NEW.\" This tenure information is combined with risk category to determine customer tiers."
        },
        {
          "name": "risk_id",
          "type": "VARCHAR",
          "description": "`risk_id`: This column stores a unique identifier for the risk assessment associated with a customer. It's used to link customer data with specific risk evaluations within the `int_customer_risk_enriched` model, enabling analysis of risk factors alongside customer attributes. This ID likely originates from the `stg_risk_factors` table.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "`risk_id`: This column stores a unique identifier for the risk assessment associated with a customer. It's used to link customer data with specific risk evaluations within the `int_customer_risk_enriched` model, enabling analysis of risk factors alongside customer attributes. This ID likely originates from the `stg_risk_factors` table."
        },
        {
          "name": "assessment_date",
          "type": "DATE",
          "description": "`assessment_date` stores the date when the customer's risk assessment was performed. This date is crucial for understanding the recency of the risk evaluation and tracking changes in customer risk profiles over time within the `int_customer_risk_enriched` model. It allows for analysis of risk trends and the impact of time on risk factors.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`assessment_date` stores the date when the customer's risk assessment was performed. This date is crucial for understanding the recency of the risk evaluation and tracking changes in customer risk profiles over time within the `int_customer_risk_enriched` model. It allows for analysis of risk trends and the impact of time on risk factors."
        },
        {
          "name": "credit_score",
          "type": "INTEGER",
          "description": "`credit_score` stores an integer representing a customer's creditworthiness, sourced from the `stg_risk_factors` table. This score is a key risk indicator used in the `int_customer_risk_enriched` model to assess a customer's overall risk profile, informing segmentation and downstream analysis.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`credit_score` stores an integer representing a customer's creditworthiness, sourced from the `stg_risk_factors` table. This score is a key risk indicator used in the `int_customer_risk_enriched` model to assess a customer's overall risk profile, informing segmentation and downstream analysis."
        },
        {
          "name": "credit_rating",
          "type": "VARCHAR",
          "description": "The `credit_rating` column stores the customer's credit rating, likely obtained from an external credit bureau. This rating provides a standardized assessment of the customer's creditworthiness, which is crucial for understanding their risk profile within the `int_customer_risk_enriched` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `credit_rating` column stores the customer's credit rating, likely obtained from an external credit bureau. This rating provides a standardized assessment of the customer's creditworthiness, which is crucial for understanding their risk profile within the `int_customer_risk_enriched` model."
        },
        {
          "name": "claim_frequency",
          "type": "VARCHAR",
          "description": "`claim_frequency` stores the frequency of claims made by a customer, likely represented as a string value. This column is a risk-related metric used to assess a customer's risk profile within the `int_customer_risk_enriched` model. It helps in understanding the customer's propensity to file claims, which is crucial for risk assessment and segmentation.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`claim_frequency` stores the frequency of claims made by a customer, likely represented as a string value. This column is a risk-related metric used to assess a customer's risk profile within the `int_customer_risk_enriched` model. It helps in understanding the customer's propensity to file claims, which is crucial for risk assessment and segmentation."
        },
        {
          "name": "risk_score",
          "type": "DOUBLE",
          "description": "The `risk_score` column in the `int_customer_risk_enriched` table stores a numerical value representing the customer's inherent risk level, likely derived from `stg_risk_factors`. This score is a key metric for assessing customer risk profiles, used in conjunction with other factors to understand overall customer risk.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `risk_score` column in the `int_customer_risk_enriched` table stores a numerical value representing the customer's inherent risk level, likely derived from `stg_risk_factors`. This score is a key metric for assessing customer risk profiles, used in conjunction with other factors to understand overall customer risk."
        },
        {
          "name": "previous_claims_count",
          "type": "INTEGER",
          "description": "`previous_claims_count` stores the number of claims a customer has filed prior to the current assessment. This integer value is a key component of the customer's risk profile, contributing to the overall risk score and potentially influencing customer segmentation within the `int_customer_risk_enriched` model. This data helps assess a customer's claim frequency.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`previous_claims_count` stores the number of claims a customer has filed prior to the current assessment. This integer value is a key component of the customer's risk profile, contributing to the overall risk score and potentially influencing customer segmentation within the `int_customer_risk_enriched` model. This data helps assess a customer's claim frequency."
        },
        {
          "name": "risk_category",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "days_since_last_assessment",
          "type": "BIGINT",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "age_adjusted_risk_score",
          "type": "DOUBLE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "customer_segment",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "_dbt_source_project",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        }
      ],
      "sql": "{{\n    config(\n        materialized='view',\n        tags=['intermediate', 'customers', 'risk', 'daily']\n    )\n}}\n\nWITH customers AS (\n    SELECT * FROM {{ ref('stg_customers') }}\n),\n\nrisk_factors AS (\n    SELECT * FROM {{ ref('stg_risk_factors') }}\n)\n\nSELECT\n    c.customer_id,\n    c.customer_name,\n    c.email,\n    c.phone,\n    c.address,\n    c.city,\n    c.state,\n    c.zip_code,\n    c.date_of_birth,\n    c.gender,\n    c.joining_date,\n    c.age,\n    c.months_as_customer,\n    -- Risk information\n    r.risk_id,\n    r.assessment_date,\n    r.credit_score,\n    r.credit_rating,\n    r.claim_frequency,\n    r.risk_score,\n    r.previous_claims_count,\n    r.risk_category,\n    r.days_since_last_assessment,\n    -- Risk factor adjustments\n    CASE\n        WHEN c.age < 25 OR c.age > 70 THEN r.risk_score * 1.2\n        ELSE r.risk_score\n    END AS age_adjusted_risk_score,\n    -- Customer segments\n    CASE\n        WHEN c.months_as_customer >= 36 AND r.risk_category = 'LOW_RISK' THEN 'PREMIUM'\n        WHEN c.months_as_customer >= 24 AND r.risk_category IN ('LOW_RISK', 'MEDIUM_RISK') THEN 'PREFERRED'\n        WHEN c.months_as_customer >= 12 THEN 'STANDARD'\n        ELSE 'NEW'\n    END AS customer_segment,\n    -- Metadata fields\n    CURRENT_TIMESTAMP AS dbt_updated_at,\n    c._dbt_source_project\nFROM customers c\nLEFT JOIN risk_factors r ON c.customer_id = r.customer_id",
      "materialized": "view",
      "schema": "intermediate",
      "file_path": "models/intermediate/int_customer_risk_enriched.sql",
      "database": "insurance_data",
      "tags": [
        "intermediate",
        "customers",
        "risk",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.customer_risk.int_customer_risk_enriched",
        "metadata": {
          "type": "VIEW",
          "schema": "customer_risk_intermediate",
          "name": "int_customer_risk_enriched",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `int_customer_risk_enriched` dbt model enriches customer data with risk assessment information. It joins customer details from `stg_customers` with risk factors from `stg_risk_factors`, creating a consolidated view. This model produces a dataset containing customer attributes alongside risk-related metrics like credit score, risk score, and claim frequency. Key transformations include an age-adjusted risk score and customer segmentation based on tenure and risk category, serving as an intermediate layer for downstream analysis and reporting on customer risk profiles."
    },
    {
      "id": "p1",
      "name": "stg_policies",
      "project": "policy_management",
      "description": "The `stg_policies` dbt model in the `policy_management` project serves as a staging layer for policy data. It transforms the raw `policies` data, casting date fields and adding derived columns. This model produces a clean, standardized view of policy information, including calculated fields like `policy_term_days`, `effective_status`, and `coverage_premium_ratio`.  It plays a crucial role in the data pipeline by preparing the raw data for downstream analysis and reporting, making it easier to understand and use.",
      "columns": [
        {
          "name": "policy_id",
          "type": "VARCHAR",
          "description": "`policy_id` stores a unique identifier for each insurance policy, represented as a string. This column is crucial for identifying and linking policy records within the `stg_policies` staging model. It's used to maintain the integrity of policy data as it moves through the data pipeline.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "`policy_id` stores a unique identifier for each insurance policy, represented as a string. This column is crucial for identifying and linking policy records within the `stg_policies` staging model. It's used to maintain the integrity of policy data as it moves through the data pipeline."
        },
        {
          "name": "customer_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for the customer associated with a policy. In the `stg_policies` model, `customer_id` links each policy record to a specific customer, enabling analysis of customer-level policy trends. This VARCHAR field allows for flexibility in customer ID formats.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for the customer associated with a policy. In the `stg_policies` model, `customer_id` links each policy record to a specific customer, enabling analysis of customer-level policy trends. This VARCHAR field allows for flexibility in customer ID formats."
        },
        {
          "name": "policy_type",
          "type": "VARCHAR",
          "description": "The `policy_type` column in the `stg_policies` table stores a text value representing the type of insurance policy (e.g., \"Auto\", \"Homeowners\", \"Life\"). This column categorizes policies, enabling filtering and aggregation by policy type for analysis. It's a key attribute for understanding the distribution and performance of different insurance products.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `policy_type` column in the `stg_policies` table stores a text value representing the type of insurance policy (e.g., \"Auto\", \"Homeowners\", \"Life\"). This column categorizes policies, enabling filtering and aggregation by policy type for analysis. It's a key attribute for understanding the distribution and performance of different insurance products."
        },
        {
          "name": "start_date",
          "type": "DATE",
          "description": "The `start_date` column in the `stg_policies` table stores the policy's effective start date. This date field, cast from the raw data, is crucial for calculating the `policy_term_days` and determining the `effective_status` of a policy, providing a foundation for understanding policy lifecycles. This column is essential for time-based analysis and reporting on policy performance.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `start_date` column in the `stg_policies` table stores the policy's effective start date. This date field, cast from the raw data, is crucial for calculating the `policy_term_days` and determining the `effective_status` of a policy, providing a foundation for understanding policy lifecycles. This column is essential for time-based analysis and reporting on policy performance."
        },
        {
          "name": "end_date",
          "type": "DATE",
          "description": "The `end_date` column stores the end date of the policy's coverage period. This DATE field, derived from the raw `policies` data, is crucial for calculating the `policy_term_days` and determining the `effective_status` of a policy, indicating whether it's expired, active, or in the future.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `end_date` column stores the end date of the policy's coverage period. This DATE field, derived from the raw `policies` data, is crucial for calculating the `policy_term_days` and determining the `effective_status` of a policy, indicating whether it's expired, active, or in the future."
        },
        {
          "name": "premium_amount",
          "type": "DOUBLE",
          "description": "The `premium_amount` column in the `stg_policies` table stores the policy's premium amount as a double-precision floating-point number. This column represents the monetary value paid for the policy coverage and is used in calculations such as the `coverage_premium_ratio`. This value is sourced directly from the raw `policies` data and is a key component for understanding the cost of insurance.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `premium_amount` column in the `stg_policies` table stores the policy's premium amount as a double-precision floating-point number. This column represents the monetary value paid for the policy coverage and is used in calculations such as the `coverage_premium_ratio`. This value is sourced directly from the raw `policies` data and is a key component for understanding the cost of insurance."
        },
        {
          "name": "coverage_amount",
          "type": "INTEGER",
          "description": "The `coverage_amount` column in the `stg_policies` table stores the integer value representing the coverage amount for an insurance policy. This column, along with `premium_amount`, is used to calculate the `coverage_premium_ratio`, providing insight into the relationship between coverage and premium costs. This data is sourced from the raw `policies` data and is crucial for understanding the financial aspects of each policy.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `coverage_amount` column in the `stg_policies` table stores the integer value representing the coverage amount for an insurance policy. This column, along with `premium_amount`, is used to calculate the `coverage_premium_ratio`, providing insight into the relationship between coverage and premium costs. This data is sourced from the raw `policies` data and is crucial for understanding the financial aspects of each policy."
        },
        {
          "name": "status",
          "type": "VARCHAR",
          "description": "The `status` column in the `stg_policies` table stores the current status of a policy, as originally provided in the raw data. This column is used in the `effective_status` calculation, which determines the policy's current state (e.g., EXPIRED, ACTIVE, FUTURE) based on the policy's start and end dates relative to the current date.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `status` column in the `stg_policies` table stores the current status of a policy, as originally provided in the raw data. This column is used in the `effective_status` calculation, which determines the policy's current state (e.g., EXPIRED, ACTIVE, FUTURE) based on the policy's start and end dates relative to the current date."
        },
        {
          "name": "agent_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for the agent associated with the policy.  The `agent_id` is sourced directly from the raw `policies` data and is used to link each policy to the responsible agent within the policy management system. This allows for analysis of agent performance and policy assignment.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for the agent associated with the policy.  The `agent_id` is sourced directly from the raw `policies` data and is used to link each policy to the responsible agent within the policy management system. This allows for analysis of agent performance and policy assignment."
        },
        {
          "name": "policy_number",
          "type": "VARCHAR",
          "description": "This column, `policy_number`, stores the unique identifier assigned to each insurance policy as a string.  Within the `stg_policies` model, this column is a key attribute used to identify and link policy records.  It's essential for joining this staged data with other tables and for tracking individual policy details throughout the data pipeline.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `policy_number`, stores the unique identifier assigned to each insurance policy as a string.  Within the `stg_policies` model, this column is a key attribute used to identify and link policy records.  It's essential for joining this staged data with other tables and for tracking individual policy details throughout the data pipeline."
        },
        {
          "name": "policy_term_days",
          "type": "BIGINT",
          "description": "`policy_term_days` stores the duration of the policy in days, calculated as the difference between the `end_date` and `start_date`. This column provides a numerical representation of the policy's term length, facilitating analysis of policy duration trends and comparisons. The data type is BIGINT, indicating the column stores whole numbers.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`policy_term_days` stores the duration of the policy in days, calculated as the difference between the `end_date` and `start_date`. This column provides a numerical representation of the policy's term length, facilitating analysis of policy duration trends and comparisons. The data type is BIGINT, indicating the column stores whole numbers."
        },
        {
          "name": "effective_status",
          "type": "VARCHAR",
          "description": "The `effective_status` column in the `stg_policies` table indicates the current status of a policy based on its start date. It contains values like 'FUTURE' if the policy start date is in the future, and 'UNKNOWN' otherwise. This column helps analysts understand the current state of a policy relative to the present day.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `effective_status` column in the `stg_policies` table indicates the current status of a policy based on its start date. It contains values like 'FUTURE' if the policy start date is in the future, and 'UNKNOWN' otherwise. This column helps analysts understand the current state of a policy relative to the present day."
        },
        {
          "name": "coverage_premium_ratio",
          "type": "DOUBLE",
          "description": "The `coverage_premium_ratio` column in the `stg_policies` table stores the ratio of the policy's coverage amount to its premium amount, calculated as coverage amount divided by premium amount, rounded to two decimal places. This ratio provides a measure of the value offered by the policy, indicating the amount of coverage received per unit of premium paid. This is a key metric for understanding the relationship between risk coverage and cost.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `coverage_premium_ratio` column in the `stg_policies` table stores the ratio of the policy's coverage amount to its premium amount, calculated as coverage amount divided by premium amount, rounded to two decimal places. This ratio provides a measure of the value offered by the policy, indicating the amount of coverage received per unit of premium paid. This is a key metric for understanding the relationship between risk coverage and cost."
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "`dbt_updated_at` stores the timestamp when the `stg_policies` model was last refreshed. This timestamp column, populated using `CURRENT_TIMESTAMP`, provides a record of the model's update time, useful for tracking data freshness and lineage within the `policy_management` project.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`dbt_updated_at` stores the timestamp when the `stg_policies` model was last refreshed. This timestamp column, populated using `CURRENT_TIMESTAMP`, provides a record of the model's update time, useful for tracking data freshness and lineage within the `policy_management` project."
        },
        {
          "name": "_dbt_source_project",
          "type": "VARCHAR",
          "description": "This column, `_dbt_source_project`, stores the name of the source project, which is 'policy_management'. It identifies the origin of the data within the `stg_policies` model, aiding in lineage tracking and understanding the data's source. This is a metadata field used for data governance and debugging.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `_dbt_source_project`, stores the name of the source project, which is 'policy_management'. It identifies the origin of the data within the `stg_policies` model, aiding in lineage tracking and understanding the data's source. This is a metadata field used for data governance and debugging."
        }
      ],
      "sql": "{{\n    config(\n        materialized='view',\n        tags=['staging', 'policies', 'daily']\n    )\n}}\n\nWITH source AS (\n    SELECT * FROM {{ ref('policies') }}\n)\n\nSELECT\n    policy_id,\n    customer_id,\n    policy_type,\n    CAST(start_date AS DATE) AS start_date,\n    CAST(end_date AS DATE) AS end_date,\n    premium_amount,\n    coverage_amount,\n    status,\n    agent_id,\n    policy_number,\n    -- Derived fields\n    DATEDIFF('day', start_date, end_date) AS policy_term_days,\n    CASE\n        WHEN CURRENT_DATE() > end_date THEN 'EXPIRED'\n        WHEN CURRENT_DATE() BETWEEN start_date AND end_date THEN status\n        WHEN CURRENT_DATE() < start_date THEN 'FUTURE'\n        ELSE 'UNKNOWN'\n    END AS effective_status,\n    ROUND(coverage_amount / premium_amount, 2) AS coverage_premium_ratio,\n    -- Metadata fields\n    CURRENT_TIMESTAMP AS dbt_updated_at,\n    'policy_management' AS _dbt_source_project\nFROM source",
      "materialized": "view",
      "schema": "staging",
      "file_path": "models/staging/stg_policies.sql",
      "database": "insurance_data",
      "tags": [
        "staging",
        "policies",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.policy_management.stg_policies",
        "metadata": {
          "type": "VIEW",
          "schema": "policy_management_staging",
          "name": "stg_policies",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `stg_policies` dbt model in the `policy_management` project serves as a staging layer for policy data. It transforms the raw `policies` data, casting date fields and adding derived columns. This model produces a clean, standardized view of policy information, including calculated fields like `policy_term_days`, `effective_status`, and `coverage_premium_ratio`.  It plays a crucial role in the data pipeline by preparing the raw data for downstream analysis and reporting, making it easier to understand and use."
    },
    {
      "id": "p2",
      "name": "stg_agents",
      "project": "policy_management",
      "description": "The `stg_agents` dbt model in the `policy_management` project stages agent information from the `agents` source. It selects and transforms agent data, including `agent_id`, `agent_name`, and other relevant details. This model enriches the raw agent data by deriving an `experience_level` based on `years_experience` and adds metadata like `dbt_updated_at` and `_dbt_source_project`. As a staging model, it prepares the agent data for further transformations and analysis within the data pipeline.",
      "columns": [
        {
          "name": "agent_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for each agent, sourced from the `agents` table.  The `agent_id` is used to identify and link agent records within the `stg_agents` staging model, facilitating data transformation and preparation for downstream analysis.  It is a VARCHAR data type.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for each agent, sourced from the `agents` table.  The `agent_id` is used to identify and link agent records within the `stg_agents` staging model, facilitating data transformation and preparation for downstream analysis.  It is a VARCHAR data type."
        },
        {
          "name": "agent_name",
          "type": "VARCHAR",
          "description": "The `agent_name` column stores the full name of an insurance agent. This column is used to identify and categorize agents within the `stg_agents` staging model. It is a direct representation of the agent's name from the source data, used for reporting and linking to other agent-related information.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `agent_name` column stores the full name of an insurance agent. This column is used to identify and categorize agents within the `stg_agents` staging model. It is a direct representation of the agent's name from the source data, used for reporting and linking to other agent-related information."
        },
        {
          "name": "agent_email",
          "type": "VARCHAR",
          "description": "This column stores the agent's email address. It's used to identify and contact agents within the `stg_agents` staging model. The `agent_email` is directly sourced from the `agents` source table and is a key attribute for agent identification.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the agent's email address. It's used to identify and contact agents within the `stg_agents` staging model. The `agent_email` is directly sourced from the `agents` source table and is a key attribute for agent identification."
        },
        {
          "name": "office_location",
          "type": "VARCHAR",
          "description": "The `office_location` column stores the physical location of the agent's office as a text string. This column is sourced directly from the `agents` source table and is included to provide context on where the agent is based. This information is crucial for understanding agent distribution and potentially for regional performance analysis.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `office_location` column stores the physical location of the agent's office as a text string. This column is sourced directly from the `agents` source table and is included to provide context on where the agent is based. This information is crucial for understanding agent distribution and potentially for regional performance analysis."
        },
        {
          "name": "years_experience",
          "type": "INTEGER",
          "description": "This column stores the number of years of experience for each agent.  It's used to determine the agent's `experience_level` within the `stg_agents` model, categorizing agents as JUNIOR, MID, or SENIOR based on their experience. This information helps in understanding agent skill levels and performance.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the number of years of experience for each agent.  It's used to determine the agent's `experience_level` within the `stg_agents` model, categorizing agents as JUNIOR, MID, or SENIOR based on their experience. This information helps in understanding agent skill levels and performance."
        },
        {
          "name": "specialization",
          "type": "VARCHAR",
          "description": "The `specialization` column in the `stg_agents` table stores a text value indicating the agent's area of expertise. This column, sourced directly from the `agents` source, helps categorize agents based on their specific skills or focus within the insurance domain. This information is crucial for understanding agent capabilities and assigning them to appropriate tasks or clients.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `specialization` column in the `stg_agents` table stores a text value indicating the agent's area of expertise. This column, sourced directly from the `agents` source, helps categorize agents based on their specific skills or focus within the insurance domain. This information is crucial for understanding agent capabilities and assigning them to appropriate tasks or clients."
        },
        {
          "name": "active",
          "type": "BOOLEAN",
          "description": "The `active` column indicates whether an agent is currently active, storing a boolean value (TRUE/FALSE). This column directly reflects the agent's status within the system, enabling filtering and analysis of active versus inactive agents. This is a direct representation of the agent's operational status.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `active` column indicates whether an agent is currently active, storing a boolean value (TRUE/FALSE). This column directly reflects the agent's status within the system, enabling filtering and analysis of active versus inactive agents. This is a direct representation of the agent's operational status."
        },
        {
          "name": "experience_level",
          "type": "VARCHAR",
          "description": "This column, `experience_level`, categorizes an agent's experience. It stores the agent's experience level as either 'JUNIOR' or 'MID', derived from the `years_experience` column. This categorization helps in understanding the agent's skill level and is used for further analysis and reporting within the policy management project.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `experience_level`, categorizes an agent's experience. It stores the agent's experience level as either 'JUNIOR' or 'MID', derived from the `years_experience` column. This categorization helps in understanding the agent's skill level and is used for further analysis and reporting within the policy management project."
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "`dbt_updated_at` stores the timestamp indicating when the agent data in this staging model was last updated. This column provides a record of the data's freshness, allowing for tracking of data lineage and identifying the most recent version of the agent information within the `stg_agents` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`dbt_updated_at` stores the timestamp indicating when the agent data in this staging model was last updated. This column provides a record of the data's freshness, allowing for tracking of data lineage and identifying the most recent version of the agent information within the `stg_agents` model."
        },
        {
          "name": "_dbt_source_project",
          "type": "VARCHAR",
          "description": "This column, `_dbt_source_project`, stores the name of the dbt project from which the agent data originated.  It serves as a metadata field, indicating the source of the data within the `policy_management` project. This allows for tracking the origin of the agent data within the data pipeline.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `_dbt_source_project`, stores the name of the dbt project from which the agent data originated.  It serves as a metadata field, indicating the source of the data within the `policy_management` project. This allows for tracking the origin of the agent data within the data pipeline."
        }
      ],
      "sql": "{{\n    config(\n        materialized='view',\n        tags=['staging', 'agents', 'daily']\n    )\n}}\n\nWITH source AS (\n    SELECT * FROM {{ ref('agents') }}\n)\n\nSELECT\n    agent_id,\n    agent_name,\n    agent_email,\n    office_location,\n    years_experience,\n    specialization,\n    active,\n    -- Derived fields\n    CASE \n        WHEN years_experience >= 10 THEN 'SENIOR'\n        WHEN years_experience >= 5 THEN 'MID'\n        ELSE 'JUNIOR'\n    END AS experience_level,\n    -- Metadata fields\n    CURRENT_TIMESTAMP AS dbt_updated_at,\n    'policy_management' AS _dbt_source_project\nFROM source",
      "materialized": "view",
      "schema": "staging",
      "file_path": "models/staging/stg_agents.sql",
      "database": "insurance_data",
      "tags": [
        "staging",
        "agents",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.policy_management.stg_agents",
        "metadata": {
          "type": "VIEW",
          "schema": "policy_management_staging",
          "name": "stg_agents",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `stg_agents` dbt model in the `policy_management` project stages agent information from the `agents` source. It selects and transforms agent data, including `agent_id`, `agent_name`, and other relevant details. This model enriches the raw agent data by deriving an `experience_level` based on `years_experience` and adds metadata like `dbt_updated_at` and `_dbt_source_project`. As a staging model, it prepares the agent data for further transformations and analysis within the data pipeline."
    },
    {
      "id": "p3",
      "name": "int_policies_enriched",
      "project": "policy_management",
      "description": "The `int_policies_enriched` dbt model in the `policy_management` project enriches policy data by joining it with agent information. This intermediate model selects data from the `stg_policies` and `stg_agents` staging models, adding agent details like name, office location, specialization, and experience level. Key transformations include calculating a `specialization_alignment` flag to indicate if an agent's specialization matches the policy type and incorporating metadata fields. This model serves as a crucial step in the data pipeline, providing a consolidated and enriched view of policies for downstream analysis and reporting.",
      "columns": [
        {
          "name": "policy_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for an insurance policy, sourced from the `stg_policies` staging model.  It serves as the primary key for the policy data within the `int_policies_enriched` model, enabling joins with agent information. This ID is crucial for tracking and analyzing individual policies.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for an insurance policy, sourced from the `stg_policies` staging model.  It serves as the primary key for the policy data within the `int_policies_enriched` model, enabling joins with agent information. This ID is crucial for tracking and analyzing individual policies."
        },
        {
          "name": "customer_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for the customer associated with the policy.  It is used to link policies to specific customers within the `int_policies_enriched` model, enabling analysis of customer-level policy information.  The `customer_id` is a VARCHAR, likely representing a string-based identifier.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for the customer associated with the policy.  It is used to link policies to specific customers within the `int_policies_enriched` model, enabling analysis of customer-level policy information.  The `customer_id` is a VARCHAR, likely representing a string-based identifier."
        },
        {
          "name": "policy_type",
          "type": "VARCHAR",
          "description": "The `policy_type` column stores the type of insurance policy, such as \"Home,\" \"Auto,\" or \"Life.\" This column is used to determine if an agent's specialization aligns with the policy type, which is calculated in the `specialization_alignment` field. This information helps assess the suitability of an agent for a given policy.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `policy_type` column stores the type of insurance policy, such as \"Home,\" \"Auto,\" or \"Life.\" This column is used to determine if an agent's specialization aligns with the policy type, which is calculated in the `specialization_alignment` field. This information helps assess the suitability of an agent for a given policy."
        },
        {
          "name": "start_date",
          "type": "DATE",
          "description": "The `start_date` column in the `int_policies_enriched` table stores the date when the insurance policy becomes active. This date is sourced from the `stg_policies` staging model and is essential for understanding the policy's lifecycle and calculating its duration. It's a key attribute for time-based analysis of policy performance.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `start_date` column in the `int_policies_enriched` table stores the date when the insurance policy becomes active. This date is sourced from the `stg_policies` staging model and is essential for understanding the policy's lifecycle and calculating its duration. It's a key attribute for time-based analysis of policy performance."
        },
        {
          "name": "end_date",
          "type": "DATE",
          "description": "This column, `end_date`, stores the date when the policy coverage expires.  It's crucial for determining the policy's active period and is used in conjunction with `start_date` to calculate the policy term. This information is essential for understanding policy lifecycles and calculating metrics related to policy duration.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `end_date`, stores the date when the policy coverage expires.  It's crucial for determining the policy's active period and is used in conjunction with `start_date` to calculate the policy term. This information is essential for understanding policy lifecycles and calculating metrics related to policy duration."
        },
        {
          "name": "premium_amount",
          "type": "DOUBLE",
          "description": "This column, `premium_amount`, stores the monetary value of the insurance premium for each policy.  It represents the amount paid by the customer for the policy coverage. This value is directly sourced from the `stg_policies` staging model and is a key financial metric for policy analysis.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `premium_amount`, stores the monetary value of the insurance premium for each policy.  It represents the amount paid by the customer for the policy coverage. This value is directly sourced from the `stg_policies` staging model and is a key financial metric for policy analysis."
        },
        {
          "name": "coverage_amount",
          "type": "INTEGER",
          "description": "The `coverage_amount` column stores the integer value representing the monetary coverage provided by the policy. This column is crucial for understanding the financial scope of each policy within the `int_policies_enriched` model, enabling analysis of risk exposure and policy value.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `coverage_amount` column stores the integer value representing the monetary coverage provided by the policy. This column is crucial for understanding the financial scope of each policy within the `int_policies_enriched` model, enabling analysis of risk exposure and policy value."
        },
        {
          "name": "status",
          "type": "VARCHAR",
          "description": "The `status` column in the `int_policies_enriched` table stores the current status of the policy, such as \"Active\" or \"Cancelled\". This column is inherited from the `stg_policies` staging model and is essential for filtering and analyzing policies based on their current state. It allows for tracking the lifecycle of a policy.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `status` column in the `int_policies_enriched` table stores the current status of the policy, such as \"Active\" or \"Cancelled\". This column is inherited from the `stg_policies` staging model and is essential for filtering and analyzing policies based on their current state. It allows for tracking the lifecycle of a policy."
        },
        {
          "name": "agent_id",
          "type": "VARCHAR",
          "description": "The `agent_id` column in the `int_policies_enriched` table stores the unique identifier of the agent associated with the policy. This VARCHAR field is used to link policy information with agent details from the `stg_agents` model, enabling analysis of agent performance and policy assignment. This is a foreign key referencing the agent table.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "The `agent_id` column in the `int_policies_enriched` table stores the unique identifier of the agent associated with the policy. This VARCHAR field is used to link policy information with agent details from the `stg_agents` model, enabling analysis of agent performance and policy assignment. This is a foreign key referencing the agent table."
        },
        {
          "name": "policy_number",
          "type": "VARCHAR",
          "description": "The `policy_number` column in the `int_policies_enriched` table stores the unique identifier for an insurance policy, sourced from the `stg_policies` staging model. This VARCHAR field is essential for linking policy data with agent information, enabling analysis of policy performance and agent relationships within the policy management system. It is used as a key field for joining data from different tables.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `policy_number` column in the `int_policies_enriched` table stores the unique identifier for an insurance policy, sourced from the `stg_policies` staging model. This VARCHAR field is essential for linking policy data with agent information, enabling analysis of policy performance and agent relationships within the policy management system. It is used as a key field for joining data from different tables."
        },
        {
          "name": "policy_term_days",
          "type": "BIGINT",
          "description": "`policy_term_days` stores the policy term length in days, represented as a large integer. This column indicates the duration of the policy coverage, crucial for understanding policy lifecycles and calculating metrics like premium allocation over time. It's a key field for analyzing policy performance and renewal patterns within the `int_policies_enriched` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`policy_term_days` stores the policy term length in days, represented as a large integer. This column indicates the duration of the policy coverage, crucial for understanding policy lifecycles and calculating metrics like premium allocation over time. It's a key field for analyzing policy performance and renewal patterns within the `int_policies_enriched` model."
        },
        {
          "name": "effective_status",
          "type": "VARCHAR",
          "description": "The `effective_status` column in the `int_policies_enriched` table stores the current status of a policy, likely indicating its active state. This VARCHAR column provides a key piece of information for understanding the policy's lifecycle, enabling filtering and analysis based on whether a policy is currently in effect.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `effective_status` column in the `int_policies_enriched` table stores the current status of a policy, likely indicating its active state. This VARCHAR column provides a key piece of information for understanding the policy's lifecycle, enabling filtering and analysis based on whether a policy is currently in effect."
        },
        {
          "name": "coverage_premium_ratio",
          "type": "DOUBLE",
          "description": "The `coverage_premium_ratio` column in the `int_policies_enriched` table stores the ratio of coverage to premium for a given policy, calculated from the `stg_policies` staging model. This ratio provides a key metric for understanding the relationship between the coverage provided by a policy and the associated premium cost. This value is likely used for profitability analysis and risk assessment.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `coverage_premium_ratio` column in the `int_policies_enriched` table stores the ratio of coverage to premium for a given policy, calculated from the `stg_policies` staging model. This ratio provides a key metric for understanding the relationship between the coverage provided by a policy and the associated premium cost. This value is likely used for profitability analysis and risk assessment."
        },
        {
          "name": "agent_name",
          "type": "VARCHAR",
          "description": "This column, `agent_name`, stores the full name of the agent associated with the policy.  It's included to provide direct agent identification within the enriched policy data, facilitating analysis of agent performance and policy assignment. This allows for linking policies to specific agents for reporting and analysis.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `agent_name`, stores the full name of the agent associated with the policy.  It's included to provide direct agent identification within the enriched policy data, facilitating analysis of agent performance and policy assignment. This allows for linking policies to specific agents for reporting and analysis."
        },
        {
          "name": "office_location",
          "type": "VARCHAR",
          "description": "This column, `office_location`, stores the physical location of the agent associated with the policy.  It's pulled from the `stg_agents` staging model and provides context for understanding where the policy was managed. This information is crucial for analyzing policy distribution and agent performance by office.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `office_location`, stores the physical location of the agent associated with the policy.  It's pulled from the `stg_agents` staging model and provides context for understanding where the policy was managed. This information is crucial for analyzing policy distribution and agent performance by office."
        },
        {
          "name": "agent_specialization",
          "type": "VARCHAR",
          "description": "This column, `agent_specialization`, stores the specialization of the agent associated with the policy, such as \"Home,\" \"Auto,\" or \"Commercial.\" It's derived from the `stg_agents` staging model and is used to provide agent-specific details within the enriched policy data. This information is crucial for understanding agent expertise and for calculating the `specialization_alignment` flag.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `agent_specialization`, stores the specialization of the agent associated with the policy, such as \"Home,\" \"Auto,\" or \"Commercial.\" It's derived from the `stg_agents` staging model and is used to provide agent-specific details within the enriched policy data. This information is crucial for understanding agent expertise and for calculating the `specialization_alignment` flag."
        },
        {
          "name": "agent_experience",
          "type": "VARCHAR",
          "description": "This column, `agent_experience`, stores the experience level of the agent associated with the policy, likely as a string value (e.g., \"Junior\", \"Senior\").  It's included to provide context about the agent handling the policy, potentially aiding in analysis of policy performance based on agent expertise. This information is sourced from the `stg_agents` staging model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `agent_experience`, stores the experience level of the agent associated with the policy, likely as a string value (e.g., \"Junior\", \"Senior\").  It's included to provide context about the agent handling the policy, potentially aiding in analysis of policy performance based on agent expertise. This information is sourced from the `stg_agents` staging model."
        },
        {
          "name": "specialization_alignment",
          "type": "VARCHAR",
          "description": "This column indicates whether an agent's specialization aligns with the policy type, storing either 'ALIGNED' or 'MISALIGNED'. It's calculated by comparing the agent's specialization to the policy type. This alignment flag helps identify potential mismatches and provides insights into agent expertise relative to the policies they manage.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column indicates whether an agent's specialization aligns with the policy type, storing either 'ALIGNED' or 'MISALIGNED'. It's calculated by comparing the agent's specialization to the policy type. This alignment flag helps identify potential mismatches and provides insights into agent expertise relative to the policies they manage."
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "This column, `dbt_updated_at`, stores the timestamp indicating when the policy data was last updated in the source system. It's included in the `int_policies_enriched` model to track the freshness of the policy information, allowing for monitoring and auditing of data changes. This timestamp is inherited from the `stg_policies` staging model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `dbt_updated_at`, stores the timestamp indicating when the policy data was last updated in the source system. It's included in the `int_policies_enriched` model to track the freshness of the policy information, allowing for monitoring and auditing of data changes. This timestamp is inherited from the `stg_policies` staging model."
        },
        {
          "name": "_dbt_source_project",
          "type": "VARCHAR",
          "description": "This column, `_dbt_source_project`, stores the name of the dbt project from which the policy data originated. It's a metadata field used for tracking the source of the data within the `int_policies_enriched` model, aiding in data lineage and debugging. This helps identify the specific dbt project responsible for the data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `_dbt_source_project`, stores the name of the dbt project from which the policy data originated. It's a metadata field used for tracking the source of the data within the `int_policies_enriched` model, aiding in data lineage and debugging. This helps identify the specific dbt project responsible for the data."
        }
      ],
      "sql": "{{\n    config(\n        materialized='view',\n        tags=['intermediate', 'policies', 'daily']\n    )\n}}\n\nWITH policies AS (\n    SELECT * FROM {{ ref('stg_policies') }}\n),\n\nagents AS (\n    SELECT * FROM {{ ref('stg_agents') }}\n)\n\nSELECT\n    p.policy_id,\n    p.customer_id,\n    p.policy_type,\n    p.start_date,\n    p.end_date,\n    p.premium_amount,\n    p.coverage_amount,\n    p.status,\n    p.agent_id,\n    p.policy_number,\n    p.policy_term_days,\n    p.effective_status,\n    p.coverage_premium_ratio,\n    -- Agent information\n    a.agent_name,\n    a.office_location,\n    a.specialization AS agent_specialization,\n    a.experience_level AS agent_experience,\n    -- Policy-agent alignment\n    CASE\n        WHEN a.specialization = p.policy_type THEN 'ALIGNED'\n        ELSE 'MISALIGNED'\n    END AS specialization_alignment,\n    -- Metadata fields\n    p.dbt_updated_at,\n    p._dbt_source_project\nFROM policies p\nLEFT JOIN agents a ON p.agent_id = a.agent_id",
      "materialized": "view",
      "schema": "intermediate",
      "file_path": "models/intermediate/int_policies_enriched.sql",
      "database": "insurance_data",
      "tags": [
        "intermediate",
        "policies",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.policy_management.int_policies_enriched",
        "metadata": {
          "type": "VIEW",
          "schema": "policy_management_intermediate",
          "name": "int_policies_enriched",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `int_policies_enriched` dbt model in the `policy_management` project enriches policy data by joining it with agent information. This intermediate model selects data from the `stg_policies` and `stg_agents` staging models, adding agent details like name, office location, specialization, and experience level. Key transformations include calculating a `specialization_alignment` flag to indicate if an agent's specialization matches the policy type and incorporating metadata fields. This model serves as a crucial step in the data pipeline, providing a consolidated and enriched view of policies for downstream analysis and reporting."
    },
    {
      "id": "p4",
      "name": "mart_policy_details",
      "project": "policy_management",
      "description": "The `mart_policy_details` dbt model within the `policy_management` project serves as a central, aggregated view of policy information. It materializes as a table and is tagged for marts, policies, and daily refreshes. This model joins enriched policy data (`int_policies_enriched`) with customer risk profiles from a separate project (`customer_risk`). Key transformations include calculating `coverage_premium_ratio` and potentially incorporating customer risk attributes like `credit_score` and `risk_score` to enrich the policy details. The model provides a comprehensive, daily-updated dataset for policy analysis and reporting.",
      "columns": [
        {
          "name": "policy_id",
          "type": "VARCHAR",
          "description": "The `policy_id` column stores a unique identifier for each insurance policy. This VARCHAR field is crucial for joining policy details with other related data, enabling comprehensive policy analysis and reporting within the `mart_policy_details` model. It serves as the primary key for identifying individual policies.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "The `policy_id` column stores a unique identifier for each insurance policy. This VARCHAR field is crucial for joining policy details with other related data, enabling comprehensive policy analysis and reporting within the `mart_policy_details` model. It serves as the primary key for identifying individual policies."
        },
        {
          "name": "customer_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for the customer associated with the policy.  It's crucial for joining policy details with customer risk profiles and other customer-related information.  The `customer_id` is a VARCHAR, allowing for a flexible identifier format.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for the customer associated with the policy.  It's crucial for joining policy details with customer risk profiles and other customer-related information.  The `customer_id` is a VARCHAR, allowing for a flexible identifier format."
        },
        {
          "name": "policy_type",
          "type": "VARCHAR",
          "description": "This column, `policy_type`, stores the type of insurance policy. It categorizes policies within the `mart_policy_details` model, enabling analysis and reporting based on policy categories. This is a key attribute for segmenting and understanding policy performance.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `policy_type`, stores the type of insurance policy. It categorizes policies within the `mart_policy_details` model, enabling analysis and reporting based on policy categories. This is a key attribute for segmenting and understanding policy performance."
        },
        {
          "name": "start_date",
          "type": "DATE",
          "description": "The `start_date` column in the `mart_policy_details` table stores the date when the policy coverage begins. This date is crucial for understanding the policy's lifecycle and is used in conjunction with the `end_date` to determine the policy's duration and potentially calculate metrics like the coverage period. This column is sourced from the enriched policy data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `start_date` column in the `mart_policy_details` table stores the date when the policy coverage begins. This date is crucial for understanding the policy's lifecycle and is used in conjunction with the `end_date` to determine the policy's duration and potentially calculate metrics like the coverage period. This column is sourced from the enriched policy data."
        },
        {
          "name": "end_date",
          "type": "DATE",
          "description": "The `end_date` column stores the final date of the policy's coverage period. This date is crucial for determining the active duration of a policy and is used for time-based analysis and reporting within the `mart_policy_details` model. It helps identify when a policy expires or terminates.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `end_date` column stores the final date of the policy's coverage period. This date is crucial for determining the active duration of a policy and is used for time-based analysis and reporting within the `mart_policy_details` model. It helps identify when a policy expires or terminates."
        },
        {
          "name": "premium_amount",
          "type": "DOUBLE",
          "description": "This column, `premium_amount`, stores the base premium amount for a policy, represented as a double-precision floating-point number. It represents the initial premium before any risk adjustments are applied. This value is a key component for calculating risk-adjusted premiums and analyzing policy profitability within the `mart_policy_details` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `premium_amount`, stores the base premium amount for a policy, represented as a double-precision floating-point number. It represents the initial premium before any risk adjustments are applied. This value is a key component for calculating risk-adjusted premiums and analyzing policy profitability within the `mart_policy_details` model."
        },
        {
          "name": "coverage_amount",
          "type": "INTEGER",
          "description": "`coverage_amount`: This integer column stores the monetary value of the insurance coverage provided by the policy. It represents the maximum financial protection offered by the policy, crucial for understanding the policy's scope and potential liability.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`coverage_amount`: This integer column stores the monetary value of the insurance coverage provided by the policy. It represents the maximum financial protection offered by the policy, crucial for understanding the policy's scope and potential liability."
        },
        {
          "name": "status",
          "type": "VARCHAR",
          "description": "The `status` column in the `mart_policy_details` table stores the current state of a policy, likely reflecting its active, cancelled, or pending status. This VARCHAR column is crucial for filtering and analyzing policies based on their operational state, enabling insights into policy lifecycle and performance.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `status` column in the `mart_policy_details` table stores the current state of a policy, likely reflecting its active, cancelled, or pending status. This VARCHAR column is crucial for filtering and analyzing policies based on their operational state, enabling insights into policy lifecycle and performance."
        },
        {
          "name": "agent_id",
          "type": "VARCHAR",
          "description": "This column, `agent_id`, stores a unique identifier for the insurance agent associated with the policy.  Within the `mart_policy_details` model, this ID links each policy to the responsible agent, enabling analysis of agent performance and policy origination.  This is a VARCHAR field, suggesting it's a text-based identifier, likely used for lookups in an agent master table.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column, `agent_id`, stores a unique identifier for the insurance agent associated with the policy.  Within the `mart_policy_details` model, this ID links each policy to the responsible agent, enabling analysis of agent performance and policy origination.  This is a VARCHAR field, suggesting it's a text-based identifier, likely used for lookups in an agent master table."
        },
        {
          "name": "policy_number",
          "type": "VARCHAR",
          "description": "This column, `policy_number`, stores the unique identifier assigned to each insurance policy.  It serves as a key field for joining policy details with other related data, enabling comprehensive policy analysis.  This VARCHAR field allows for alphanumeric policy numbers, crucial for identifying and tracking individual policies within the `mart_policy_details` table.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `policy_number`, stores the unique identifier assigned to each insurance policy.  It serves as a key field for joining policy details with other related data, enabling comprehensive policy analysis.  This VARCHAR field allows for alphanumeric policy numbers, crucial for identifying and tracking individual policies within the `mart_policy_details` table."
        },
        {
          "name": "policy_term_days",
          "type": "BIGINT",
          "description": "`policy_term_days` stores the duration of the policy in days, represented as a BIGINT. This column is crucial for understanding the length of each policy and is likely used in calculations related to premium, coverage, and policy lifecycle analysis within the `mart_policy_details` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`policy_term_days` stores the duration of the policy in days, represented as a BIGINT. This column is crucial for understanding the length of each policy and is likely used in calculations related to premium, coverage, and policy lifecycle analysis within the `mart_policy_details` model."
        },
        {
          "name": "effective_status",
          "type": "VARCHAR",
          "description": "`effective_status`: This column stores the current status of the policy, such as \"Active\", \"Cancelled\", or \"Pending\". It's crucial for understanding the current state of a policy within the `mart_policy_details` model, enabling analysis of policy lifecycle stages. The values are likely derived from the enriched policy data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`effective_status`: This column stores the current status of the policy, such as \"Active\", \"Cancelled\", or \"Pending\". It's crucial for understanding the current state of a policy within the `mart_policy_details` model, enabling analysis of policy lifecycle stages. The values are likely derived from the enriched policy data."
        },
        {
          "name": "coverage_premium_ratio",
          "type": "DOUBLE",
          "description": "This column, `coverage_premium_ratio`, stores the ratio of coverage to premium for a policy, calculated as a double-precision number. It's a key metric within the `mart_policy_details` model, providing insight into the relationship between the insurance coverage provided and the cost paid by the policyholder, useful for profitability analysis.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `coverage_premium_ratio`, stores the ratio of coverage to premium for a policy, calculated as a double-precision number. It's a key metric within the `mart_policy_details` model, providing insight into the relationship between the insurance coverage provided and the cost paid by the policyholder, useful for profitability analysis."
        },
        {
          "name": "agent_name",
          "type": "VARCHAR",
          "description": "The `agent_name` column stores the name of the agent associated with the policy. This column is crucial for identifying the responsible agent and enabling analysis of agent performance within the `mart_policy_details` model. It is sourced from the enriched policy data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `agent_name` column stores the name of the agent associated with the policy. This column is crucial for identifying the responsible agent and enabling analysis of agent performance within the `mart_policy_details` model. It is sourced from the enriched policy data."
        },
        {
          "name": "office_location",
          "type": "VARCHAR",
          "description": "This column, `office_location`, stores the physical location of the agent associated with the policy.  It's used to provide context for policy analysis, allowing for segmentation and reporting based on the agent's office. This information is directly sourced from the enriched policy data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `office_location`, stores the physical location of the agent associated with the policy.  It's used to provide context for policy analysis, allowing for segmentation and reporting based on the agent's office. This information is directly sourced from the enriched policy data."
        },
        {
          "name": "agent_specialization",
          "type": "VARCHAR",
          "description": "This column, `agent_specialization`, stores the specific area of insurance expertise for the agent associated with the policy, such as \"Home,\" \"Auto,\" or \"Commercial.\"  This information helps identify the agent's focus and can be used to analyze policy performance by agent specialization within the `mart_policy_details` model.  It is sourced from the enriched policy data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `agent_specialization`, stores the specific area of insurance expertise for the agent associated with the policy, such as \"Home,\" \"Auto,\" or \"Commercial.\"  This information helps identify the agent's focus and can be used to analyze policy performance by agent specialization within the `mart_policy_details` model.  It is sourced from the enriched policy data."
        },
        {
          "name": "agent_experience",
          "type": "VARCHAR",
          "description": "`agent_experience` stores the agent's experience level as a text string (e.g., \"Entry Level\", \"Experienced\"). This column provides insight into the agent's expertise, potentially enabling analysis of policy performance based on agent experience. It is likely used to filter or group policies based on the agent's skill level.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`agent_experience` stores the agent's experience level as a text string (e.g., \"Entry Level\", \"Experienced\"). This column provides insight into the agent's expertise, potentially enabling analysis of policy performance based on agent experience. It is likely used to filter or group policies based on the agent's skill level."
        },
        {
          "name": "specialization_alignment",
          "type": "VARCHAR",
          "description": "`specialization_alignment` stores a text value indicating how an agent's specialization aligns with the policy. This column is likely used to categorize or group policies based on the agent's area of expertise, potentially aiding in performance analysis or targeted marketing efforts. The specific values within this column would need to be defined by the business.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`specialization_alignment` stores a text value indicating how an agent's specialization aligns with the policy. This column is likely used to categorize or group policies based on the agent's area of expertise, potentially aiding in performance analysis or targeted marketing efforts. The specific values within this column would need to be defined by the business."
        },
        {
          "name": "customer_name",
          "type": "VARCHAR",
          "description": "The `customer_name` column in the `mart_policy_details` table stores the customer's full name as a string. This column is crucial for linking policy details with individual customer profiles, enabling analysis at the customer level. The value is sourced from the `customer_risk` project.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `customer_name` column in the `mart_policy_details` table stores the customer's full name as a string. This column is crucial for linking policy details with individual customer profiles, enabling analysis at the customer level. The value is sourced from the `customer_risk` project."
        },
        {
          "name": "risk_category",
          "type": "VARCHAR",
          "description": "`risk_category` stores a customer's risk classification, such as 'HIGH_RISK', 'MEDIUM_RISK', or 'LOW_RISK', derived from the `customer_risk` project. This column is used to understand the customer's risk profile and is a key factor in calculating the `risk_adjusted_premium` within the `mart_policy_details` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`risk_category` stores a customer's risk classification, such as 'HIGH_RISK', 'MEDIUM_RISK', or 'LOW_RISK', derived from the `customer_risk` project. This column is used to understand the customer's risk profile and is a key factor in calculating the `risk_adjusted_premium` within the `mart_policy_details` model."
        },
        {
          "name": "risk_score",
          "type": "INTEGER",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "credit_score",
          "type": "INTEGER",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "claim_frequency",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "previous_claims_count",
          "type": "INTEGER",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "risk_adjusted_premium",
          "type": "DOUBLE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "policy_source",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "risk_source",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        }
      ],
      "sql": "{{\n    config(\n        materialized='table',\n        tags=['mart', 'policies', 'daily']\n    )\n}}\n\nWITH policies_enriched AS (\n    SELECT * FROM {{ ref('int_policies_enriched') }}\n),\n\n-- Reference to the customer risk project\ncustomer_risk_profile AS (\n    {% if execute %}\n        {% if adapter.get_relation(this.database, 'mart', 'mart_customer_risk_profile') %}\n            SELECT * FROM {{ ref('customer_risk', 'mart_customer_risk_profile') }}\n        {% else %}\n            SELECT\n                'CU0000' AS customer_id,\n                0 AS credit_score,\n                'UNKNOWN' AS claim_frequency,\n                0 AS risk_score,\n                0 AS previous_claims_count,\n                'UNKNOWN' AS risk_category,\n                'UNKNOWN' AS customer_name,\n                'customer_risk' AS _dbt_source_project\n            WHERE 1=0\n        {% endif %}\n    {% else %}\n        SELECT\n            'CU0000' AS customer_id,\n            0 AS credit_score,\n            'UNKNOWN' AS claim_frequency,\n            0 AS risk_score,\n            0 AS previous_claims_count,\n            'UNKNOWN' AS risk_category,\n            'UNKNOWN' AS customer_name,\n            'customer_risk' AS _dbt_source_project\n        WHERE 1=0\n    {% endif %}\n)\n\nSELECT\n    pe.policy_id,\n    pe.customer_id,\n    pe.policy_type,\n    pe.start_date,\n    pe.end_date,\n    pe.premium_amount,\n    pe.coverage_amount,\n    pe.status,\n    pe.agent_id,\n    pe.policy_number,\n    pe.policy_term_days,\n    pe.effective_status,\n    pe.coverage_premium_ratio,\n    pe.agent_name,\n    pe.office_location,\n    pe.agent_specialization,\n    pe.agent_experience,\n    pe.specialization_alignment,\n    -- Customer risk information\n    cr.customer_name,\n    cr.risk_category,\n    cr.risk_score,\n    cr.credit_score,\n    cr.claim_frequency,\n    cr.previous_claims_count,\n    -- Risk-adjusted premium calculation\n    CASE\n        WHEN cr.risk_category = 'HIGH_RISK' THEN pe.premium_amount * 1.25\n        WHEN cr.risk_category = 'MEDIUM_RISK' THEN pe.premium_amount * 1.1\n        WHEN cr.risk_category = 'LOW_RISK' THEN pe.premium_amount * 0.95\n        ELSE pe.premium_amount\n    END AS risk_adjusted_premium,\n    -- Cross project attribution\n    pe._dbt_source_project AS policy_source,\n    cr._dbt_source_project AS risk_source,\n    -- Metadata\n    CURRENT_TIMESTAMP AS dbt_updated_at\nFROM policies_enriched pe\nLEFT JOIN customer_risk_profile cr ON pe.customer_id = cr.customer_id",
      "materialized": "table",
      "schema": "mart",
      "file_path": "models/mart/mart_policy_details.sql",
      "database": "insurance_data",
      "tags": [
        "mart",
        "policies",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.policy_management.mart_policy_details",
        "metadata": {
          "type": "BASE TABLE",
          "schema": "policy_management_mart",
          "name": "mart_policy_details",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `mart_policy_details` dbt model within the `policy_management` project serves as a central, aggregated view of policy information. It materializes as a table and is tagged for marts, policies, and daily refreshes. This model joins enriched policy data (`int_policies_enriched`) with customer risk profiles from a separate project (`customer_risk`). Key transformations include calculating `coverage_premium_ratio` and potentially incorporating customer risk attributes like `credit_score` and `risk_score` to enrich the policy details. The model provides a comprehensive, daily-updated dataset for policy analysis and reporting."
    },
    {
      "id": "p5",
      "name": "stg_customers",
      "project": "policy_management",
      "description": "The `stg_customers` dbt model in the `policy_management` project serves as a staging layer for customer data. It transforms raw customer data from the `customers` source, casting date fields and deriving new columns. This model produces a view containing standardized customer information, including derived fields like `customer_name`, `age`, and `months_as_customer`, along with metadata.  It plays a crucial role in the data pipeline by cleaning and preparing customer data for downstream analysis and reporting.",
      "columns": [
        {
          "name": "customer_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for each customer, sourced from the `customers` source table.  It's a VARCHAR data type, ensuring flexibility in handling various ID formats.  This `customer_id` is essential for uniquely identifying and linking customer records within the `stg_customers` staging model.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for each customer, sourced from the `customers` source table.  It's a VARCHAR data type, ensuring flexibility in handling various ID formats.  This `customer_id` is essential for uniquely identifying and linking customer records within the `stg_customers` staging model."
        },
        {
          "name": "first_name",
          "type": "VARCHAR",
          "description": "This column stores the customer's first name as a string.  It's a core customer attribute used in the `stg_customers` staging model to build the `customer_name` field.  This field is directly sourced from the raw customer data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's first name as a string.  It's a core customer attribute used in the `stg_customers` staging model to build the `customer_name` field.  This field is directly sourced from the raw customer data."
        },
        {
          "name": "last_name",
          "type": "VARCHAR",
          "description": "This column stores the customer's last name as a string.  Within the `stg_customers` staging model, this column is a direct representation of the last name from the source customer data.  It's used in the `customer_name` derivation, which combines the first and last names for a more user-friendly customer identifier.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's last name as a string.  Within the `stg_customers` staging model, this column is a direct representation of the last name from the source customer data.  It's used in the `customer_name` derivation, which combines the first and last names for a more user-friendly customer identifier."
        },
        {
          "name": "email",
          "type": "VARCHAR",
          "description": "This column stores the customer's email address as a string.  Within the `stg_customers` staging model, this field is directly sourced from the raw customer data and is used to uniquely identify and contact customers.  It is a key piece of customer information for various downstream analyses and reporting.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's email address as a string.  Within the `stg_customers` staging model, this field is directly sourced from the raw customer data and is used to uniquely identify and contact customers.  It is a key piece of customer information for various downstream analyses and reporting."
        },
        {
          "name": "phone",
          "type": "VARCHAR",
          "description": "The `phone` column in the `stg_customers` view stores the customer's phone number as a VARCHAR string. This column is sourced directly from the raw `customers` data and is included to provide customer contact information. No transformations or calculations are performed on this field within this model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `phone` column in the `stg_customers` view stores the customer's phone number as a VARCHAR string. This column is sourced directly from the raw `customers` data and is included to provide customer contact information. No transformations or calculations are performed on this field within this model."
        },
        {
          "name": "address",
          "type": "VARCHAR",
          "description": "The `address` column stores the customer's street address as a string.  This column is sourced directly from the raw customer data and is included in the staging model for standardized customer information.  It provides the physical location associated with each customer.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `address` column stores the customer's street address as a string.  This column is sourced directly from the raw customer data and is included in the staging model for standardized customer information.  It provides the physical location associated with each customer."
        },
        {
          "name": "city",
          "type": "VARCHAR",
          "description": "The `city` column in the `stg_customers` table stores the customer's city of residence as a string. This column is sourced directly from the raw customer data and is used to provide location information for customer segmentation and analysis within the staging layer. It's a key attribute for understanding customer demographics and geographic distribution.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `city` column in the `stg_customers` table stores the customer's city of residence as a string. This column is sourced directly from the raw customer data and is used to provide location information for customer segmentation and analysis within the staging layer. It's a key attribute for understanding customer demographics and geographic distribution."
        },
        {
          "name": "state",
          "type": "VARCHAR",
          "description": "The `state` column in the `stg_customers` staging model stores the customer's state of residence as a string. This column is directly sourced from the raw `customers` data and is used to provide location-based customer information for analysis and reporting.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `state` column in the `stg_customers` staging model stores the customer's state of residence as a string. This column is directly sourced from the raw `customers` data and is used to provide location-based customer information for analysis and reporting."
        },
        {
          "name": "zip_code",
          "type": "INTEGER",
          "description": "This column stores the customer's postal code as an integer.  It represents the customer's geographic location and is used to identify the customer's address within the `stg_customers` staging model.  This information is crucial for location-based analysis and potentially for risk assessment or segmentation.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's postal code as an integer.  It represents the customer's geographic location and is used to identify the customer's address within the `stg_customers` staging model.  This information is crucial for location-based analysis and potentially for risk assessment or segmentation."
        },
        {
          "name": "date_of_birth",
          "type": "DATE",
          "description": "This column stores the customer's date of birth.  It's used to calculate the customer's age within the `stg_customers` model.  The `date_of_birth` is cast as a DATE data type for consistency and accurate age calculations.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's date of birth.  It's used to calculate the customer's age within the `stg_customers` model.  The `date_of_birth` is cast as a DATE data type for consistency and accurate age calculations."
        },
        {
          "name": "gender",
          "type": "VARCHAR",
          "description": "This column stores the customer's gender as a string value. Within the `stg_customers` staging model, this column provides a standardized representation of customer gender, sourced from the raw customer data. This information is crucial for customer segmentation and demographic analysis.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's gender as a string value. Within the `stg_customers` staging model, this column provides a standardized representation of customer gender, sourced from the raw customer data. This information is crucial for customer segmentation and demographic analysis."
        },
        {
          "name": "joining_date",
          "type": "DATE",
          "description": "The `joining_date` column in the `stg_customers` table stores the date when a customer joined the company. This date, sourced from the raw customer data, is cast to a DATE data type for standardization and is used to calculate the `months_as_customer` metric, providing insights into customer tenure.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `joining_date` column in the `stg_customers` table stores the date when a customer joined the company. This date, sourced from the raw customer data, is cast to a DATE data type for standardization and is used to calculate the `months_as_customer` metric, providing insights into customer tenure."
        },
        {
          "name": "customer_name",
          "type": "VARCHAR",
          "description": "`customer_name` stores the full name of the customer, constructed by concatenating the `first_name` and `last_name` fields. This column provides a user-friendly, combined representation of the customer's name within the `stg_customers` staging model, facilitating easier identification and reporting.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`customer_name` stores the full name of the customer, constructed by concatenating the `first_name` and `last_name` fields. This column provides a user-friendly, combined representation of the customer's name within the `stg_customers` staging model, facilitating easier identification and reporting."
        },
        {
          "name": "age",
          "type": "BIGINT",
          "description": "The `age` column in the `stg_customers` table stores the customer's age, calculated as the difference in years between their date of birth and the current date. This column provides a readily available age value for customer segmentation and analysis within the standardized customer data view.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `age` column in the `stg_customers` table stores the customer's age, calculated as the difference in years between their date of birth and the current date. This column provides a readily available age value for customer segmentation and analysis within the standardized customer data view."
        },
        {
          "name": "months_as_customer",
          "type": "BIGINT",
          "description": "`months_as_customer` stores the number of months a customer has been a customer, calculated as the difference between their joining date and the current date. This column, derived in the `stg_customers` model, provides a measure of customer tenure, useful for segmentation and understanding customer lifetime value. The data type is BIGINT.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`months_as_customer` stores the number of months a customer has been a customer, calculated as the difference between their joining date and the current date. This column, derived in the `stg_customers` model, provides a measure of customer tenure, useful for segmentation and understanding customer lifetime value. The data type is BIGINT."
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "`dbt_updated_at` stores the timestamp indicating when the `stg_customers` model was last refreshed. This timestamp is automatically generated during the model's execution and provides a record of the data's freshness. It's useful for understanding the recency of the customer data within the staging layer.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`dbt_updated_at` stores the timestamp indicating when the `stg_customers` model was last refreshed. This timestamp is automatically generated during the model's execution and provides a record of the data's freshness. It's useful for understanding the recency of the customer data within the staging layer."
        },
        {
          "name": "_dbt_source_project",
          "type": "VARCHAR",
          "description": "This column, `_dbt_source_project`, stores the name of the source project from which the customer data originates, in this case, 'customer_risk'. It's a metadata field used to track the origin of the data within the `stg_customers` staging model, aiding in data lineage and understanding the data's source system. This allows for easier identification of the source of the data.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `_dbt_source_project`, stores the name of the source project from which the customer data originates, in this case, 'customer_risk'. It's a metadata field used to track the origin of the data within the `stg_customers` staging model, aiding in data lineage and understanding the data's source system. This allows for easier identification of the source of the data."
        }
      ],
      "sql": "{{\n    config(\n        materialized='view',\n        tags=['staging', 'customers', 'daily']\n    )\n}}\n\nWITH source AS (\n    SELECT * FROM {{ ref('customers') }}\n)\n\nSELECT\n    customer_id,\n    first_name,\n    last_name,\n    email,\n    phone,\n    address,\n    city,\n    state,\n    zip_code,\n    CAST(date_of_birth AS DATE) AS date_of_birth,\n    gender,\n    CAST(joining_date AS DATE) AS joining_date,\n    -- Derived fields\n    CONCAT(first_name, ' ', last_name) AS customer_name,\n    DATEDIFF('year', date_of_birth, CURRENT_DATE()) AS age,\n    DATEDIFF('month', joining_date, CURRENT_DATE()) AS months_as_customer,\n    -- Metadata fields\n    CURRENT_TIMESTAMP AS dbt_updated_at,\n    'customer_risk' AS _dbt_source_project\nFROM source",
      "materialized": "view",
      "schema": "staging",
      "file_path": "models/staging/stg_customers.sql",
      "database": "insurance_data",
      "tags": [
        "staging",
        "customers",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.customer_risk.stg_customers",
        "metadata": {
          "type": "VIEW",
          "schema": "policy_management_staging",
          "name": "stg_customers",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `stg_customers` dbt model in the `policy_management` project serves as a staging layer for customer data. It transforms raw customer data from the `customers` source, casting date fields and deriving new columns. This model produces a view containing standardized customer information, including derived fields like `customer_name`, `age`, and `months_as_customer`, along with metadata.  It plays a crucial role in the data pipeline by cleaning and preparing customer data for downstream analysis and reporting."
    },
    {
      "id": "p6",
      "name": "stg_risk_factors",
      "project": "policy_management",
      "description": "This dbt model, `stg_risk_factors`, serves as a staging layer for risk factor data within the `policy_management` project. It transforms data from the `risk_factors` source, casting date fields and deriving new columns. The model produces a view containing standardized risk-related information, including a calculated `days_since_last_assessment` and a derived `credit_rating` based on the `credit_score`. This model plays a crucial role in the data pipeline by preparing the raw risk data for further analysis and downstream modeling.",
      "columns": [
        {
          "name": "risk_id",
          "type": "VARCHAR",
          "description": "`risk_id` is a VARCHAR column containing a unique identifier for each risk factor record. This column serves as the primary key for the `stg_risk_factors` model, enabling the identification and tracking of individual risk assessments. It's crucial for joining this data with other tables and performing analyses at the risk level.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "`risk_id` is a VARCHAR column containing a unique identifier for each risk factor record. This column serves as the primary key for the `stg_risk_factors` model, enabling the identification and tracking of individual risk assessments. It's crucial for joining this data with other tables and performing analyses at the risk level."
        },
        {
          "name": "customer_id",
          "type": "VARCHAR",
          "description": "`customer_id`: This column stores the unique identifier for a customer, represented as a variable-length string. Within the `stg_risk_factors` model, this ID links risk factor data to a specific customer, enabling analysis of risk profiles at the customer level. This is a key field for joining with other customer-related tables.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "`customer_id`: This column stores the unique identifier for a customer, represented as a variable-length string. Within the `stg_risk_factors` model, this ID links risk factor data to a specific customer, enabling analysis of risk profiles at the customer level. This is a key field for joining with other customer-related tables."
        },
        {
          "name": "assessment_date",
          "type": "DATE",
          "description": "`assessment_date` stores the date when a risk assessment was performed, sourced from the `risk_factors` table and cast as a DATE data type. This column is essential for calculating the `days_since_last_assessment`, providing a temporal context for risk factor analysis within the `stg_risk_factors` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`assessment_date` stores the date when a risk assessment was performed, sourced from the `risk_factors` table and cast as a DATE data type. This column is essential for calculating the `days_since_last_assessment`, providing a temporal context for risk factor analysis within the `stg_risk_factors` model."
        },
        {
          "name": "credit_score",
          "type": "INTEGER",
          "description": "This column, `credit_score`, stores an integer representing a customer's credit score.  It's used within the `stg_risk_factors` model to derive a `credit_rating` and is a key input for assessing a customer's risk profile. The credit score is a direct input from the source data and is used to categorize the customer's creditworthiness.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `credit_score`, stores an integer representing a customer's credit score.  It's used within the `stg_risk_factors` model to derive a `credit_rating` and is a key input for assessing a customer's risk profile. The credit score is a direct input from the source data and is used to categorize the customer's creditworthiness."
        },
        {
          "name": "claim_frequency",
          "type": "VARCHAR",
          "description": "`claim_frequency` stores the frequency of claims, likely as a string value. This column is included in the `stg_risk_factors` model to provide risk-related information for downstream analysis. The specific format or calculation logic for the claim frequency is not explicitly defined in the context.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`claim_frequency` stores the frequency of claims, likely as a string value. This column is included in the `stg_risk_factors` model to provide risk-related information for downstream analysis. The specific format or calculation logic for the claim frequency is not explicitly defined in the context."
        },
        {
          "name": "risk_score",
          "type": "DOUBLE",
          "description": "The `risk_score` column in the `stg_risk_factors` table stores a numerical value representing the overall risk associated with a policy or entity. This `DOUBLE` data type likely reflects a calculated risk assessment, potentially incorporating factors like `credit_score` and `claim_frequency` to provide a comprehensive risk profile. This score is used for risk analysis and potentially for downstream modeling or decision-making processes.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `risk_score` column in the `stg_risk_factors` table stores a numerical value representing the overall risk associated with a policy or entity. This `DOUBLE` data type likely reflects a calculated risk assessment, potentially incorporating factors like `credit_score` and `claim_frequency` to provide a comprehensive risk profile. This score is used for risk analysis and potentially for downstream modeling or decision-making processes."
        },
        {
          "name": "previous_claims_count",
          "type": "INTEGER",
          "description": "This column, `previous_claims_count`, stores the number of claims filed by a policyholder prior to the current assessment. This integer value is likely used to assess claim frequency and contribute to the overall risk profile of a policyholder within the `stg_risk_factors` model. This data is crucial for understanding a policyholder's historical claims behavior.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `previous_claims_count`, stores the number of claims filed by a policyholder prior to the current assessment. This integer value is likely used to assess claim frequency and contribute to the overall risk profile of a policyholder within the `stg_risk_factors` model. This data is crucial for understanding a policyholder's historical claims behavior."
        },
        {
          "name": "risk_category",
          "type": "VARCHAR",
          "description": "`risk_category` stores a textual classification of the risk associated with a policy or entity. This column categorizes risk based on various factors, likely derived from the source `risk_factors` data, to provide a high-level risk assessment within the `policy_management` project.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`risk_category` stores a textual classification of the risk associated with a policy or entity. This column categorizes risk based on various factors, likely derived from the source `risk_factors` data, to provide a high-level risk assessment within the `policy_management` project."
        },
        {
          "name": "last_assessment",
          "type": "DATE",
          "description": "`last_assessment` stores the date of the most recent risk assessment. This column, cast as a DATE, is used to calculate `days_since_last_assessment`, providing insight into the recency of risk evaluations. This information is crucial for understanding the timeliness of risk data within the `policy_management` project.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`last_assessment` stores the date of the most recent risk assessment. This column, cast as a DATE, is used to calculate `days_since_last_assessment`, providing insight into the recency of risk evaluations. This information is crucial for understanding the timeliness of risk data within the `policy_management` project."
        },
        {
          "name": "assessment_source",
          "type": "VARCHAR",
          "description": "This column, `assessment_source`, stores the origin or source of the risk assessment data as a text string.  It identifies where the risk factor assessment originated, providing context for the data within the `stg_risk_factors` model. This information is crucial for understanding the provenance of the risk data and potentially filtering or grouping by assessment source.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `assessment_source`, stores the origin or source of the risk assessment data as a text string.  It identifies where the risk factor assessment originated, providing context for the data within the `stg_risk_factors` model. This information is crucial for understanding the provenance of the risk data and potentially filtering or grouping by assessment source."
        },
        {
          "name": "days_since_last_assessment",
          "type": "BIGINT",
          "description": "This column, `days_since_last_assessment`, stores the number of days elapsed since the last risk assessment.  It's calculated as the difference between the `assessment_date` and `last_assessment` dates, providing a temporal measure of how recently a risk assessment was performed. This information is crucial for understanding the recency of risk evaluations and can be used to identify potentially outdated risk profiles.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `days_since_last_assessment`, stores the number of days elapsed since the last risk assessment.  It's calculated as the difference between the `assessment_date` and `last_assessment` dates, providing a temporal measure of how recently a risk assessment was performed. This information is crucial for understanding the recency of risk evaluations and can be used to identify potentially outdated risk profiles."
        },
        {
          "name": "credit_rating",
          "type": "VARCHAR",
          "description": "The `credit_rating` column stores a categorical assessment of creditworthiness, derived from the `credit_score`. This column categorizes credit scores into 'POOR' or 'VERY_POOR' ratings, providing a simplified view of credit risk for analysis within the `policy_management` project.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `credit_rating` column stores a categorical assessment of creditworthiness, derived from the `credit_score`. This column categorizes credit scores into 'POOR' or 'VERY_POOR' ratings, providing a simplified view of credit risk for analysis within the `policy_management` project."
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "`dbt_updated_at` stores the timestamp when the `stg_risk_factors` model was last refreshed. This column, populated using `CURRENT_TIMESTAMP`, provides a record of the data's freshness, enabling data analysts to understand the recency of the risk factor information.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`dbt_updated_at` stores the timestamp when the `stg_risk_factors` model was last refreshed. This column, populated using `CURRENT_TIMESTAMP`, provides a record of the data's freshness, enabling data analysts to understand the recency of the risk factor information."
        },
        {
          "name": "_dbt_source_project",
          "type": "VARCHAR",
          "description": "This column, `_dbt_source_project`, stores the source project identifier as a VARCHAR string.  It's a metadata field indicating the origin of the data within the `stg_risk_factors` staging model, specifically identifying it as originating from the 'customer_risk' project. This helps track the data lineage and source for risk factor information.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `_dbt_source_project`, stores the source project identifier as a VARCHAR string.  It's a metadata field indicating the origin of the data within the `stg_risk_factors` staging model, specifically identifying it as originating from the 'customer_risk' project. This helps track the data lineage and source for risk factor information."
        }
      ],
      "sql": "{{\n    config(\n        materialized='view',\n        tags=['staging', 'risk', 'daily']\n    )\n}}\n\nWITH source AS (\n    SELECT * FROM {{ ref('risk_factors') }}\n)\n\nSELECT\n    risk_id,\n    customer_id,\n    CAST(assessment_date AS DATE) AS assessment_date,\n    credit_score,\n    claim_frequency,\n    risk_score,\n    previous_claims_count,\n    risk_category,\n    CAST(last_assessment AS DATE) AS last_assessment,\n    assessment_source,\n    -- Derived fields\n    DATEDIFF('day', last_assessment, assessment_date) AS days_since_last_assessment,\n    CASE\n        WHEN credit_score >= 750 THEN 'EXCELLENT'\n        WHEN credit_score >= 700 THEN 'GOOD'\n        WHEN credit_score >= 650 THEN 'FAIR'\n        WHEN credit_score >= 600 THEN 'POOR'\n        ELSE 'VERY_POOR'\n    END AS credit_rating,\n    -- Metadata fields\n    CURRENT_TIMESTAMP AS dbt_updated_at,\n    'customer_risk' AS _dbt_source_project\nFROM source",
      "materialized": "view",
      "schema": "staging",
      "file_path": "models/staging/stg_risk_factors.sql",
      "database": "insurance_data",
      "tags": [
        "staging",
        "risk",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.customer_risk.stg_risk_factors",
        "metadata": {
          "type": "VIEW",
          "schema": "policy_management_staging",
          "name": "stg_risk_factors",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "This dbt model, `stg_risk_factors`, serves as a staging layer for risk factor data within the `policy_management` project. It transforms data from the `risk_factors` source, casting date fields and deriving new columns. The model produces a view containing standardized risk-related information, including a calculated `days_since_last_assessment` and a derived `credit_rating` based on the `credit_score`. This model plays a crucial role in the data pipeline by preparing the raw risk data for further analysis and downstream modeling."
    },
    {
      "id": "p7",
      "name": "int_customer_risk_enriched",
      "project": "policy_management",
      "description": "The `int_customer_risk_enriched` dbt model in the `policy_management` project enriches customer data with risk assessment information.  It joins customer data from `stg_customers` with risk factors from `stg_risk_factors`, linking them by `customer_id`. This intermediate model produces a consolidated view containing customer details alongside associated risk metrics like credit score, risk score, and claim frequency.  Crucially, it applies business logic to adjust the risk score based on customer age and derives customer segments (PREMIUM, PREFERRED, STANDARD, NEW) based on tenure and risk category, providing valuable insights for policy management.  Finally, it includes metadata like `dbt_updated_at` and `_dbt_source_project` for lineage and tracking.",
      "columns": [
        {
          "name": "customer_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for each customer, sourced from the `stg_customers` table.  It serves as the primary key for joining customer data with risk factors within the `int_customer_risk_enriched` model.  This `customer_id` is essential for linking customer profiles with their associated risk assessments.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for each customer, sourced from the `stg_customers` table.  It serves as the primary key for joining customer data with risk factors within the `int_customer_risk_enriched` model.  This `customer_id` is essential for linking customer profiles with their associated risk assessments."
        },
        {
          "name": "customer_name",
          "type": "VARCHAR",
          "description": "This column stores the customer's full name, retrieved from the `stg_customers` source.  It's a key customer identifier within the `int_customer_risk_enriched` model, used to link customer details with their associated risk assessment information. This allows for easy identification of customers within the enriched dataset.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's full name, retrieved from the `stg_customers` source.  It's a key customer identifier within the `int_customer_risk_enriched` model, used to link customer details with their associated risk assessment information. This allows for easy identification of customers within the enriched dataset."
        },
        {
          "name": "email",
          "type": "VARCHAR",
          "description": "This column stores the customer's email address.  It's included to provide a means of contacting the customer and is sourced directly from the `stg_customers` table, as part of the customer's core profile information.  This allows for easy identification and communication with customers within the enriched risk assessment view.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's email address.  It's included to provide a means of contacting the customer and is sourced directly from the `stg_customers` table, as part of the customer's core profile information.  This allows for easy identification and communication with customers within the enriched risk assessment view."
        },
        {
          "name": "phone",
          "type": "VARCHAR",
          "description": "The `phone` column stores the customer's phone number as a string. This column provides contact information for each customer, essential for communication and potentially for risk assessment verification within the `int_customer_risk_enriched` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `phone` column stores the customer's phone number as a string. This column provides contact information for each customer, essential for communication and potentially for risk assessment verification within the `int_customer_risk_enriched` model."
        },
        {
          "name": "address",
          "type": "VARCHAR",
          "description": "The `address` column stores the customer's street address as a string. This column provides the customer's physical location, which is essential for risk assessment and policy management. It's directly sourced from the `stg_customers` table and used for customer identification and potentially for geographic risk analysis.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `address` column stores the customer's street address as a string. This column provides the customer's physical location, which is essential for risk assessment and policy management. It's directly sourced from the `stg_customers` table and used for customer identification and potentially for geographic risk analysis."
        },
        {
          "name": "city",
          "type": "VARCHAR",
          "description": "The `city` column stores the customer's city of residence, sourced from the `stg_customers` table. This column provides customer location information, crucial for geographic analysis and potentially for risk assessment based on regional factors. It's a key attribute for understanding customer demographics within the `int_customer_risk_enriched` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `city` column stores the customer's city of residence, sourced from the `stg_customers` table. This column provides customer location information, crucial for geographic analysis and potentially for risk assessment based on regional factors. It's a key attribute for understanding customer demographics within the `int_customer_risk_enriched` model."
        },
        {
          "name": "state",
          "type": "VARCHAR",
          "description": "The `state` column stores the customer's state of residence as a VARCHAR. This column is inherited from the `stg_customers` source and provides location information for customer profiling and segmentation within the `int_customer_risk_enriched` model. It is used alongside other demographic data for risk assessment and customer segment derivation.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `state` column stores the customer's state of residence as a VARCHAR. This column is inherited from the `stg_customers` source and provides location information for customer profiling and segmentation within the `int_customer_risk_enriched` model. It is used alongside other demographic data for risk assessment and customer segment derivation."
        },
        {
          "name": "zip_code",
          "type": "INTEGER",
          "description": "This column stores the customer's 5-digit postal code as an integer.  It's used to identify the customer's geographic location and is directly sourced from the `stg_customers` table.  This information is crucial for potential geographic analysis and risk assessment.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's 5-digit postal code as an integer.  It's used to identify the customer's geographic location and is directly sourced from the `stg_customers` table.  This information is crucial for potential geographic analysis and risk assessment."
        },
        {
          "name": "date_of_birth",
          "type": "DATE",
          "description": "This column stores the customer's date of birth. It's used to calculate the customer's age, which is then used in the `age_adjusted_risk_score` calculation, potentially increasing the risk score for younger or older customers. This information is crucial for risk assessment and customer segmentation within the policy management context.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's date of birth. It's used to calculate the customer's age, which is then used in the `age_adjusted_risk_score` calculation, potentially increasing the risk score for younger or older customers. This information is crucial for risk assessment and customer segmentation within the policy management context."
        },
        {
          "name": "gender",
          "type": "VARCHAR",
          "description": "This column stores the customer's self-identified gender as a string value.  It's included to provide demographic information about the customer, which may be used for analysis and segmentation within the policy management context.  This data is sourced directly from the `stg_customers` table.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's self-identified gender as a string value.  It's included to provide demographic information about the customer, which may be used for analysis and segmentation within the policy management context.  This data is sourced directly from the `stg_customers` table."
        },
        {
          "name": "joining_date",
          "type": "DATE",
          "description": "`joining_date`: This column stores the date when the customer initially joined the company. It's used to calculate the `months_as_customer` metric, which is then used to determine the customer's segment (e.g., PREMIUM, PREFERRED) within the `int_customer_risk_enriched` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`joining_date`: This column stores the date when the customer initially joined the company. It's used to calculate the `months_as_customer` metric, which is then used to determine the customer's segment (e.g., PREMIUM, PREFERRED) within the `int_customer_risk_enriched` model."
        },
        {
          "name": "age",
          "type": "BIGINT",
          "description": "This column stores the customer's age as a whole number (BIGINT).  It's used in the model to adjust the `risk_score`; customers under 25 or over 70 have their risk score increased by 20%. This age information is also a factor in determining customer segments.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's age as a whole number (BIGINT).  It's used in the model to adjust the `risk_score`; customers under 25 or over 70 have their risk score increased by 20%. This age information is also a factor in determining customer segments."
        },
        {
          "name": "months_as_customer",
          "type": "BIGINT",
          "description": "`months_as_customer` stores the number of months a customer has been with the company, calculated from their joining date. This column is crucial for customer segmentation, as it's used in conjunction with risk category to determine a customer's segment (e.g., PREMIUM, PREFERRED, STANDARD, NEW). The value is likely derived from the difference between the current date and the customer's joining date.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`months_as_customer` stores the number of months a customer has been with the company, calculated from their joining date. This column is crucial for customer segmentation, as it's used in conjunction with risk category to determine a customer's segment (e.g., PREMIUM, PREFERRED, STANDARD, NEW). The value is likely derived from the difference between the current date and the customer's joining date."
        },
        {
          "name": "risk_id",
          "type": "VARCHAR",
          "description": "This column, `risk_id`, stores a unique identifier for the risk assessment associated with a customer. It links customer data to specific risk evaluations, enabling the association of risk factors like credit score with individual customer profiles within the `int_customer_risk_enriched` model. This ID facilitates joining risk data from the `stg_risk_factors` table.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column, `risk_id`, stores a unique identifier for the risk assessment associated with a customer. It links customer data to specific risk evaluations, enabling the association of risk factors like credit score with individual customer profiles within the `int_customer_risk_enriched` model. This ID facilitates joining risk data from the `stg_risk_factors` table."
        },
        {
          "name": "assessment_date",
          "type": "DATE",
          "description": "`assessment_date` stores the date when the customer's risk assessment was performed. This date is crucial for understanding the recency of the risk evaluation and how risk factors may have changed over time, impacting the derived risk scores and customer segments within the `int_customer_risk_enriched` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`assessment_date` stores the date when the customer's risk assessment was performed. This date is crucial for understanding the recency of the risk evaluation and how risk factors may have changed over time, impacting the derived risk scores and customer segments within the `int_customer_risk_enriched` model."
        },
        {
          "name": "credit_score",
          "type": "INTEGER",
          "description": "This column stores the customer's credit score as an integer.  The credit score, sourced from risk assessment data, is a key risk indicator used in the model to assess customer risk and ultimately inform customer segmentation.  It contributes to the overall risk profile alongside other factors like claim frequency.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's credit score as an integer.  The credit score, sourced from risk assessment data, is a key risk indicator used in the model to assess customer risk and ultimately inform customer segmentation.  It contributes to the overall risk profile alongside other factors like claim frequency."
        },
        {
          "name": "credit_rating",
          "type": "VARCHAR",
          "description": "The `credit_rating` column stores a customer's credit rating, likely obtained from a credit bureau. This rating is a key risk indicator used within the model to assess customer risk and potentially influence policy decisions. The `credit_rating` is used in conjunction with other risk factors to derive customer segments.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `credit_rating` column stores a customer's credit rating, likely obtained from a credit bureau. This rating is a key risk indicator used within the model to assess customer risk and potentially influence policy decisions. The `credit_rating` is used in conjunction with other risk factors to derive customer segments."
        },
        {
          "name": "claim_frequency",
          "type": "VARCHAR",
          "description": "`claim_frequency` stores a customer's historical claim frequency, likely represented as a string value. This data is used within the `int_customer_risk_enriched` model to contribute to the overall risk assessment of a customer, influencing their risk score and ultimately their customer segment. The specific calculation or source of this frequency is not explicitly defined in the context, but it is a key input for risk evaluation.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`claim_frequency` stores a customer's historical claim frequency, likely represented as a string value. This data is used within the `int_customer_risk_enriched` model to contribute to the overall risk assessment of a customer, influencing their risk score and ultimately their customer segment. The specific calculation or source of this frequency is not explicitly defined in the context, but it is a key input for risk evaluation."
        },
        {
          "name": "risk_score",
          "type": "DOUBLE",
          "description": "The `risk_score` column stores a numerical value representing the customer's overall risk assessment. This score, of type DOUBLE, is derived from the `stg_risk_factors` data and is used to categorize customers and inform policy management decisions. The risk score is further adjusted based on customer age.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `risk_score` column stores a numerical value representing the customer's overall risk assessment. This score, of type DOUBLE, is derived from the `stg_risk_factors` data and is used to categorize customers and inform policy management decisions. The risk score is further adjusted based on customer age."
        },
        {
          "name": "previous_claims_count",
          "type": "INTEGER",
          "description": "This column, `previous_claims_count`, stores the total number of claims a customer has filed previously.  This integer value is a key risk factor used in the `int_customer_risk_enriched` model to assess a customer's overall risk profile.  It contributes to the calculation of claim frequency and, consequently, influences the customer's risk score and segment assignment.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `previous_claims_count`, stores the total number of claims a customer has filed previously.  This integer value is a key risk factor used in the `int_customer_risk_enriched` model to assess a customer's overall risk profile.  It contributes to the calculation of claim frequency and, consequently, influences the customer's risk score and segment assignment."
        },
        {
          "name": "risk_category",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "days_since_last_assessment",
          "type": "BIGINT",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "age_adjusted_risk_score",
          "type": "DOUBLE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "customer_segment",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "_dbt_source_project",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        }
      ],
      "sql": "{{\n    config(\n        materialized='view',\n        tags=['intermediate', 'customers', 'risk', 'daily']\n    )\n}}\n\nWITH customers AS (\n    SELECT * FROM {{ ref('stg_customers') }}\n),\n\nrisk_factors AS (\n    SELECT * FROM {{ ref('stg_risk_factors') }}\n)\n\nSELECT\n    c.customer_id,\n    c.customer_name,\n    c.email,\n    c.phone,\n    c.address,\n    c.city,\n    c.state,\n    c.zip_code,\n    c.date_of_birth,\n    c.gender,\n    c.joining_date,\n    c.age,\n    c.months_as_customer,\n    -- Risk information\n    r.risk_id,\n    r.assessment_date,\n    r.credit_score,\n    r.credit_rating,\n    r.claim_frequency,\n    r.risk_score,\n    r.previous_claims_count,\n    r.risk_category,\n    r.days_since_last_assessment,\n    -- Risk factor adjustments\n    CASE\n        WHEN c.age < 25 OR c.age > 70 THEN r.risk_score * 1.2\n        ELSE r.risk_score\n    END AS age_adjusted_risk_score,\n    -- Customer segments\n    CASE\n        WHEN c.months_as_customer >= 36 AND r.risk_category = 'LOW_RISK' THEN 'PREMIUM'\n        WHEN c.months_as_customer >= 24 AND r.risk_category IN ('LOW_RISK', 'MEDIUM_RISK') THEN 'PREFERRED'\n        WHEN c.months_as_customer >= 12 THEN 'STANDARD'\n        ELSE 'NEW'\n    END AS customer_segment,\n    -- Metadata fields\n    CURRENT_TIMESTAMP AS dbt_updated_at,\n    c._dbt_source_project\nFROM customers c\nLEFT JOIN risk_factors r ON c.customer_id = r.customer_id",
      "materialized": "view",
      "schema": "intermediate",
      "file_path": "models/intermediate/int_customer_risk_enriched.sql",
      "database": "insurance_data",
      "tags": [
        "intermediate",
        "customers",
        "risk",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.customer_risk.int_customer_risk_enriched",
        "metadata": {
          "type": "VIEW",
          "schema": "policy_management_intermediate",
          "name": "int_customer_risk_enriched",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `int_customer_risk_enriched` dbt model in the `policy_management` project enriches customer data with risk assessment information.  It joins customer data from `stg_customers` with risk factors from `stg_risk_factors`, linking them by `customer_id`. This intermediate model produces a consolidated view containing customer details alongside associated risk metrics like credit score, risk score, and claim frequency.  Crucially, it applies business logic to adjust the risk score based on customer age and derives customer segments (PREMIUM, PREFERRED, STANDARD, NEW) based on tenure and risk category, providing valuable insights for policy management.  Finally, it includes metadata like `dbt_updated_at` and `_dbt_source_project` for lineage and tracking."
    },
    {
      "id": "p8",
      "name": "mart_customer_risk_profile",
      "project": "policy_management",
      "description": "The `mart_customer_risk_profile` dbt model in the `policy_management` project generates a customer-level risk profile. It consolidates customer data with enriched risk metrics and claim history to assess customer risk. This model materializes as a table, serving as a key output in the data pipeline for downstream analysis and reporting.  It joins data from `int_customer_risk_enriched` and, if available, claim data from the `claims_processing` project, calculating aggregated claim statistics. The model enriches the customer data with risk scores, categories, and segments, providing a comprehensive view of customer risk for policy management.",
      "columns": [
        {
          "name": "customer_id",
          "type": "VARCHAR",
          "description": "This column stores the unique identifier for a customer, represented as a string.  It serves as the primary key for joining customer data with risk metrics and claim history within the `mart_customer_risk_profile` table. This ID is crucial for aggregating customer-level risk assessments and claim statistics.",
          "isPrimaryKey": true,
          "isForeignKey": true,
          "ai_description": "This column stores the unique identifier for a customer, represented as a string.  It serves as the primary key for joining customer data with risk metrics and claim history within the `mart_customer_risk_profile` table. This ID is crucial for aggregating customer-level risk assessments and claim statistics."
        },
        {
          "name": "customer_name",
          "type": "VARCHAR",
          "description": "This column stores the customer's full name as a string. It's used to identify the customer within the `mart_customer_risk_profile` table, providing a human-readable identifier alongside the customer's risk profile data. This allows for easy identification and reporting on specific customers.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's full name as a string. It's used to identify the customer within the `mart_customer_risk_profile` table, providing a human-readable identifier alongside the customer's risk profile data. This allows for easy identification and reporting on specific customers."
        },
        {
          "name": "email",
          "type": "VARCHAR",
          "description": "This column stores the customer's email address. It is used to uniquely identify a customer within the `mart_customer_risk_profile` model, enabling the linking of customer data with risk profiles and claim history. This allows for customer-level analysis and reporting.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's email address. It is used to uniquely identify a customer within the `mart_customer_risk_profile` model, enabling the linking of customer data with risk profiles and claim history. This allows for customer-level analysis and reporting."
        },
        {
          "name": "city",
          "type": "VARCHAR",
          "description": "This column stores the customer's city of residence, sourced from the `int_customer_risk_enriched` model.  It provides location context for each customer within the risk profile, enabling analysis of risk factors by geographic region. This data is crucial for understanding potential regional variations in risk.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column stores the customer's city of residence, sourced from the `int_customer_risk_enriched` model.  It provides location context for each customer within the risk profile, enabling analysis of risk factors by geographic region. This data is crucial for understanding potential regional variations in risk."
        },
        {
          "name": "state",
          "type": "VARCHAR",
          "description": "The `state` column stores the customer's state of residence, represented as a VARCHAR. This column is crucial for segmenting customers by geographic location within the customer risk profile, enabling risk analysis based on regional factors. It is likely sourced from the `int_customer_risk_enriched` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `state` column stores the customer's state of residence, represented as a VARCHAR. This column is crucial for segmenting customers by geographic location within the customer risk profile, enabling risk analysis based on regional factors. It is likely sourced from the `int_customer_risk_enriched` model."
        },
        {
          "name": "age",
          "type": "BIGINT",
          "description": "The `age` column in the `mart_customer_risk_profile` table stores the customer's age as a whole number (BIGINT). This data point is a key input for calculating risk scores and categorizing customers within the policy management context, contributing to a comprehensive customer risk profile.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `age` column in the `mart_customer_risk_profile` table stores the customer's age as a whole number (BIGINT). This data point is a key input for calculating risk scores and categorizing customers within the policy management context, contributing to a comprehensive customer risk profile."
        },
        {
          "name": "months_as_customer",
          "type": "BIGINT",
          "description": "This column, `months_as_customer`, stores the number of months a customer has been associated with the business.  It provides a measure of customer tenure, which is likely used to assess customer risk profiles. This information can be used to understand the relationship between customer longevity and risk factors.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "This column, `months_as_customer`, stores the number of months a customer has been associated with the business.  It provides a measure of customer tenure, which is likely used to assess customer risk profiles. This information can be used to understand the relationship between customer longevity and risk factors."
        },
        {
          "name": "credit_score",
          "type": "INTEGER",
          "description": "The `credit_score` column stores an integer representing the customer's credit score. This score is used within the `mart_customer_risk_profile` model to assess a customer's financial risk profile, contributing to the overall risk assessment alongside other factors like age and claim history. This likely reflects a creditworthiness assessment, potentially influencing policy pricing or risk mitigation strategies.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `credit_score` column stores an integer representing the customer's credit score. This score is used within the `mart_customer_risk_profile` model to assess a customer's financial risk profile, contributing to the overall risk assessment alongside other factors like age and claim history. This likely reflects a creditworthiness assessment, potentially influencing policy pricing or risk mitigation strategies."
        },
        {
          "name": "credit_rating",
          "type": "VARCHAR",
          "description": "The `credit_rating` column stores a customer's credit rating, likely derived from a credit bureau or internal scoring model. This rating is used within the `mart_customer_risk_profile` model to assess a customer's financial risk, potentially influencing their overall risk profile and policy terms. The data type `VARCHAR` suggests the rating is represented as a categorical value (e.g., \"Excellent\", \"Good\", \"Poor\").",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `credit_rating` column stores a customer's credit rating, likely derived from a credit bureau or internal scoring model. This rating is used within the `mart_customer_risk_profile` model to assess a customer's financial risk, potentially influencing their overall risk profile and policy terms. The data type `VARCHAR` suggests the rating is represented as a categorical value (e.g., \"Excellent\", \"Good\", \"Poor\")."
        },
        {
          "name": "claim_frequency",
          "type": "VARCHAR",
          "description": "`claim_frequency` stores a customer's claim frequency, likely represented as a string value. This column is a key component of the customer risk profile, used to assess a customer's historical claim behavior and contribute to their overall risk assessment. The value is likely derived from aggregated claim statistics, potentially indicating the number of claims per period or a similar metric.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`claim_frequency` stores a customer's claim frequency, likely represented as a string value. This column is a key component of the customer risk profile, used to assess a customer's historical claim behavior and contribute to their overall risk assessment. The value is likely derived from aggregated claim statistics, potentially indicating the number of claims per period or a similar metric."
        },
        {
          "name": "risk_score",
          "type": "DOUBLE",
          "description": "The `risk_score` column in the `mart_customer_risk_profile` table stores a numerical representation of a customer's overall risk. This score is a key output used to assess customer risk, likely derived from a combination of enriched customer data and claim history.  It is used in calculations such as `claims_adjusted_risk_score`.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `risk_score` column in the `mart_customer_risk_profile` table stores a numerical representation of a customer's overall risk. This score is a key output used to assess customer risk, likely derived from a combination of enriched customer data and claim history.  It is used in calculations such as `claims_adjusted_risk_score`."
        },
        {
          "name": "age_adjusted_risk_score",
          "type": "DOUBLE",
          "description": "`age_adjusted_risk_score` stores a customer's risk score, adjusted for age. This `DOUBLE` value represents the customer's risk profile, likely derived from various factors and used in conjunction with other risk metrics for comprehensive customer risk assessment within the policy management context.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`age_adjusted_risk_score` stores a customer's risk score, adjusted for age. This `DOUBLE` value represents the customer's risk profile, likely derived from various factors and used in conjunction with other risk metrics for comprehensive customer risk assessment within the policy management context."
        },
        {
          "name": "previous_claims_count",
          "type": "INTEGER",
          "description": "`previous_claims_count` stores the total number of claims filed by a customer prior to the current assessment. This integer value is aggregated from claim data and used within the `mart_customer_risk_profile` model to contribute to the customer's overall risk assessment, potentially influencing risk scores and customer segmentation.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`previous_claims_count` stores the total number of claims filed by a customer prior to the current assessment. This integer value is aggregated from claim data and used within the `mart_customer_risk_profile` model to contribute to the customer's overall risk assessment, potentially influencing risk scores and customer segmentation."
        },
        {
          "name": "risk_category",
          "type": "VARCHAR",
          "description": "`risk_category` categorizes customers based on their assessed risk level, derived from the `int_customer_risk_enriched` data and potentially claim history. This column provides a high-level risk classification of each customer within the `mart_customer_risk_profile` model, facilitating risk-based segmentation and analysis for policy management. The specific categories likely reflect a range of risk levels, such as \"Low,\" \"Medium,\" and \"High,\" though the exact categories are not explicitly defined.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`risk_category` categorizes customers based on their assessed risk level, derived from the `int_customer_risk_enriched` data and potentially claim history. This column provides a high-level risk classification of each customer within the `mart_customer_risk_profile` model, facilitating risk-based segmentation and analysis for policy management. The specific categories likely reflect a range of risk levels, such as \"Low,\" \"Medium,\" and \"High,\" though the exact categories are not explicitly defined."
        },
        {
          "name": "customer_segment",
          "type": "VARCHAR",
          "description": "The `customer_segment` column in the `mart_customer_risk_profile` table categorizes customers into risk segments (e.g., Low, Medium, High) based on their risk profile. This column is crucial for policy management, enabling risk-based segmentation and targeted actions by grouping customers with similar risk characteristics. The segmentation likely considers factors like claim history and enriched risk metrics.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "The `customer_segment` column in the `mart_customer_risk_profile` table categorizes customers into risk segments (e.g., Low, Medium, High) based on their risk profile. This column is crucial for policy management, enabling risk-based segmentation and targeted actions by grouping customers with similar risk characteristics. The segmentation likely considers factors like claim history and enriched risk metrics."
        },
        {
          "name": "total_claims",
          "type": "INTEGER",
          "description": "`total_claims` stores the total number of claims associated with a customer. This integer value is calculated by counting the number of claims linked to each customer within the `claims_processing` project and is used in the `mart_customer_risk_profile` model to assess customer risk, including calculations for risk scores and denial rates.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`total_claims` stores the total number of claims associated with a customer. This integer value is calculated by counting the number of claims linked to each customer within the `claims_processing` project and is used in the `mart_customer_risk_profile` model to assess customer risk, including calculations for risk scores and denial rates."
        },
        {
          "name": "total_claim_amount",
          "type": "INTEGER",
          "description": "`total_claim_amount` represents the sum of all claim amounts associated with a specific customer. This integer value is calculated by aggregating claim data from the `claims_processing` project and is used to understand the total financial impact of claims for each customer within the customer risk profile.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`total_claim_amount` represents the sum of all claim amounts associated with a specific customer. This integer value is calculated by aggregating claim data from the `claims_processing` project and is used to understand the total financial impact of claims for each customer within the customer risk profile."
        },
        {
          "name": "total_settlement_amount",
          "type": "INTEGER",
          "description": "`total_settlement_amount` stores the sum of all settlement amounts for a customer's claims. This integer value represents the total monetary value paid out to settle claims, providing a key metric for assessing a customer's claim history and risk profile within the `mart_customer_risk_profile` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`total_settlement_amount` stores the sum of all settlement amounts for a customer's claims. This integer value represents the total monetary value paid out to settle claims, providing a key metric for assessing a customer's claim history and risk profile within the `mart_customer_risk_profile` model."
        },
        {
          "name": "avg_days_to_settle",
          "type": "INTEGER",
          "description": "`avg_days_to_settle` stores the average number of days it took to settle a customer's claims. This integer value represents the average time, in days, from claim initiation to settlement, providing insight into the efficiency of the claims process for each customer within the `mart_customer_risk_profile` model.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`avg_days_to_settle` stores the average number of days it took to settle a customer's claims. This integer value represents the average time, in days, from claim initiation to settlement, providing insight into the efficiency of the claims process for each customer within the `mart_customer_risk_profile` model."
        },
        {
          "name": "settled_claims_count",
          "type": "INTEGER",
          "description": "`settled_claims_count` stores the total number of claims for a customer that have been settled. This integer value is aggregated from the `claims_processing` project and is used within the `mart_customer_risk_profile` model to contribute to the customer's overall risk assessment. The count is derived by summing a case statement that checks for a 'SETTLED' claim status.",
          "isPrimaryKey": false,
          "isForeignKey": false,
          "ai_description": "`settled_claims_count` stores the total number of claims for a customer that have been settled. This integer value is aggregated from the `claims_processing` project and is used within the `mart_customer_risk_profile` model to contribute to the customer's overall risk assessment. The count is derived by summing a case statement that checks for a 'SETTLED' claim status."
        },
        {
          "name": "denied_claims_count",
          "type": "INTEGER",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "most_recent_claim_date",
          "type": "DATE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "claims_adjusted_risk_score",
          "type": "DOUBLE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "claim_denial_rate",
          "type": "DOUBLE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "risk_source",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "claims_source",
          "type": "VARCHAR",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        },
        {
          "name": "dbt_updated_at",
          "type": "TIMESTAMP WITH TIME ZONE",
          "description": "",
          "isPrimaryKey": false,
          "isForeignKey": false
        }
      ],
      "sql": "{{\n    config(\n        materialized='table',\n        tags=['mart', 'customers', 'risk', 'daily']\n    )\n}}\n\nWITH customer_risk_enriched AS (\n    SELECT * FROM {{ ref('int_customer_risk_enriched') }}\n),\n\n-- Reference to claims data from claims processing project\ncustomer_claims AS (\n    {% if execute %}\n        {% if adapter.get_relation(this.database, 'mart', 'mart_claims_analysis') %}\n            SELECT \n                customer_id,\n                COUNT(*) AS total_claims,\n                SUM(claim_amount) AS total_claim_amount,\n                SUM(settlement_amount_clean) AS total_settlement_amount,\n                AVG(days_to_settle) AS avg_days_to_settle,\n                SUM(CASE WHEN claim_status = 'SETTLED' THEN 1 ELSE 0 END) AS settled_claims_count,\n                SUM(CASE WHEN claim_status = 'DENIED' THEN 1 ELSE 0 END) AS denied_claims_count,\n                MAX(claim_date) AS most_recent_claim_date,\n                'claims_processing' AS _dbt_source_project\n            FROM {{ ref('claims_processing', 'mart_claims_analysis') }}\n            GROUP BY customer_id\n        {% else %}\n            SELECT\n                'CU0000' AS customer_id,\n                0 AS total_claims,\n                0 AS total_claim_amount,\n                0 AS total_settlement_amount,\n                0 AS avg_days_to_settle,\n                0 AS settled_claims_count,\n                0 AS denied_claims_count,\n                CAST('2000-01-01' AS DATE) AS most_recent_claim_date,\n                'claims_processing' AS _dbt_source_project\n            WHERE 1=0\n        {% endif %}\n    {% else %}\n        SELECT\n            'CU0000' AS customer_id,\n            0 AS total_claims,\n            0 AS total_claim_amount,\n            0 AS total_settlement_amount,\n            0 AS avg_days_to_settle,\n            0 AS settled_claims_count,\n            0 AS denied_claims_count,\n            CAST('2000-01-01' AS DATE) AS most_recent_claim_date,\n            'claims_processing' AS _dbt_source_project\n        WHERE 1=0\n    {% endif %}\n)\n\nSELECT\n    cr.customer_id,\n    cr.customer_name,\n    cr.email,\n    cr.city,\n    cr.state,\n    cr.age,\n    cr.months_as_customer,\n    cr.credit_score,\n    cr.credit_rating,\n    cr.claim_frequency,\n    cr.risk_score,\n    cr.age_adjusted_risk_score,\n    cr.previous_claims_count,\n    cr.risk_category,\n    cr.customer_segment,\n    -- Claims information from claims processing\n    cc.total_claims,\n    cc.total_claim_amount,\n    cc.total_settlement_amount,\n    cc.avg_days_to_settle,\n    cc.settled_claims_count,\n    cc.denied_claims_count,\n    cc.most_recent_claim_date,\n    -- Risk scoring with claim data\n    CASE\n        WHEN cc.total_claims > 0 THEN\n            cr.age_adjusted_risk_score * (1 + (cc.total_claims / 10))\n        ELSE\n            cr.age_adjusted_risk_score\n    END AS claims_adjusted_risk_score,\n    -- Denial ratio\n    CASE\n        WHEN cc.total_claims > 0 THEN \n            ROUND(cc.denied_claims_count / cc.total_claims * 100, 2)\n        ELSE 0\n    END AS claim_denial_rate,\n    -- Cross project attribution\n    cr._dbt_source_project AS risk_source,\n    cc._dbt_source_project AS claims_source,\n    -- Metadata\n    CURRENT_TIMESTAMP AS dbt_updated_at\nFROM customer_risk_enriched cr\nLEFT JOIN customer_claims cc ON cr.customer_id = cc.customer_id",
      "materialized": "table",
      "schema": "mart",
      "file_path": "models/mart/mart_customer_risk_profile.sql",
      "database": "insurance_data",
      "tags": [
        "mart",
        "customers",
        "risk",
        "daily"
      ],
      "catalog_metadata": {
        "unique_id": "model.customer_risk.mart_customer_risk_profile",
        "metadata": {
          "type": "BASE TABLE",
          "schema": "policy_management_mart",
          "name": "mart_customer_risk_profile",
          "database": "insurance_data",
          "comment": null,
          "owner": null
        }
      },
      "stats": {
        "has_stats": {
          "id": "has_stats",
          "label": "Has Stats?",
          "value": false,
          "include": false,
          "description": "Indicates whether there are statistics for this table"
        }
      },
      "ai_description": "The `mart_customer_risk_profile` dbt model in the `policy_management` project generates a customer-level risk profile. It consolidates customer data with enriched risk metrics and claim history to assess customer risk. This model materializes as a table, serving as a key output in the data pipeline for downstream analysis and reporting.  It joins data from `int_customer_risk_enriched` and, if available, claim data from the `claims_processing` project, calculating aggregated claim statistics. The model enriches the customer data with risk scores, categories, and segments, providing a comprehensive view of customer risk for policy management."
    }
  ],
  "lineage": [
    {
      "source": "c5",
      "target": "c7"
    },
    {
      "source": "c6",
      "target": "c7"
    },
    {
      "source": "c7",
      "target": "c8"
    },
    {
      "source": "c9",
      "target": "c11"
    },
    {
      "source": "c10",
      "target": "c11"
    },
    {
      "source": "c11",
      "target": "c12"
    },
    {
      "source": "c4",
      "target": "c3"
    },
    {
      "source": "c2",
      "target": "c4"
    },
    {
      "source": "c1",
      "target": "c4"
    },
    {
      "source": "p1",
      "target": "p3"
    },
    {
      "source": "p2",
      "target": "p3"
    },
    {
      "source": "p3",
      "target": "p4"
    },
    {
      "source": "p5",
      "target": "p7"
    },
    {
      "source": "p6",
      "target": "p7"
    },
    {
      "source": "p7",
      "target": "p8"
    }
  ]
}